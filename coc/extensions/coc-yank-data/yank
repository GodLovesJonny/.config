64deaedf8a6c0e72c95a0a5a2d0d4904|file:///home/godlovesjonny/LittleCppComplier.cpp|72|1|V|cpp
	#inclu
6785fca313a8ef6747fe4bcc6ebb851c|file:///home/godlovesjonny/LittleCppComplier.cpp|91|1|V|cpp
	int lookahead_type;     // type of current word
96874b83382da356e3592abb2a72ad22|file:///home/godlovesjonny/.vimrc|108|25|v|vim
	, {'tag': '*', 'do': './install.sh'}
1106f892cb7c01218bf6389650f922fa|file:///home/godlovesjonny/.vimrc|108|1|V|vim
	Plug 'neoclide/coc.nvim'
e343982cd1a07e458eb074a443ad1a1d|file:///home/godlovesjonny/.vimrc|117|23|v|vim
	upport-for-mkdp'
f7531e2d0ea27233ce00b5f01c5bf335|file:///home/godlovesjonny/1.py|1|1|V|python
	print
8f0bf9f182de3325fb9c98b656d53d39|list:/extensions|2|1|V|list
	* coc-yank	1.1.4	~/.config/coc/extensions/node_modules/coc-yank
	* coc-tailwindcss	0.3.2	~/.config/coc/extensions/node_modules/coc-tailwindcss
	* coc-sql	0.2.24	~/.config/coc/extensions/node_modules/coc-sql
	* coc-snippets	2.1.28	~/.config/coc/extensions/node_modules/coc-snippets
	* coc-pairs	1.2.21	~/.config/coc/extensions/node_modules/coc-pairs
	* coc-marketplace	1.7.0	~/.config/coc/extensions/node_modules/coc-marketplace
	* coc-lists	1.3.8	~/.config/coc/extensions/node_modules/coc-lists
	* coc-highlight	1.2.5	~/.config/coc/extensions/node_modules/coc-highlight
	* coc-gitignore	0.0.4	~/.config/coc/extensions/node_modules/coc-gitignore
	* coc-git	1.7.15	~/.config/coc/extensions/node_modules/coc-git
	* coc-emmet	1.1.4	~/.config/coc/extensions/node_modules/coc-emmet
	* coc-calc	1.6.0	~/.config/coc/extensions/node_modules/coc-calc
	* coc-browser	1.2.6	~/.config/coc/extensions/node_modules/coc-browser
	* coc-bookmark	1.2.5	~/.config/coc/extensions/node_modules/coc-bookmark
	+ coc-yaml	1.0.4	~/.config/coc/extensions/node_modules/coc-yaml
	+ coc-xml	1.11.1	~/.config/coc/extensions/node_modules/coc-xml
	+ coc-vimlsp	0.8.0	~/.config/coc/extensions/node_modules/coc-vimlsp
	+ coc-tsserver	1.5.2	~/.config/coc/extensions/node_modules/coc-tsserver
	+ coc-texlab	2.1.0	~/.config/coc/extensions/node_modules/coc-texlab
	+ coc-svg	0.0.13	~/.config/coc/extensions/node_modules/coc-svg
	+ coc-stylelint	1.1.0	~/.config/coc/extensions/node_modules/coc-stylelint
	+ coc-python	1.2.12	~/.config/coc/extensions/node_modules/coc-python
	+ coc-phpls	2.1.8	~/.config/coc/extensions/node_modules/coc-phpls
	+ coc-markdownlint	1.4.0	~/.config/coc/extensions/node_modules/coc-markdownlint
	+ coc-java	1.4.11	~/.config/coc/extensions/node_modules/coc-java
	+ coc-html	1.2.1	~/.config/coc/extensions/node_modules/coc-html
	+ coc-go	0.8.0	~/.config/coc/extensions/node_modules/coc-go
	+ coc-flutter	1.4.0	~/.config/coc/extensions/node_modules/coc-flutter
	+ coc-css	1.2.3	~/.config/coc/extensions/node_modules/coc-css
	+ coc-cmake	0.0.1	~/.config/coc/extensions/node_modules/coc-cmake
	+ coc-clangd	0.4.11	~/.config/coc/extensions/node_modules/coc-clangd
	+ coc-angular	0.901.11	~/.config/coc/extensions/node_modules/coc-angular
0427413afd34729e2046e808433a48d9|list:/extensions|2|1|V|list
	+ coc-java	1.4.11	~/.config/coc/extensions/node_modules/coc-java
d0fe61375a73366dcab38c35751eab47|list:/extensions|2|1|V|list
	Press ? on normal mode to get help.
737b533934ba2c4923efdac6c85c573c|list:/extensions|33|1|V|list
	* coc-bookmark	1.2.5	~/.config/coc/extensions/node_modules/coc-bookmark
	* coc-browser	1.2.6	~/.config/coc/extensions/node_modules/coc-browser
	* coc-calc	1.6.0	~/.config/coc/extensions/node_modules/coc-calc
	* coc-emmet	1.1.4	~/.config/coc/extensions/node_modules/coc-emmet
	* coc-git	1.7.15	~/.config/coc/extensions/node_modules/coc-git
	* coc-gitignore	0.0.4	~/.config/coc/extensions/node_modules/coc-gitignore
	* coc-highlight	1.2.5	~/.config/coc/extensions/node_modules/coc-highlight
	* coc-lists	1.3.8	~/.config/coc/extensions/node_modules/coc-lists
	* coc-marketplace	1.7.0	~/.config/coc/extensions/node_modules/coc-marketplace
	* coc-pairs	1.2.21	~/.config/coc/extensions/node_modules/coc-pairs
	* coc-snippets	2.1.28	~/.config/coc/extensions/node_modules/coc-snippets
	* coc-sql	0.2.24	~/.config/coc/extensions/node_modules/coc-sql
	* coc-tailwindcss	0.3.2	~/.config/coc/extensions/node_modules/coc-tailwindcss
	* coc-yank	1.1.4	~/.config/coc/extensions/node_modules/coc-yank
	+ coc-angular	0.901.11	~/.config/coc/extensions/node_modules/coc-angular
	+ coc-clangd	0.4.11	~/.config/coc/extensions/node_modules/coc-clangd
	+ coc-cmake	0.0.1	~/.config/coc/extensions/node_modules/coc-cmake
	+ coc-css	1.2.3	~/.config/coc/extensions/node_modules/coc-css
	+ coc-flutter	1.4.0	~/.config/coc/extensions/node_modules/coc-flutter
	+ coc-go	0.8.0	~/.config/coc/extensions/node_modules/coc-go
	+ coc-html	1.2.1	~/.config/coc/extensions/node_modules/coc-html
	+ coc-java	1.4.11	~/.config/coc/extensions/node_modules/coc-java
	+ coc-markdownlint	1.4.0	~/.config/coc/extensions/node_modules/coc-markdownlint
	+ coc-phpls	2.1.8	~/.config/coc/extensions/node_modules/coc-phpls
	+ coc-python	1.2.12	~/.config/coc/extensions/node_modules/coc-python
	+ coc-stylelint	1.1.0	~/.config/coc/extensions/node_modules/coc-stylelint
	+ coc-svg	0.0.13	~/.config/coc/extensions/node_modules/coc-svg
	+ coc-texlab	2.1.0	~/.config/coc/extensions/node_modules/coc-texlab
	+ coc-tsserver	1.5.2	~/.config/coc/extensions/node_modules/coc-tsserver
	+ coc-vimlsp	0.8.0	~/.config/coc/extensions/node_modules/coc-vimlsp
	+ coc-xml	1.11.1	~/.config/coc/extensions/node_modules/coc-xml
	+ coc-yaml	1.0.4	~/.config/coc/extensions/node_modules/coc-yaml
b5ee352ac02ed4987147780e0d3a856a|list:/extensions|2|1|V|list
	* coc-sql	0.2.24	~/.config/coc/extensions/node_modules/coc-sql
9a1e393e8893a60ec4dfa19791fda38f|list:/commands|2|1|V|list
	workspace.clearWatchman	run watch-del-all for watchman to free up memory.
	workspace.workspaceFolders	show opened workspaceFolders.
	workspace.renameCurrentFile	change current filename to a new name and reload it.
	extensions.toggleAutoUpdate	toggle auto update of extensions.
	workspace.diagnosticRelated	jump to related locations of current diagnostic.
	workspace.showOutput	open output buffer to show output from languageservers or extensions.
	document.renameCurrentWord	rename word under cursor in current buffer by use multiple cursors.
	document.jumpToNextSymbol	Jump to next symbol highlight position.
	angular.restartNgServer	Restart Angular Language server
	bookmark.toggle	create/delete a bookmark
	bookmark.annotate	create a new bookmark with annotation
	bookmark.prev	jump to the prev bookmark
	bookmark.next	jump to the next bookmark
	bookmark.clearForCurrentFile	clear bookmark for the current file
	bookmark.clearForAllFiles	clear bookmark for all files
	clearCandidates	Clear browser completion source cache
	clangd.switchSourceHeader	Switch between source/header
	clangd.symbolInfo	Resolve symbol info under the cursor
	clangd.install	Install latest clangd language server binary release
	clangd.update	Check for updates to clangd language server
	cmake.onlineHelp	CMake: Online Help
	flutter.run	Run flutter server
	flutter.attach	Attach running application
	flutter.create	Create flutter project using: flutter create project-name
	flutter.doctor	flutter doctor
	flutter.upgrade	flutter upgrade
	flutter.pub.get	flutter pub get
	flutter.devices	open devices list
	flutter.emulators	open emulators list
	git.chunkInfo	Show chunk info under cursor
	git.chunkStage	Stage current chunk.
	git.chunkUndo	Undo current chunk.
	git.showCommit	Show commit of current chunk.
	git.browserOpen	Open current line in browser, github url supported.
	git.copyUrl	Copy url of current line to clipboard, github url supported.
	git.diffCached	Show cached diff in preview window.
	git.foldUnchanged	Fold unchanged lines of current buffer.
	git.toggleGutters	Toggle git gutters in sign column.
	go.install.gomodifytags	Install / update gomodifytags
	go.install.goplay	Install / update goplay
	go.install.gopls	Install / update gopls
	go.install.gotests	Install / update gotests
	go.install.impl	Install / update impl
	go.playground	Run on go playground
	go.tags.add	Add tags to struct fields
	go.tags.add.line	Add tags to struct field in current line
	go.tags.add.prompt	Add tags to struct fields (prompt)
	go.tags.clear	Remove all tags from struct fields
	go.tags.clear.line	Remove all tags from struct fields in current line
	go.tags.remove	Remove tags from struct fields
	go.tags.remove.line	Remove tags from struct field in current line
	go.tags.remove.prompt	Remove tags from struct fields (prompt)
	go.test.generate.exported	Generate unit tests for exported functions in file
	go.test.generate.file	Generate unit tests for file
	go.test.toggle	Toggle test file
	go.version	Print extension version
	go.impl.cursor	Generate interface stubs
	java.updateLanguageServer	Download latest snapshots of jdt.ls from eclipse.org.
	java.projectConfiguration.update	Update project configuration
	java.open.serverLog	Open Java Language Server log file
	java.workspace.compile	Force Java compilation
	java.action.organizeImports	Organize Imports
	java.open.formatter.settings	Open Java formatter settings
	java.clean.workspace	Clean the Java language server workspace
	session.save	Save current vim state to session file.
	session.load	Load session by name.
	session.restart	Restart vim with current session.
	mru.validate	Validate mru files list, which remove files that doesn't exist.
	markdownlint.fixAll	Fix all errors found by markdownlint
	python.enableSourceMapSupport	Enable source map support for extension debugging
	python.sortImports	Sort Imports
	python.startREPL	Start REPL
	python.createTerminal	Create Terminal
	python.buildWorkspaceSymbols	Build Workspace Symbols
	python.execInTerminal	Run Python File in Terminal
	python.setInterpreter	Select Interpreter
	python.upgradePythonLanguageServer	Upgrade MPLS to latest stable version, restart coc.nvim required to take effect.
	python.viewOutput	Show output
	python.goToPythonObject	Go to Python Object
	python.setLinter	Select Linter
	python.enableLinting	Enable Linting
	python.runLinting	Run Linting
	snippets.editSnippets	Edit user snippets file of current document filetype.
	snippets.openSnippetFiles	Edit snippets files of current document filetype.
	sql.Format	Format sql file by sql-formatter
	svg.minifySvg	Minify SVG
	svg.prettySvg	Pretty SVG
	svg.showSvg	Preview SVG
	latex.Build	Build current LaTeX file
	latex.BuildCancel	Cancel all running builds
	latex.ForwardSearch	Performs a forward search from the current file, used to preview PDF
	latex.UpdateLanguageServer	Upgrade TexLab Server to latest version
	tsserver.reloadProjects	Reload current project
	tsserver.openTsServerLog	Open log file of tsserver.
	tsserver.goToProjectConfig	Open project config file.
	tsserver.restart	Restart tsserver
	tsserver.watchBuild	Run `tsc --watch` for current project by use vim's job feature.
	tsserver.executeAutofix	Fix autofixable problems of current document.
	xml.show.references	Show XML references
	xml.updateLanguageServer	Download latest version of LemMinX from repo.eclipse.org
	extensions.forceUpdateAll	remove all global extensions and install them
	editor.action.organizeImport	run organize import code action.
	browser.clearCandidates
	calc.calculate
	tags.generate
	yank.clean
0ebd4a3a776f82164eb6fe636cd00ba7|list:/commands|2|1|V|list
	sql.Format	Format sql file by sql-formatter
874847efc00a0cdab6288d4da7a54fd6|file:///home/godlovesjonny/Jonny/Cpps/LexicalAnalysis.cpp|193|5|V|cpp
	    whil
987ee40b7ecc4683b1750c9980f3e08c|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|30|40|v|dart
	Demo 
531081cb3c92a1febb539a49dd012afc|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|2|1|V|dart
	import 'package:package:english_words/english_words.dart';
ab9ab711326f157e049eaa8b1d807f07|file:///home/godlovesjonny/.vimrc|225|1|V|vim
	Plug 'darcula/vim'
54e39e4621bd57e5e73104bc7a787ff7|file:///home/godlovesjonny/.vimrc|71|15|v|vim
	deus
73b84ba0fa56d3826167bc2aafd7b75d|file:///home/godlovesjonny/.vimrc|71|1|V|vim
	colorscheme dracula
843539834f1a329ce2b49b64a9e25f0f|file:///home/godlovesjonny/.vimrc|263|13|v|vim
	dracula
07b5e6d7b9f848d76aa2bd830dfe9ae3|file:///home/godlovesjonny/.vimrc|276|1|V|vim
	nnoremap <LEADER>fr :!flutter run
644750e0a1aad788cd82013ddb3fce67|file:///home/godlovesjonny/.vimrc|277|20|v|vim
	<SPACE>:
6506ae39fdca9845e3a6de3865183e57|file:///home/godlovesjonny/.vimrc|276|21|v|vim
	SPACE
46d7477aadb05f7725748fb31ca60bc6|file:///home/godlovesjonny/.vimrc|277|21|v|vim
	<SPACE>:!
e7a9eb5d74a5f5c1d4ee33ecfdffa5b4|file:///home/godlovesjonny/.vimrc|278|1|V|vim
	nnoremap <LEADER>fe8 :!flutter<SPACE>emulators<SPACE>--launch<SPACE>Nexus_6_API_27<CR>
caaf1474c980c5d4315cba11affe9803|file:///home/godlovesjonny/.vimrc|333|1|V|vim
	nnoremap <LEADER>gc :!git commit -m 
faccce6fe383504b35b37baec5ac8b22|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|35|1|V|dart
	class MyHomePage extends StatefulWidget {
	  MyHomePage({Key key, this.title}) : super(key: key);
	
	  // This widget is the home page of your application. It is stateful, meaning
	  // that it has a State object (defined below) that contains fields that affect
	  // how it looks.
	
	  // This class is the configuration for the state. It holds the values (in this
	  // case the title) provided by the parent (in this case the App widget) and
	  // used by the build method of the State. Fields in a Widget subclass are
	  // always marked "final".
	
	  final String title;
	
	  @override
	  _MyHomePageState createState() => _MyHomePageState();
	}
	
	class _MyHomePageState extends State<MyHomePage> {
	  int _counter = 0;
	
	  void _incrementCounter() {
	    setState(() {
	      // This call to setState tells the Flutter framework that something has
	      // changed in this State, which causes it to rerun the build method below
	      // so that the display can reflect the updated values. If we changed
	      // _counter without calling setState(), then the build method would not be
	      // called again, and so nothing would appear to happen.
	      _counter++;
	    });
	  }
	
	  @override
	  Widget build(BuildContext context) {
	    // This method is rerun every time setState is called, for instance as done
	    // by the _incrementCounter method above.
	    //
	    // The Flutter framework has been optimized to make rerunning build methods
	    // fast, so that you can just rebuild anything that needs updating rather
	    // than having to individually change instances of widgets.
	    return Scaffold(
	      appBar: AppBar(
	        // Here we take the value from the MyHomePage object that was created by
	        // the App.build method, and use it to set our appbar title.
	        title: Text(widget.title),
	      ),
	      body: Center(
	        // Center is a layout widget. It takes a single child and positions it
	        // in the middle of the parent.
	        child: Column(
	          // Column is also a layout widget. It takes a list of children and
	          // arranges them vertically. By default, it sizes itself to fit its
	          // children horizontally, and tries to be as tall as its parent.
	          //
	          // Invoke "debug painting" (press "p" in the console, choose the
	          // "Toggle Debug Paint" action from the Flutter Inspector in Android
	          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
	          // to see the wireframe for each widget.
	          //
	          // Column has various properties to control how it sizes itself and
	          // how it positions its children. Here we use mainAxisAlignment to
	          // center the children vertically; the main axis here is the vertical
	          // axis because Columns are vertical (the cross axis would be
	          // horizontal).
	          mainAxisAlignment: MainAxisAlignment.center,
	          children: <Widget>[
	            Text(
	              'You have pushed the button this many times:',
	            ),
	            Text(
	              '$_counter',
	              style: Theme.of(context).textTheme.headline4,
	            ),
	          ],
	        ),
	      ),
	      floatingActionButton: FloatingActionButton(
	        onPressed: _incrementCounter,
	        tooltip: 'Increment',
	        child: Icon(Icons.add),
	      ), // This trailing comma makes auto-formatting nicer for build methods.
	    );
	  }
	}
4f516150fbd405cb5ca335072216e75b|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|15|1|V|dart
	        // This is the theme of your application.
	        //
	        // Try running your application with "flutter run". You'll see the
	        // application has a blue toolbar. Then, without quitting the app, try
	        // changing the primarySwatch below to Colors.green and then invoke
294c554d154b40fa7ab76c0cb6907efd|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|15|9|V|dart
	        // "hot reload" (press "r" in the console where you ran "flutter run",
c7c092cd8c71839e81b2fddd30c16ff3|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|15|9|V|dart
	        // or simply save your changes to "hot reload" in a Flutter IDE).
	        // Notice that the counter didn't reset back to zero; the application
	        // is not restarted.
28de289ace9dafaad7702e57b1712669|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|21|13|v|dart
	MyHomePage
9b0ebc2f339c19e1873e1ebe6f5b9f1a|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|21|7|V|dart
	      home: (title: 'Flutter Home Page'),
22c51c81f7c8f97bc3d736dff96135d1|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|4|1|V|dart
	void main() {
	  runApp(MyApp());
	}
1d3ec4bacfce117d4fc7998cd3091c56|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|5|1|V|dart
	class MyApp extends StatelessWidget {
	  // This widget is the root of your application.
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Flutter Demo',
	      theme: ThemeData(
	        primarySwatch: Colors.blue,
	        // This makes the visual density adapt to the platform that you run
	        // the app on. For desktop platforms, the controls will be smaller and
	        // closer together (more dense) than on mobile platforms.
	        visualDensity: VisualDensity.adaptivePlatformDensity,
	      ),
	      // home: ,
	    );
	  }
	}
7f77a3b7a6e0a0de086847ad65308c15|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|5|12|v|dart
	this.title
7f77a3b7a6e0a0de086847ad65308c15|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|5|12|v|dart
	this.title
39d744325384fd362193e7079340db6b|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|50|16|v|dart
	Example 
d5d3db1765287eef77d7927cc956f50a|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|50|16|v|dart
	title
c27689c2d4a3b27d643290efc8c0b2b4|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/pubspec.yaml|50|5|V|yaml
	    - 
885d5bebef759f0d0098938d2d2a270e|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/pubspec.yaml|50|14|v|yaml
	a_dot_burr.jpeg
e5f282090e481c23c0d5115a34ced77d|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|7|1|V|dart
	class MyApp extends StatelessWidget {
	  // This widget is the root of your application.
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Flutter Demo',
	      theme: ThemeData(
	        // This is the theme of your application.
	        //
	        // Try running your application with "flutter run". You'll see the
	        // application has a blue toolbar. Then, without quitting the app, try
	        // changing the primarySwatch below to Colors.green and then invoke
	        // "hot reload" (press "r" in the console where you ran "flutter run",
	        // or simply save your changes to "hot reload" in a Flutter IDE).
	        // Notice that the counter didn't reset back to zero; the application
	        // is not restarted.
	        primarySwatch: Colors.blue,
	        // This makes the visual density adapt to the platform that you run
	        // the app on. For desktop platforms, the controls will be smaller and
	        // closer together (more dense) than on mobile platforms.
	        visualDensity: VisualDensity.adaptivePlatformDensity,
	      ),
	      home: MyHomePage(title: 'Flutter Demo Home Page'),
	    );
	  }
	}
	
	class MyHomePage extends StatefulWidget {
	  MyHomePage({Key key, this.title}) : super(key: key);
	
	  // This widget is the home page of your application. It is stateful, meaning
	  // that it has a State object (defined below) that contains fields that affect
	  // how it looks.
	
	  // This class is the configuration for the state. It holds the values (in this
	  // case the title) provided by the parent (in this case the App widget) and
	  // used by the build method of the State. Fields in a Widget subclass are
	  // always marked "final".
	
	  final String title;
	
	  @override
	  _MyHomePageState createState() => _MyHomePageState();
	}
	
	class _MyHomePageState extends State<MyHomePage> {
	  int _counter = 0;
	
	  void _incrementCounter() {
	    setState(() {
	      // This call to setState tells the Flutter framework that something has
	      // changed in this State, which causes it to rerun the build method below
	      // so that the display can reflect the updated values. If we changed
	      // _counter without calling setState(), then the build method would not be
	      // called again, and so nothing would appear to happen.
	      _counter++;
	    });
	  }
	
	  @override
	  Widget build(BuildContext context) {
	    // This method is rerun every time setState is called, for instance as done
	    // by the _incrementCounter method above.
	    //
	    // The Flutter framework has been optimized to make rerunning build methods
	    // fast, so that you can just rebuild anything that needs updating rather
	    // than having to individually change instances of widgets.
	    return Scaffold(
	      appBar: AppBar(
	        // Here we take the value from the MyHomePage object that was created by
	        // the App.build method, and use it to set our appbar title.
	        title: Text(widget.title),
	      ),
	      body: Center(
	        // Center is a layout widget. It takes a single child and positions it
	        // in the middle of the parent.
	        child: Column(
	          // Column is also a layout widget. It takes a list of children and
	          // arranges them vertically. By default, it sizes itself to fit its
	          // children horizontally, and tries to be as tall as its parent.
	          //
	          // Invoke "debug painting" (press "p" in the console, choose the
	          // "Toggle Debug Paint" action from the Flutter Inspector in Android
	          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
	          // to see the wireframe for each widget.
	          //
	          // Column has various properties to control how it sizes itself and
	          // how it positions its children. Here we use mainAxisAlignment to
	          // center the children vertically; the main axis here is the vertical
	          // axis because Columns are vertical (the cross axis would be
	          // horizontal).
	          mainAxisAlignment: MainAxisAlignment.center,
	          children: <Widget>[
	            Text(
	              'You have pushed the button this many times:',
	            ),
	            Text(
	              '$_counter',
	              style: Theme.of(context).textTheme.headline4,
	            ),
	          ],
	        ),
	      ),
	      floatingActionButton: FloatingActionButton(
	        onPressed: _incrementCounter,
	        tooltip: 'Increment',
	        child: Icon(Icons.add),
	      ), // This trailing comma makes auto-formatting nicer for build methods.
	    );
	  }
	}
288b6e4d895616ce36825411e3cd976d|file:///home/godlovesjonny/.vimrc|337|1|V|vim
	inoremap <C-d> <Esc>dd
6f77351032b50efb6e8b0153a28edff6|file:///home/godlovesjonny/.vimrc|337|1|V|vim
	inoremap <C-d> <Esc>ddO
6ab47bc4c4faa19aefd56413d0a25841|file:///home/godlovesjonny/.vimrc|250|27|v|vim
	zathura
48480d5cb2f17c5dd2e4516380d5ba64|file:///home/godlovesjonny/.vimrc|244|1|V|vim
	Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
0a45c874058c50e5f79b0bc44db7546d|file:///home/godlovesjonny/.vim/plugged/vimtex/ftplugin/tex.vim|25|1|V|vim
	set sw=2
64171787d4c2aa9ee26447e732cd43d9|file:///home/godlovesjonny/.vim/plugged/vimtex/ftplugin/tex.vim|25|1|V|vim
	" this is mostly a matter of taste. but LaTeX looks good with just a bit
	" of indentation.
	set sw=2
	" TIP: if you write your \label's as \label{fig:something}, then if you
	" type in \ref{fig: and press <C-n> you will automatically cycle through
	" all the figure labels. Very useful!
	set iskeyword+=:
8c70e51c4ee46d8ec8526a71bfb1b6d0|file:///home/godlovesjonny/.vimrc|36|7|V|vim
	let g:pymode_python = 'python3'
	let g:pymode_rope = 0
a82fd95db10ff25dfad39f07372ebe37|file:///home/godlovesjonny/.vimrc|273|16|v|vim
	dark
2307aff9c41dec4bb4bcd985195411b2|file:///home/godlovesjonny/.vimrc|273|1|V|vim
	set background=lightblue
720ec6e338978f0a1263a99d4ba37f66|file:///home/godlovesjonny/.vimrc|132|1|V|vim
	inoremap
081c509945a02ea8b1258deed0aea4b5|file:///home/godlovesjonny/.vimrc|130|1|V|vim
	" Use <c-space> to trigger completion.
	inoremap <silent><expr> <c-space> coc#refresh()
c5151aabf7eb4157ad252c1158f0d89f|file:///home/godlovesjonny/Jonny/Cpps/LexicalAnalysis.cpp|193|3|v|cpp
	akeWord();
e79fb8b177a55b1664626d4fde6c6a98|file:///home/godlovesjonny/.vimrc|162|1|V|vim
	" ============================= Coc-Configs ================================
13dad85518090d7fed8bb55af841a78e|file:///home/godlovesjonny/.vimrc|138|1|v|vim
	nmap 
73be252ca82217b1458a25e6b4e99f15|file:///home/godlovesjonny/.vimrc|138|11|v|vim
	silent
4562f0c6401ef414ee0a674757101596|file:///home/godlovesjonny/Jonny/Cpps/LexicalAnalysis.cpp|194|5|V|cpp
	    freopen
6d0c4147a0a769592b65319695dae35d|file:///home/godlovesjonny/Jonny/Cpps/LexicalAnalysis.cpp|188|13|v|cpp
	const char *__restrict __filename
1fa711810fbe0b00f1497f249835435e|file:///home/godlovesjonny/Jonny/Cpps/LexicalAnalysis.cpp|188|5|V|cpp
	    freopen(, const char *__restrict __modes, FILE *__restrict __stream)
029705c60017edd0ea83fa07167dbb30|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|66|1|V|dart
	  runApp(new MaterialApp(
ce3f372a94d179db0a781f6d6df6f98c|file:///home/godlovesjonny/.vimrc|425|28|v|vim
	<++>
adf655bdd4f8af195793fcf79c638c78|file:///home/godlovesjonny/.vimrc|437|15|v|vim
	ER>ct
6d82031830f85bad796296536721642e|untitled:1|1|53|v|
	dcskfjiwopaoakskskkkk
	hjofhowjfksklasjfgiefjghuirehihgiohb"p'soiedowuirifi"
4f0b47d73cf661cdcb16c96119c41c73|untitled:1|1|1|V|
	forni nijdshgqfjqopgjfiejsmcnoiwoifjoejfgiehgimcasmkdhvnijhrifgjforiin rangge for in adfweifgie for main function
4db5283d09f235470553ddc366c91174|untitled:1|1|1|V|
	Weifjiejfeijfjeefoeofojfqiviqbivwbucqooqcbzgvuefbie00iafvhiasdfmsklnvbvuiearkfjejiwejfeiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiieeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeem
5cebcf1f5f5b4da2774a4d253db235bb|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/pubspec.yaml|50|5|V|yaml
	    # - images/lake.jpg
fe9a87a738a0a387c31749aff7db0af0|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|4|3|V|dart
	class MyAppBar extends StatelessWidget {
	  MyAppBar({this.title});
	
	  // Widget子类中的字段往往都会定义为"final"
	  final Widget title;
	
	  @override
	  Widget build(BuildContext context) {
	    return new Container(
	      height: 56.0, // 单位是逻辑上的像素（并非真实的像素，类似于浏览器中的像素）
	      padding: const EdgeInsets.symmetric(horizontal: 8.0),
	      decoration: new BoxDecoration(color: Colors.blue[500]),
	      // Row 是水平方向的线性布局（linear layout）
	      child: new Row(
	        //列表项的类型是 <Widget>
	        children: <Widget>[
	          new IconButton(
	            icon: new Icon(Icons.menu),
	            tooltip: 'Navigation menu',
	            onPressed: null, // null 会禁用 button
	          ),
	          // Expanded expands its child to fill the available space.
	          new Expanded(
	            child: title,
	          ),
	          new IconButton(
	            icon: new Icon(Icons.search),
	            tooltip: 'Search',
	            onPressed: null,
	          ),
	        ],
	      ),
	    );
	  }
	}
	
	class MyScaffold extends StatelessWidget {
	  @override
	  Widget build(BuildContext context) {
	    // Material 是UI呈现的“一张纸”
	    return new Material(
	      // Column is 垂直方向的线性布局.
	      child: new Column(
	        children: <Widget>[
	          new MyAppBar(
	            title: new Text(
	              'Test Title',
	              style: Theme.of(context).primaryTextTheme.title,
	            ),
	          ),
	          new Expanded(
	            child: new Center(
	              child: new Text('Hello, world!'),
	            ),
	          ),
	        ],
	      ),
	    );
	  }
	}
	
	void main() {
	  runApp(new MaterialApp(
	    title: 'My app', // used by the OS task switcher
	    home: new MyScaffold(),
	  ));
	}
9e447b053ecfaa8a43c447234decffcb|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|13|40|V|dart
	class TutorialHome extends StatelessWidget {
	  @override
	  Widget build(BuildContext context) {
	    // Scaffold is a layout for the major Material Components.
	    return Scaffold(
	      appBar: AppBar(
	        leading: IconButton(
	          icon: Icon(Icons.menu),
	          tooltip: 'Navigation menu',
	          onPressed: null,
	        ),
	        title: Text('Example title'),
	        actions: <Widget>[
	          IconButton(
	            icon: Icon(Icons.search),
	            tooltip: 'Search',
	            onPressed: null,
	          ),
	        ],
	      ),
	      // body is the majority of the screen.
	      body: Center(
	        child: Text('Hello, world!'),
	      ),
	      floatingActionButton: FloatingActionButton(
	        tooltip: 'Add', // used by assistive technologies
	        child: Icon(Icons.add),
	        onPressed: null,
	      ),
	    );
	  }
	}
fd5337a80b5f8371785542d92493be94|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|1|17|V|dart
	import 'dart:io';
	
6702c33821b579b0481932bd1ee22de7|file:///home/godlovesjonny/Jonny/FlutterDevs/startup_namer/lib/main.dart|5|1|V|dart
	void main() => runApp(new MyApp());
60a47e5c06c8c839a355d3788a220f72|file:///home/godlovesjonny/Jonny/FlutterDevs/terminal_app_test/lib/main.dart|4|1|V|dart
	void main() {
	  runApp(MaterialApp(
	    title: 'Flutter Tutorial',
	    home: TutorialHome(),
	  ));
	}
	
	class TutorialHome extends StatelessWidget {
	  @override
	  Widget build(BuildContext context) {
	    // Scaffold is a layout for the major Material Components.
	    return Scaffold(
	      appBar: AppBar(
	        leading: IconButton(
	          icon: Icon(Icons.menu),
	          tooltip: 'Navigation menu',
	          onPressed: null,
	        ),
	        title: Text('Example title'),
	        actions: <Widget>[
	          IconButton(
	            icon: Icon(Icons.search),
	            tooltip: 'Search',
	            onPressed: null,
	          ),
	        ],
	      ),
	      // body is the majority of the screen.
	      body: Center(
	        child: Text('Hello, world!'),
	      ),
	      floatingActionButton: FloatingActionButton(
	        tooltip: 'Add', // used by assistive technologies
	        child: Icon(Icons.add),
	        onPressed: null,
	      ),
	    );
	  }
	}
3928326a4632b27107ed0364ef3ddadc|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|7|14|V|dart
	class MyApp extends StatelessWidget {
	  @override
	  Widget build(BuildContext context) {
	    Widget titleSection = new Container(
	      padding: const EdgeInsets.all(32.0),
	      child: new Row(
	        children: [
	          new Expanded(
	            child: new Column(
	              crossAxisAlignment: CrossAxisAlignment.start,
	              children: [
	                new Container(
	                  padding: const EdgeInsets.only(bottom: 8.0),
	                  child: new Text(
	                    'Oeschinen Lake Campground',
	                    style: new TextStyle(
	                      fontWeight: FontWeight.bold,
	                    ),
	                  ),
	                ),
	                new Text(
	                  'Kandersteg, Switzerland',
	                  style: new TextStyle(
	                    color: Colors.grey[500],
	                  ),
	                ),
	              ],
	            ),
	          ),
	          new Icon(
	            Icons.star,
	            color: Colors.red[500],
	          ),
	          new Text('41'),
	        ],
	      ),
	    );
	
	    return new MaterialApp(
	      title: 'Flutter Demo',
	      theme: new ThemeData(
	        primarySwatch: Colors.blue,
	      ),
	    );
	  }
	}
1bf64401a4af9d6ce3c9076e2e39f8e1|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|3|13|V|dart
	// void main() {
	// runApp(MyApp());
	// }
fd9aba9986022c60c3cd3e2ff6722f1f|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|8|15|V|dart
	      return Container(
	
	      );
a07f34c1897afb25987808413e9f0fea|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/pubspec.yaml|49|1|V|yaml
	    - images/lake.jpg
97d986e2afa2c72986972e6433fbeaf9|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/pubspec.yaml|50|14|v|yaml
	lake
0176486ee3e80c8c2e364385777e0953|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/pubspec.yaml|50|1|V|yaml
	    - images/pic1.jpg
0d6f8be841134bf672b179032dd3c81f|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|36|1|V|dart
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Widget Demo',
	      home: Scaffold(
	        appBar: AppBar(
	          title: Text('Widget Demo'),
	        ),
	        body: Center(
	          child: Text('Hello World'),
	        ),
	      ),
	    );
	  }
3a55dcc859efcd55e21dfb1ebab6c741|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|15|18|v|dart
	Text('Hello World')
6d01f537df39725f6918dbd2ec300a77|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|15|18|v|dart
	_buildImageColumn(),
00b32f9a0816eafcd9e6986639221e07|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|15|11|V|dart
	          child: _buildList(),
268184c12df027f536154d099d497b31|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_learning/lib/main.dart|17|11|v|dart
	children
7de587d4c025bebff5b12589a967cd80|file:///home/godlovesjonny/Jonny/FlutterDevs/constraints_learning/lib/main.dart|13|14|V|dart
	      theme: ThemeData(
	        // This is the theme of your application.
	        //
	        // Try running your application with "flutter run". You'll see the
	        // application has a blue toolbar. Then, without quitting the app, try
	        // changing the primarySwatch below to Colors.green and then invoke
	        // "hot reload" (press "r" in the console where you ran "flutter run",
	        // or simply save your changes to "hot reload" in a Flutter IDE).
	        // Notice that the counter didn't reset back to zero; the application
	        // is not restarted.
	        primarySwatch: Colors.blue,
	        // This makes the visual density adapt to the platform that you run
	        // the app on. For desktop platforms, the controls will be smaller and
	        // closer together (more dense) than on mobile platforms.
	        visualDensity: VisualDensity.adaptivePlatformDensity,
	      ),
8ed67c51d3dc32ff912e80d788dabe1c|file:///home/godlovesjonny/Jonny/FlutterDevs/constraints_learning/lib/main.dart|11|13|v|dart
	MyHomePage(title: 'Flutter Demo Home Page')
f781d300fce1490f3481e2ab3188e726|file:///home/godlovesjonny/Jonny/FlutterDevs/constraints_learning/lib/main.dart|10|15|v|dart
	Flutter 
f0258b6685684c113bad94d91b8fa02a|file:///home/godlovesjonny/Jonny/FlutterDevs/constraints_learning/lib/main.dart|10|15|v|dart
	Demo
973e4cfb0e4bb1703e8b2281a41de54b|file:///home/godlovesjonny/Jonny/FlutterDevs/constraints_learning/lib/main.dart|1|1|V|dart
	import 'package:flutter/material.dart';
	
	// Constraints go down. Sizes go up. Parent sets position.
	void main() => runApp(MyApp());
	
	class MyApp extends StatelessWidget {
	  // This widget is the root of your application.
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Constraints Demo',
	      home: MyHomePage(title: 'Flutter Demo Home Page'),
	    );
	  }
	}
ecd1365dad1f63025f32ab20362fb2ed|file:///home/godlovesjonny/Jonny/FlutterDevs/lake_pic/lib/main.dart|1|1|V|dart
	import 'package:flutter/material.dart';
	
	void main() {
	  runApp(MyApp());
	}
	
	class MyApp extends StatelessWidget {
	  // This widget is the root of your application.
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Flutter Demo',
	      theme: ThemeData(
	        // This is the theme of your application.
	        //
	        // Try running your application with "flutter run". You'll see the
	        // application has a blue toolbar. Then, without quitting the app, try
	        // changing the primarySwatch below to Colors.green and then invoke
	        // "hot reload" (press "r" in the console where you ran "flutter run",
	        // or simply save your changes to "hot reload" in a Flutter IDE).
	        // Notice that the counter didn't reset back to zero; the application
	        // is not restarted.
	        primarySwatch: Colors.blue,
	        // This makes the visual density adapt to the platform that you run
	        // the app on. For desktop platforms, the controls will be smaller and
	        // closer together (more dense) than on mobile platforms.
	        visualDensity: VisualDensity.adaptivePlatformDensity,
	      ),
	      home: MyHomePage(title: 'Flutter Demo Home Page'),
	    );
	  }
	}
	
	class MyHomePage extends StatefulWidget {
	  MyHomePage({Key key, this.title}) : super(key: key);
	
	  // This widget is the home page of your application. It is stateful, meaning
	  // that it has a State object (defined below) that contains fields that affect
	  // how it looks.
	
	  // This class is the configuration for the state. It holds the values (in this
	  // case the title) provided by the parent (in this case the App widget) and
	  // used by the build method of the State. Fields in a Widget subclass are
	  // always marked "final".
	
	  final String title;
	
	  @override
	  _MyHomePageState createState() => _MyHomePageState();
	}
	
	class _MyHomePageState extends State<MyHomePage> {
	  int _counter = 0;
	
	  void _incrementCounter() {
	    setState(() {
	      // This call to setState tells the Flutter framework that something has
	      // changed in this State, which causes it to rerun the build method below
	      // so that the display can reflect the updated values. If we changed
	      // _counter without calling setState(), then the build method would not be
	      // called again, and so nothing would appear to happen.
	      _counter++;
	    });
	  }
	
	  @override
	  Widget build(BuildContext context) {
	    // This method is rerun every time setState is called, for instance as done
	    // by the _incrementCounter method above.
	    //
	    // The Flutter framework has been optimized to make rerunning build methods
	    // fast, so that you can just rebuild anything that needs updating rather
	    // than having to individually change instances of widgets.
	    return Scaffold(
	      appBar: AppBar(
	        // Here we take the value from the MyHomePage object that was created by
	        // the App.build method, and use it to set our appbar title.
	        title: Text(widget.title),
	      ),
	      body: Center(
	        // Center is a layout widget. It takes a single child and positions it
	        // in the middle of the parent.
	        child: Column(
	          // Column is also a layout widget. It takes a list of children and
	          // arranges them vertically. By default, it sizes itself to fit its
	          // children horizontally, and tries to be as tall as its parent.
	          //
	          // Invoke "debug painting" (press "p" in the console, choose the
	          // "Toggle Debug Paint" action from the Flutter Inspector in Android
	          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
	          // to see the wireframe for each widget.
	          //
	          // Column has various properties to control how it sizes itself and
	          // how it positions its children. Here we use mainAxisAlignment to
	          // center the children vertically; the main axis here is the vertical
	          // axis because Columns are vertical (the cross axis would be
	          // horizontal).
	          mainAxisAlignment: MainAxisAlignment.center,
	          children: <Widget>[
	            Text(
	              'You have pushed the button this many times:',
	            ),
	            Text(
	              '$_counter',
	              style: Theme.of(context).textTheme.headline4,
	            ),
	          ],
	        ),
	      ),
	      floatingActionButton: FloatingActionButton(
	        onPressed: _incrementCounter,
	        tooltip: 'Increment',
	        child: Icon(Icons.add),
	      ), // This trailing comma makes auto-formatting nicer for build methods.
	    );
	  }
	}
38c9e5539c1d5666d3989acf73f200b7|file:///home/godlovesjonny/Jonny/FlutterDevs/lake_pic/pubspec.yaml|49|14|v|yaml
	a_dot_burr
17f284794ed0d81b8c8059e8da3c04bc|file:///home/godlovesjonny/Jonny/FlutterDevs/lake_pic/lib/main.dart|51|1|V|dart
	    Color color = Theme.of(context).primaryColor;
9308bf88ed9feb99d0dca68e80840cef|file:///home/godlovesjonny/Jonny/FlutterDevs/lake_pic/lib/main.dart|51|37|v|dart
	primaryColor
e61c1bb6e961daf39ca44ea421aeb735|file:///home/godlovesjonny/Jonny/FlutterDevs/lake_pic/lib/main.dart|51|5|V|dart
	    Color color = Theme.of(context).primaryColorDar;
24b3ec3456cd0e305e5ae3fac4c9d4e3|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|8|1|V|dart
	  // This widget is the root of your application.
	  @override
	  Widget build(BuildContext context) {
	    return MaterialApp(
	      title: 'Flutter Demo',
	      theme: ThemeData(
	        // This is the theme of your application.
	        //
	        // Try running your application with "flutter run". You'll see the
	        // application has a blue toolbar. Then, without quitting the app, try
	        // changing the primarySwatch below to Colors.green and then invoke
	        // "hot reload" (press "r" in the console where you ran "flutter run",
	        // or simply save your changes to "hot reload" in a Flutter IDE).
	        // Notice that the counter didn't reset back to zero; the application
	        // is not restarted.
	        primarySwatch: Colors.blue,
	        // This makes the visual density adapt to the platform that you run
	        // the app on. For desktop platforms, the controls will be smaller and
	        // closer together (more dense) than on mobile platforms.
	        visualDensity: VisualDensity.adaptivePlatformDensity,
	      ),
	      home: MyHomePage(title: 'Flutter Demo Home Page'),
	    );
	  }
	}
	
	class MyHomePage extends StatefulWidget {
	  MyHomePage({Key key, this.title}) : super(key: key);
	
	  // This widget is the home page of your application. It is stateful, meaning
	  // that it has a State object (defined below) that contains fields that affect
	  // how it looks.
	
	  // This class is the configuration for the state. It holds the values (in this
	  // case the title) provided by the parent (in this case the App widget) and
	  // used by the build method of the State. Fields in a Widget subclass are
	  // always marked "final".
	
	  final String title;
	
	  @override
	  _MyHomePageState createState() => _MyHomePageState();
	}
	
	class _MyHomePageState extends State<MyHomePage> {
	  int _counter = 0;
	
	  void _incrementCounter() {
	    setState(() {
	      // This call to setState tells the Flutter framework that something has
	      // changed in this State, which causes it to rerun the build method below
	      // so that the display can reflect the updated values. If we changed
	      // _counter without calling setState(), then the build method would not be
	      // called again, and so nothing would appear to happen.
	      _counter++;
	    });
	  }
	
	  @override
	  Widget build(BuildContext context) {
	    // This method is rerun every time setState is called, for instance as done
	    // by the _incrementCounter method above.
	    //
	    // The Flutter framework has been optimized to make rerunning build methods
	    // fast, so that you can just rebuild anything that needs updating rather
	    // than having to individually change instances of widgets.
	    return Scaffold(
	      appBar: AppBar(
	        // Here we take the value from the MyHomePage object that was created by
	        // the App.build method, and use it to set our appbar title.
	        title: Text(widget.title),
	      ),
	      body: Center(
	        // Center is a layout widget. It takes a single child and positions it
	        // in the middle of the parent.
	        child: Column(
	          // Column is also a layout widget. It takes a list of children and
	          // arranges them vertically. By default, it sizes itself to fit its
	          // children horizontally, and tries to be as tall as its parent.
	          //
	          // Invoke "debug painting" (press "p" in the console, choose the
	          // "Toggle Debug Paint" action from the Flutter Inspector in Android
	          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
	          // to see the wireframe for each widget.
	          //
	          // Column has various properties to control how it sizes itself and
	          // how it positions its children. Here we use mainAxisAlignment to
	          // center the children vertically; the main axis here is the vertical
	          // axis because Columns are vertical (the cross axis would be
	          // horizontal).
	          mainAxisAlignment: MainAxisAlignment.center,
	          children: <Widget>[
	            Text(
	              'You have pushed the button this many times:',
	            ),
	            Text(
	              '$_counter',
	              style: Theme.of(context).textTheme.headline4,
	            ),
	          ],
	        ),
	      ),
	      floatingActionButton: FloatingActionButton(
	        onPressed: _incrementCounter,
	        tooltip: 'Increment',
	        child: Icon(Icons.add),
	      ), // This trailing comma makes auto-formatting nicer for build methods.
	    );
	  }
	}
5a7051ff1394cd61501a8f8dca940ba5|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|19|1|V|dart
	      setState
9ba9a8e5898767a25bb4f2de8bb0f382|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|50|15|v|dart
	Center(
	          child: TapboxA(),
	        ),
	
a9473ded85aa51851deb4859cdd53f98|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|107|16|V|dart
	                
85fcf87faf3b71b32ece4e46d6a7f1f6|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|111|1|V|dart
	                Center
2e6871e00b117f5ad0b71ac6955b714e|file:///home/godlovesjonny/Jonny/FlutterDevs/widget_state_learning/lib/main.dart|106|14|V|dart
	        body: Container(
	          child: Center(
	            child: TapboxA(),
	          ),
	        ),
b1d344b0cd15625f976c5f2f77a20661|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/main.dart|4|1|V|dart
	void main() {
	  runApp(MyApp());
	}
	
a618221961d8212a82159420f00afc49|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/main.dart|28|5|V|dart
	class MyHomePage extends StatefulWidget {
	
	}
b2a34d35ac20bca6cdbb1cd1dc556984|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|16|1|V|dart
	      floatingActionButton: new FloatingActionButton(
	        onPressed: () {
	          Navigator.of(context).pop();
	        },
	        child: new Icon(Icons.replay),
113bd289dd7786bd2ab8f9d24607016d|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|16|1|V|dart
	      floatingActionButton: new FloatingActionButton(
	        onPressed: () {
	          Navigator.of(context).pop();
	        },
	        child: new Icon(Icons.replay),
	      ),
b2dbeb695fa205804b1e5e72650ad2bb|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|26|31|v|dart
	replay
848b385ecaf0e78ba8d6af9ddb10cc3c|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/main.dart|49|1|V|dart
	          // Navigator.push(
	          // context,
	          // MaterialPageRoute(builder: (context) => SecondPage()),
	          // );
a127fd1f86e4ab650f2216f09992afa4|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|16|6|V|dart
	      
bce2beed7ff93a24a5b13ba17d71759c|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|19|15|V|dart
	      new FloatingActionButton(
	        onPressed: () {
	          Navigator.of(context).pop();
	        },
	        child: new Icon(Icons.replay),
	      ),
146dbf942f3b875385bd75c720ef0189|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|26|7|V|dart
	      floatingActionButton: new FloatingActionButton(
	        onPressed: () {
	          // Navigator.of(context).pop();
	          Navigator.push(
	            context,
	            MaterialPageRoute(builder: (context) => SecondPage()),
	          );
	        },
	        child: new Icon(Icons.open_in_new),
	      ),
7747e0dd8364c935b59c46a79889cb83|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|24|7|v|dart
	floatingActionButton
2187e1021a911b3807cc1bea2eb1a9ca|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|16|29|v|dart
	Stack
f4a82305f28150727cba859d1c516c60|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|17|15|V|dart
	              Padding(padding: EdgeInsets.only(bottom:80),
a6d0a462a42e81fb2ef44b0b736d13a9|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|17|9|v|dart
	children: [
	          new FloatingActionButton(
	            heroTag: 'btn_back',
	            onPressed: () {
	              Navigator.of(context).pop();
	            },
	            child: new Icon(Icons.replay),
	          ),
	
e5046ed795541f6a71b4a3a1d06ff3b8|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|18|11|v|dart
	new FloatingActionButton(
	            heroTag: 'btn_back',
	            onPressed: () {
	              Navigator.of(context).pop();
	            },
	            child: new Icon(Icons.replay),
	          ),
	
5f72c22c87f8fc61b81cd6e92c127d54|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|35|1|V|dart
	      /
d5a07822b3e7a9ee77bda36070aeb2a5|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|40|1|V|dart
	        // heroTag: 'btn_back',
	        // onPressed: () {
	        // Navigator.of(context).pop();
	        // },
	        // child: new Icon(Icons.replay),
	        // ),
b818eb2f16bb0168293dc7443f96b3ac|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|29|9|V|dart
	                heroTag: "btn1",
3ccf2eac3cca5e43dcc7241a7fc45b4f|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|29|17|V|dart
	                onPressed: () {},
fbd9e8cd7b0c21ab07e741cf3a584c92|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|29|17|V|dart
	                child: Icon(Icons.camera_alt),
7dda6d79657154511906b2246986a0fb|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|28|9|V|dart
	        ),
e0027e0d646db3af6b706424c7bf5601|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|49|1|V|dart
	        // heroTag: 'btn_new',
	        // onPressed: () {
	        // // Navigator.of(context).pop();
	        // Navigator.push(
	        // context,
	        // MaterialPageRoute(builder: (context) => SecondPage()),
	        // );
	        // },
	        // child: new Icon(Icons.open_in_new),
ce246beed2dac25cbdcb7146cb438fd6|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|43|9|V|dart
	              heroTag: "btn2",
d4b83e069b9555d3d597198cfa014a63|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|43|15|V|dart
	              onPressed: () {},
c16829004358b887873fa00f83c83f86|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|43|15|V|dart
	              child: Icon(Icons.add_photo_alternate),
e07b86256a1790eec123c3ed24c9dcff|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|46|16|V|dart
	        // children: [
	        // new FloatingActionButton(
	        // heroTag: 'btn_back',
	        // onPressed: () {
	        // Navigator.of(context).pop();
	        // },
	        // child: new Icon(Icons.replay),
	        // ),
	        // new FloatingActionButton(
	        // heroTag: 'btn_new',
	        // onPressed: () {
	        // // Navigator.of(context).pop();
	        // Navigator.push(
	        // context,
	        // MaterialPageRoute(builder: (context) => SecondPage()),
	        // );
	        // },
	        // child: new Icon(Icons.open_in_new),
	        // ),
	        // ],
e6bc2a9f5b41e14cf7b0777b4a89e6c7|file:///home/godlovesjonny/Jonny/FlutterDevs/router_learning/lib/NewRouter.dart|39|59|v|dart
	return 
272f0a04b740763e0a29316bc4af89a4|file:///home/godlovesjonny/Jonny/FlutterDevs/state_learning/pubspec.yaml|36|14|v|yaml
	3.0.0
466453ee7e4eda065bf8898e6441906a|file:///home/godlovesjonny/.vimrc|355|1|V|vim
	let g:tex_flavor='latex'
f52004ff21fcfe360621c8a8f42f05ea|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|5|1|V|text
	Reviewer Comments:
c4a26895c03508ac85b982c5f0bbc55e|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|9|1|V|text
	This paper presents an Inner-cross-modal Attentional Multi-granular Network (IMG-Net for description-based person re-identification. The idea is reasonable and experiments have shown the improvement. Some major issued need to be addressed in the revision:
53656cd84a440d7f4dcae96f6ab30a8f|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|16|1|V|text
	Because of the modality heterogeneity, it is a tough work to measure the cross-modal similarity between images and text descriptions. To capture the meaningful information from the within-part and semantic information among body parts, the IMG-Net was proposed in this paper. The test results show that the proposed outperforms other previous methods significantly. There are still some problems or doubts in this paper, and the suggestions are given as follows:
97a141018ca70832ba341a5fe9ed290e|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|25|1|V|text
	This paper proposes a text-based person re-identification that utilizes global and local features of image and text for multi-granular matching. To do so, the paper introduces two modules: 1) inner-model self-attention module, using a spatial-wise and a channel-wise attention to refine deep feature map, and 2) cross-model hard-region attention module to obtain multi-granular visual representation and phrase representation. Furthermore, the paper employs Group Normalization to replace the Batch Normalization. Ablation studies are conducted to assess the impact of the different modules. Finally, a comparison with the recent state-of-the-arts shows small growth.
2382273f357d0dbd905efe4662bfe282|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|24|1|V|text
	The strengths of the proposed method:
	1) This paper is easy to read, with a clear and detailed structure.
	2) Ablation analysis is abundant and adequate.
	3) The measure of matching visual and textual information via three different cross-modal combinations including global2sentence, local2sentence and global2phrase seems make sense.
ded9e7857f24e4b3216d6897034c9a6d|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|24|1|V|text
	The weakness of the prosed method:
8a3ad6e54bfcde6e53e0bc1bad879a91|file:///home/godlovesjonny/Jonny/to_solve.txt|2|14|V|text
	2. future work
	3.
011013f0cb7aabf1048271fec142b77f|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|9|128|v|text
	Specific Person Retrieval via Incomplete Text Descriptio
dcdcef906e969e044158b181080a2e9a|file:///home/godlovesjonny/Jonny/IMGNet_reviews.txt|9|128|v|text
	Specific Person Retrieval via Incomplete Text Description"
c2ead9a2281754d813a3c85003afdcc2|file:///home/godlovesjonny/Jonny/to_solve.txt|25|24|V|text
	1. attention comparision
	2. major challenge
	3. model figure modify
	4. introduction
	5. future work
	6. feature visualization
	7. technical contribution
60efb79266deeabec69a5c47bcb1033b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|82|1|V|markdown
	![74](/images/2020/01/wallpaper/74.jpg)
aeab770dc814dcad61bbeea32fb53fbd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|84|1|V|markdown
	![76](/images/2020/01/wallpaper/76.jpg)
a313e3161680648e058c0bbb2150d923|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|90|1|V|markdown
	![82](/images/2020/01/wallpaper/82.jpg)
1596cdb6c5aecd17795a42f79c9d6c1f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|93|1|V|markdown
	![85](/images/2020/01/wallpaper/85.jpg)
f214e76e81d85cb40d74a31b32b8c9b4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|99|1|V|markdown
	![91](/images/2020/01/wallpaper/91.png)
9f20120b1dde32a3e02cdf36562cad40|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|103|1|V|markdown
	![95](/images/2020/01/wallpaper/95.png)
76759ae28611468b1c35fb709d3751ca|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|104|1|V|markdown
	![96](/images/2020/01/wallpaper/96.png)
76601aaef21d5f0c6cc5aeaf44027016|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|109|1|V|markdown
	![101](/images/2020/01/wallpaper/101.png)
2180335061c48260c1c9a562b17ec760|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|100|9|V|html
	        <p>🔭 Undergraduate at NjTech University.</p>
2c6ac43df1e275a25e3aa5e77c0681fe|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|103|1|V|html
	 📫 The best way to reach me is to send me an email.
	+ ⚡ Welcome to visit [My Blog](http://jonathanwayy.xyz/).</p>
49b0af6055cb790dedf377e148f77322|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|103|9|V|html
	        <p>Coder, Vimer, CVer.</p>
67e3cf75dc71be5a49afe59b02fd5cb8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|104|1|V|html
	+ ⚡ Welcome to visit [My Blog](http://jonathanwayy.xyz/).</p>
d52e14ffb22bd2789e2d87b9bf99056c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|103|3|V|html
	  The best way to reach me is to send me an email.
af432e1587d6544310f7bd1626fd3ee1|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|123|40|v|html
	GodLovesJonny
ed3eb75329d8f37114ab78db39eb20cb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Mask-Wearing.md|4|1|V|markdown
	categories: ["Alchemy Of CV"]
b326b5062b2f0e69046810717534cb09|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Car-Plate.md|6|8|v|markdown
	true
d66ce975ffc61dfd1a81fd3d6484a15c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Car-Plate.md|2|9|v|markdown
	Car 
bc9a8055ff921d3d9c876ff6eb02fddb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Car-Plate.md|2|9|v|markdown
	Plate
68934a3e9455fa72420237eb05902327|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Car-Plate.md|6|8|v|markdown
	false
3de72ca5fc1e1d9b81e0b6b7ae108d8d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Eng-KY1.md|4|15|v|markdown
	English 
3398fe65ad1c1a74cbec4002d21698f5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL30.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
ff2364a0be3d20e46cc69efb36afe9a5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL31.md|36|4|v|markdown
	space
23be5da22193ca74d2bf7c6a5322a0a6|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/kali1.md|2|9|v|markdown
	Kali1
3f350cfb81faed6f2a8d506930d6a8e9|file:///home/godlovesjonny/Jonny/Penetration-Testing/kali/%E8%AF%BE%E6%97%B61%20Kali%20Linux%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BB%8B%E7%BB%8D.txt|1|9|v|text
	Kali Linux渗透测试介绍 
f7e4a38a92186fbdfed3d8d16b6fcf82|file:///home/godlovesjonny/Jonny/Penetration-Testing/kali/%E8%AF%BE%E6%97%B61%20Kali%20Linux%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BB%8B%E7%BB%8D.txt|2|1|V|text
	    安全问题的根源
	        优点：分工明确，工作效率高。
	        缺点：从业人员对系统没有整体的认识，对安全认识较为片面。
	        最大威胁是人，人都会犯错，安全问题不能100%绝对根除。
	   安全目标
	        先于攻击者发现和防止漏洞出现
	        攻击型：以攻击者的思维发现漏洞、攻击系统。
	        防护型:投入巨大，会有遗漏，不够全面，收效不高。
	    渗透测试
	        尝试破解系统防御机制，发现系统弱点
	        从攻击者的角度思考，测量安全防护的有效性
	        证明问题存在，而不是破坏
	        道德约束、法律
	        不局限于一台机器出现的问题，而着眼漏洞对整个系统的影响与危害
	    渗透测试标准
	        PETS (http://www.pentest-standard.org)
	        前期交互（客户沟通，确定渗透测试范围，对应用系统渗透任务划分，包括支撑整个系统的各种软件组件）
	        情报收集（收集目标系统信息，被动收集与主动探测）
	        威胁建模（根据收集到的信息，确定最有效，最有可能成功的攻击途径）
	        漏洞分析（通过系统软件版本分析，系统应用漏洞分析写出漏洞利用代码）
	        渗透攻击阶段（并不像想象中那么顺利，目标系统有防护系统）
	        后渗透测试阶段（以一台被渗透机器为跳板，进一步渗透整个系统）
	        渗透测试报告（向客户和其他同事证明系统可以被控制，描述发现、利用过程，以及如何解决）
	    渗透测试项目
	        测试范围（整个应用系统）
	        客户授权（允许攻击还是只是渗透都取决于客户的授权）
	        渗透测试方法
	        是否允许社会工程学攻击
	        是否允许DOS攻击
	    渗透测试误区
	        扫描器就是一切（不能忽略业务逻辑的漏洞。自动化技术扫描工具有他的适用范围，对业务逻辑的漏洞也是无能为力。扫描器是辅助工具）
	    KALI
	        字面意思“黑色”，音译“咖利”，印度神话中最为黑暗和暴虐的黑色地母。
	        Kali Linux中的Kali用意估计取自“黑色”的意思。
	    Kali Linux
	        基于Debian的发行版本，在其基础上添加了许多信息安全工具，用于渗透测试和安全审计
	        所有Linux发行版本都遵循的FHS标准目录结构（BT pentest目录中工具分类困难，工具难以更新）
	        定制内核（主要解决无线渗透测试出现各种错误的问题）
	        支持ARM、手机平台（NetHunter）
	        Open Source Free-Offensive Security
	    Kali Linux策略
	
	    Root用户策略（不同于普通Linux系统小心翼翼的使用方式）
	    网络服务策略（默认关闭所有网络服务，自启动脚本默认关闭）
	    更新升级策略（Debian + KALI官方）
	
	实践是最好的老师，Kali很强大，但不是全部。这只是关于渗透测试的起点。
774e30c27de979004e237b9d45283a25|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/kali1.md|29|1|V|markdown
	    前期交互（客户沟通，确定渗透测试范围，对应用系统渗透任务划分，包括支撑整个系统的各种软件组件）
da2ae5f84fd1c5303f87c02707e63051|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/kali1.md|35|1|V|markdown
	    渗透测试报告（向客户和其他同事证明系统可以被控制，描述发现、利用过程，以及如何解决）
547b03cf990eb19080c8110356b0ee07|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/kali1.md|4|1|V|markdown
	categories: ["White Hat Struggling"]
	tags: ["kali", "linux", "white hat", "penetration testing", "notes"]
79e5da3801f7a4bccd46e91b258ad5fd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/kali2.md|2|9|v|markdown
	Kali2
32056b6c30b6bf893b7168bb5c5b479f|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/CaseFile.md|1|1|V|markdown
	---
	title: CaseFile
	categories: Information Gathering
	tags: [information gathering,casefile,recon,kali linux,reporting]
	date: 2016-10-19 07:54:25
	---
c641b886168d8453ace77d0fadf7ffd9|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/SET.md|2|8|v|markdown
	CaseFile
bcd8b0d7362d24d1c0c711d3cc7a6da5|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/SET.md|4|30|v|markdown
	casefile
c576a841fd4f333a6f074d68e76a1d37|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/SET.md|4|51|v|markdown
	reporting
1a1bc75936666095fffebc6b8db9281c|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/SET.md|4|33|v|markdown
	recon
c017a3d781b1ea9f93ba03abbd7e014f|file:///home/godlovesjonny/intro.md|1|1|V|markdown
	Hello, my name is Wang Zijie and I'm from Suzhou. I currently stuty at Nanjing Tech University and i'm majoring in Computer Science And Technology.
602cecfd70d854eab97478a9fb0baff7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL12.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
	tags: ["Manjaro", "Linux"]
3b58159e54ab8effd7b41559a7e273cf|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL31.md|5|9|v|markdown
	Manjaro
93cb0903454d7f88acb4bf812cf415b3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL31.md|16|5|V|markdown
	    jsaf
01a35d0312f5b5c596dd373e6568a453|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL31.md|15|1|V|markdown
	$ > git remote -v
d4465c9f687675bacbdfc2ef172ba6dd|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|17|1|V|markdown
	There are numerous [Vim resources available online][3]. We have covered some Vim tricks on It’s FOSS as well. Apart from online resources, plenty of books have been dedicated to this editor as well. Today, we will look at one of such book that is designed to make Vim easy for most users to understand. The book we will be discussing is [A Byte of Vim][4] by [Swaroop C H][5].
bfa089c58b9aef30c600515d6f170d6b|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|19|1|V|markdown
	The author [Swaroop C H][6] has worked in computing for over a decade. He previously worked at Yahoo and Adobe. Out of college, he made money by selling Linux CDs. He started a number of businesses, including an iPod charger named ion. He is currently an engineering manager for the AI team at [Helpshift][7].
051c454129b291b98c93f9d2e8dc554b|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|25|1|V|markdown
	Like all good books, A Byte of Vim starts by talking about what Vim is: “a computer program used for writing any kind of text”. He does on to say, “What makes Vim special is that it is one of those few software which is both simple and powerful.”
b71c98834caa8ce7f868857e082baa25|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|27|1|V|markdown
	Before diving into telling how to use Vim, Swaroop tells the reader how to install Vim for Windows, Mac, Linux, and BSD. Once the installation is complete, he runs you through how to launch Vim and how to create your first file.
8fd986d02742e82b6ad2c91572affb69|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|29|1|V|markdown
	Next, Swaroop discusses the different modes of Vim and how to navigate around your document using Vim’s keyboard shortcuts. This is followed by the basics of editing a document with Vim, including the Vim version of cut/copy/paste and undo/redo.
8e6bf5f10d3f2f7ee725f0371e5b2f74|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|31|1|V|markdown
	Once the editing basics are covered, Swaroop talks about using Vim to edit multiple parts of a single document. You can also multiple tabs and windows to edit multiple documents at the same time.
abef6c1ee75c7d83abfa9e6d352e3d90|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|37|1|V|markdown
	The book also covers extending the functionality of Vim through scripting and installing plugins. There are two ways to using scripts in Vim, use Vim’s built-in scripting language or using a programming language like Python or Perl to access Vim’s internals. There are five types of Vim plugins that can be written or downloaded: vimrc, global plugin, filetype plugin, syntax highlighting plugin, and compiler plugin.
0686d3f6e7fe57d7dbc3a8e0330619ce|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|39|1|V|markdown
	In a separate section, Swaroop C H covers the features of Vim that make it good for programming. These features include syntax highlighting, smart indentation, support for shell commands, omnicompletion, and the ability to be used as an IDE.
26e238145d539e6a0a9b35b5e803b19d|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|41|1|V|markdown
	#### Getting the ‘A Byte of Vim’ book and contributing to it
64f26ed2c7d080365f7280e24ada4389|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|43|1|V|markdown
	A Byte of Book is licensed under [Creative Commons 4.0][10]. You can read an online version of the book for free on [the author’s website][4]. You can also download a [PDF][11], [Epub][12], or [Mobi][13] for free.
05df8646c0fed2b9371e75239d5c49f6|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|47|1|V|markdown
	If you prefer reading a [hard copy][14], you have that option, as well.
69cc28a36c391a84b256f4459f135859|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|49|1|V|markdown
	Please note that the _**original version of A Byte of Vim was written in 2008**_ and converted to PDf. Unfortunately, Swaroop C H lost the original source files and he is working to convert the book to [Markdown][15]. If you would like to help, please visit the [book’s GitHub page][16].
bbf0ddb3d4e4e596e6bdd69ccb084f8c|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|50|76|v|markdown
	Price               
eea7f5d71266df0761eb40032fd578d5|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|52|62|v|markdown
	$34.00[][19] | 
f03bb7b55d569f63fd270bee22d9cbc3|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|50|3|v|markdown
	Preview                                                  
6f8b794f3246b0c1e1780bb4d4d5dc53|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|54|6|v|markdown
	Conclusion
878a89f8f906d360b5d9a073e5dcb054|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|58|1|V|markdown
	When I first stared into the angry maw that is Vim, I did not have a clue what to do. I wish that I had known about A Byte of Vim then. This book is a good resource for anyone learning about Linux, especially if you are getting into the command line.
5a4697b88c30c2894d06f69862aee127|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|58|165|v|markdown
	在下面的评论中让我们知道。
4c1cf8b5a0c8cc4cc8fdedcea35590b9|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|60|1|V|markdown
	Have you read [A Byte of Vim][4] by Swaroop C H? If yes, how do you find it? If not, what is your favorite book on an open source topic? Let us know in the comments below.
bc24378627e3fdd9ae3652e9cd631428|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|62|1|v|markdown
	Suggested 
fec8b4f6b2b5b19911dc721674e52a6f|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|62|1|v|markdown
	read  
7f7b0d9f1ddfe4e946a8f874df9e69fa|file:///home/godlovesjonny/Jonny/Linux-cn-Translation/20190624.md|65|1|V|markdown
	If you found this article interesting, please take a minute to share it on social media, Hacker News or [Reddit][22].
91dbe94ff12d585b1247a95507416842|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/iSMTP.md|2|8|v|markdown
	iSMTP
787c75233b93aa5e45c3f85d130bfbe7|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/iSMTP.md|4|8|v|markdown
	smtp
50b6416c50a7d3793e6172a8514a0576|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/iSMTP.md|4|8|v|markdown
	sniffing
abb7e14c7ed09771168643a17c41864d|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/iSMTP.md|4|8|v|markdown
	spoofing
c64518704ce0c0d5501a45763f464276|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|28|1|v|markdown
	Usage
dae8ace18bdcbcc6ae5aece263e14fe8|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|30|1|v|markdown
	Options
6cf06d2a229c97bdf07ad1451f7be6f2|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|33|35|v|markdown
	Log all SSL traffic to and from server.
08fec594c4be443ecef54ff2c89d291c|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|34|35|v|markdown
	Log all SSL and HTTP traffic to and from server.
b362a9cd4c97466ce5ebb42a35ffbe8d|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|35|35|v|markdown
	Port 
f1d0cb4fa84be5f62996a3e80ace6581|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|35|35|v|markdown
	listen 
573e07c34b4049b1f1b38f366455543a|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|36|35|v|markdown
	Substitute a lock favicon on secure requests.
c3a6a19cab1f85dc75aba6558f802884|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|37|35|v|markdown
	Kill sessions in progress.
e800af7ac2b51b12f86fe2084c596b98|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/sslstrip.md|38|35|v|markdown
	Print this help message.
6abcb0792436a4d01795f8f333b57548|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/list.md|12|52|v|markdown
	slstrip
dbdd43b8393fc0114ff522a699c90e69|file:///home/godlovesjonny/Jonny/Penetration-Testing/kalitools/Information%20Gathering/list.md|12|51|v|markdown
	sslstrip
577d444225e397bc7f8988898d5b60ee|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/public/404.html|133|1|V|html
	  var emojiArray = [
	    '\\(o_o)/', '(o^^)o', '(˚Δ˚)b', '(^-^*)', '(≥o≤)', '(^_^)b', '(·_·)',
	    '(=\'X\'=)', '(>_<)', '(;-;)', '\\(^Д^)/',
	  ];
92294c618e3dc55849832b6033a6bb31|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|114|1|V|markdown
	![106](/images/2020/01/wallpaper/106.png)
6673bdae20df821d905e94d9f4b3760a|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|402|40|v|markdown
	dwID
63788519f83975fea084e186a9dae35b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|10|1|V|markdown
	Command Line Heroes: Season 2: Ready to Commit
bd8a3b8e0aa4e943e9209c3aecba7d7c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|22|1|V|markdown
	我只是真不知道作出贡献那么容易。而且你不需要解决P=MP问题，你的投入依然很有价值。  
b1642c429020d32652d88e8c23848440|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|77|49|v|markdown
	命令行英雄
a74aafaf1b969bd16b76002b8ddbde2e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|119|1|V|markdown
	我们看到它们存在许多进入壁垒，但我们喜欢称它们为“没有充分的理由”。没有三个充分的理由使妇女专门脱离技术。它们是：刻板印象，它们是可访问性和环境。
4888b7e8a7093a0ebb1d1eaae88a014d|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|587|13|v|markdown
	（Command Line Heroes）是
c287cb70d2636d0fc792accfdf066af0|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC.md|77|67|v|markdown
	（Command Line Heroes）
defbb77c63afc37c8723056affde894a|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|14|1|V|markdown
	When I started out doing software development, I was mostly just making little projects that amused me, little apps, little command-line tools, and stuff like that.
	
9afd64684bdeff88c0a1ae05e3487422|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|18|1|V|markdown
	I just really didn't know that it was so easy to contribute and that you don't need to have solved P=MP, your input can still be valuable.
	
9832367f840f45566aafb3f48c61d3fe|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|26|1|V|markdown
	Local communities made me confident enough to contribute.
	
95c684ef8f1fbcdddf12f3363d574a1f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|30|1|V|markdown
	When I was a total newbie to programming, I teamed up with my friend Dan to make my very first open source pull request (PR), which would also make it my very first open source contribution.
	
7a809c9eedb0afd2b0c4827b5c9460dc|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|34|1|V|markdown
	I'd heard so much about contributing to open source, about how amazing it was, but also how completely terrifying. I was very aware, not all communities are kind and not all maintainers are nice.
	
d8e0fad493b9cba5cb3c0e18cef5378f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|38|1|V|markdown
	The project itself was a pretty good one for a first timer. We were just adding a JavaScript library, something to let people get a digital walkthrough of the website. Just a nice well–scoped project. Self–contained. Bonus, if the thing didn't work, I was almost positive it wouldn't burn down the whole site.
12595896e5673b5c23be076f19ff8a64|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|41|1|V|markdown
	Yet, I was crazy nervous about this pull request. Dan and I read the docs for the library, plugged away at our code. I still remember when we were finally done, we just looked at each other like, "That's it?" We made our PR, it was reviewed, got merged, and I guess I was surprised by how, I don't know, how mechanical it all was.
19b2b00f95f3e16552d0fba86094351a|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|46|147|V|markdown
	It wasn't some big mystery or magical thing that only they could do. I realized, I really could contribute, too. That's a bit of knowledge we're passing on in this episode; making a contribution to open source isn't magic. It doesn't have to be terrifying. We're going to walk through this together.
	
b8d0d49757a68a378dea009091a3c1ef|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|50|1|V|markdown
	It was just such a groundbreaking realization that this is actually totally open, I can just do this.
	
418c755e9b659bc57267777f4be34ca2|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|54|1|V|markdown
	In that opener, you heard from command line heroes, just like you, who push through that same terror to join the ranks of open source. They were Nolan Lawson, Lindsey Tulloch, and Kanika Muraka, all heroes.
	
11defd0360b7491d9200981d11bc8fdc|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|54|1|V|markdown
	In that opener, you heard from command line heroes, just like you, who push through that same terror to join the ranks of open source. They were Nolan Lawson, Lindsey Tulloch, and Kanika Muraka, all heroes.
820cd900031c575e9d050ef6fd00b9f8|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|58|1|V|markdown
	You're listening to Command Line Heroes, an original podcast from Red Hat. I'm your host, Saron Yitbarek.
	
a10e2158bebbecf3f24b8d1e12d228b9|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|62|1|V|markdown
	This is a story about two command line heroes just trying to make something better in the big open source world. One of them is a contributor, the other's a maintainer. Neither of them are real people, instead these two fictional characters represent all the contributors and all the maintainers that shared their stories with us. Hopefully, you'll see some of yourself in their journey, too.
	
5310055e9948b862d879056721c0597b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|66|1|V|markdown
	First meet our friend, the contributor. She's a bit of a newbie, just like we all were once upon a time. She's not sure about what the basic workflow is, but she sees a need and she thinks she can add a feature that would help. Our imaginary contributor is keen to make that fix, but how?
	
e155fe28d7552f25022cd200c280098b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|70|1|V|markdown
	You're always growing new skills and you don't have to have taken apart a computer as a child to know how to code as an adult.
	
5a07eeb13af933a69ff417e6a80231f5|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|74|99|V|markdown
	That's Corinne Warnshuis, the executive director of an awesome organization called Girl Develop It. It's designed to help women who maybe don't feel super comfortable asking questions or may not feel entirely welcome at meetups.
	
173d7a95c39c046ad0711fa082bac1a5|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|78|1|V|markdown
	Girl Develop It realized that making contributions isn't the same for everybody; culture matters. Part of our job as a community is to build a little empathy and healthy diversity into the process.
	
6fda5c29be6f7807a58d37f852def4e7|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|82|33|V|markdown
	There are many barriers to entry as we see them, but we like to call them "no good reasons." There are three no good reasons that keep women specifically out of technology. They are: stereotypes, they're the accessibility, and the environment.
	
4672083cbc1fe82a9f8b7432ec3d07c3|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|86|1|V|markdown
	It's worth remembering here promoting diversity doesn't just make good ethical sense, it makes good business sense, too.
	
c17bffa6a53d07c72b9da2c6bbcb4454|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|90|1|V|markdown
	Technology as an industry has probably the greatest potential to make the most change in the world today. You really want to have people from all backgrounds, from all perspectives contributing to the tools and services and things that are going to shape the world. I think it's really important that people from all backgrounds are creating software and contributing to open source projects.
	
25a3160a8c56da9e63ca50957ec965f1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|94|1|V|markdown
	The fact is, we didn't all start with the same advantages or experiences. The next great coder might not look like a Silicon Valley cliché.
49cc010481850c81faac068b34e6f037|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|98|220|V|markdown
	In–person instruction has been historically incredibly expensive and inaccessible for people. Again, I think from 2014 to today, that has improved. I think groups other than Girl Develop It like Outreachy, like CodeNewbie, are doing that by providing a safety net or a space to ask questions and get more comfortable.
	
9a6fe39c6f455d18196e7d2049205d81|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|102|1|V|markdown
	Having a safe, welcoming testing ground for some of those ideas and some of those questions is a good place to start.
	
2d2755a2137721804601c7c20a3c99a4|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|105|1|V|markdown
	
	Speaking of newbies, back to that contributor we were tracking. When you're not from a mainstream background, that first commit can carry a lot of weight. It can feel like you have to prove yourself. Once we get those barriers to entry low enough, what do we actually need to think about as we prepare to contribute?
52e38a24ba37207e04404bf6e743ee30|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|110|1|V|markdown
	It's cool to get excited about certain projects, but what is the use case that you're trying to solve?
	
932bdaaaf86080dabcb0fce47fe6d38e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|114|1|V|markdown
	Vincent Batts works at Red Hat, mostly on container architecture. He encourages new contributors to try and be intentional about the work. Find that niche where you and the project make sense together.
	
187692e5561c38b9aaf698218b017d11|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|124|1|V|markdown
	For example:
	
c14616193d392ba0ead43f766207a6f1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|118|1|V|markdown
	I think a project to contribute to usually comes out of a reciprocal relationship. It satisfied a need for you, and along the way you found a way to satisfy a need for it, and it becomes a relationship, even if it is a community of people.
	
db03042a89146595864f2dac3c434c13|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|126|1|V|markdown
	I ended up standing up a Slackware Linux box out of a recommendation by a friend. It was suitable enough for me to do what I was trying to do that I ended up helping them get it packaged for the mainstream Slackware Linux community. And ended up becoming a maintainer and contributor on that project, not because I sought out to be a contributor to that Slackware Linux community, but it most well suited the other project, the use case that I was actually trying to solve.
	
dcdea93b1d2739321d5e18ca8b71a561|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|130|174|V|markdown
	I think that happens a lot for a lot of folks. They seek to write a database because of their tailored use case, and they find that it works well in Golang, and they wrote such a high–performance database that they were able to contribute back fixes or improvements to Golang to help their database run faster.
	
1d0b8e0bfb1aaf11ab10a0ecf2c7a70c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|134|1|V|markdown
	You can find your little niche and let a certain amount of organic growth take place. The key point is, start somewhere. You don't have to wait for a degree or for absolute confidence.
	
ce277a41240c86f44939e49e56545e1e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|138|1|V|markdown
	If you need direct experience writing code or writing docs, or even being a system administrator for a back-end database web server, most of these communities are volunteer based. You go out to some project like Debian, Fedora, or whatever, and those communities have docs pages that are set up. Those have to run on a web server somewhere and somebody, even a community member that's not being paid to check if the web server's down or something went wrong, is gaining experience.
	
6d78389c6ba3d0c1d3d1bbd9ca27ff43|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|137|1|V|markdown
	
	If you need direct experience writing code or writing docs, or even being a system administrator for a back-end database web server, most of these communities are volunteer based. You go out to some project like Debian, Fedora, or whatever, and those communities have docs pages that are set up. Those have to run on a web server somewhere and somebody, even a community member that's not being paid to check if the web server's down or something went wrong, is gaining experience.
20044812de910e0a6b043fb31b5ad921|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|142|1|V|markdown
	Vincent stresses that point about the egalitarian nature of open source. Wherever you're coming from, you really can start contributing, if you want to. You can make a name for yourself, if that's what you want to do.
	
1c1d8365c57c981ed5be05bbc7659098|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|146|5|V|markdown
	Once it's merged, then your name is attached to something. You're publicly representable that you have made an improvement somewhere, which is incredibly meaningful.
	
e0515e2f65a9fed99abe9ac0915bbe5b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|150|192|V|markdown
	I've worked with folks that were television repairmen and teachers, not in a technical day–to–day job, that were very well represented. They contributed a lot in the community. On the flip side of that, I've worked with developers that sometimes have had 30 years of development experience, but they had never publicly contributed code like that.
	
d27ba669e7168da5f9c1c29336336652|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|154|135|V|markdown
	How's our contributor doing by the way? Well, she found her niche. She conquered her fears and she's finally made her first pull request. Now she can sit back and be terrified while she waits for the maintainer to respond.
	
e5cace5f48889feee85dc7bfd0053842|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|158|137|V|markdown
	Contributing upstream is kind of like going on stage for the talent show for the first time; you get nervous, and you go out there and your palms get sweaty. You do a thing and then it's like an achievement. You are profoundly changed, you never will be the same.
	
5f416cc9e306f2c1eeac58d94b93db3b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|162|97|V|markdown
	Profoundly changed? Maybe. There are in fact four possible responses from a maintainer; silence, that's a fun one, or possibly outright rejection, or outright acceptance. Or the squishy middle ground, a request for change.
	
71ef8e7ebfbc44a9a9e57fb82279fc28|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|166|57|V|markdown
	A couple days after her PR, our imaginary contributor finally gets a ping back from the maintainer. Lo and behold, it's a request for change. Being new, she takes that as a miniature disaster. She doesn't know yet how request for change is really an accomplishment. She even gets a flash of anger at the clipped tone the maintainer is using. It sort of sounds like he doesn't have time for her.
	
8030aaacd8ff540d54b74aa436f64f12|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|170|95|V|markdown
	There's a wall up, and that new contributor has got no idea what's happening on the other side.
	
7c7d569f276bbb49ddc140e4375aee95|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|173|1|V|markdown
	
	Meet a maintainer. The project he's maintaining isn't his full time job; it's a weekend project and he stays up till the wee hours lots of nights prioritizing issues, and reminding folks to update docs when they make pull requests, and you get the idea. He's got a full plate. Sometimes he even experiences a little maintenance burnout.
c665f72679dcb4cbb1f678ea84c00616|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|178|51|V|markdown
	A real life maintainer, Nolan Lawson, wrote a pretty amazing post that got a lot of traction recently about burnout.
	
47c926f50960ef4c41bf81d11f5336dc|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|182|1|V|markdown
	I think part of that blog post was kind of a cry for help, honestly. It was me expressing that I had stumbled into this open source thing. It was really fun at first, and now it wasn't so fun. I wasn't sure what I should do to recover.
	
6302cfd2881825e590803d3d5cae215d|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|186|1|V|markdown
	Nolan's got a day job, but like most maintainers he was putting in tons of after hours work on his open source project because the guy honestly cares. Ironically, part of his pain was coming from the fact that he knows the contributors honestly care, too.
	
30747a103feb951c1ceda8feb72ee71b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|190|221|V|markdown
	What really burned me out more than anything was actually just the flood of well–meaning folks. You want to help them; you really, really do. All they're doing is asking a question, all they're doing is—they found a legitimate bug in your project that's blocking them, or all they're doing is—they actually bothered to download the code and figure out how it builds and to contribute a bug fix. They just want you to review their code that they've contributed.
	
2fdb83e7c250bd43b3acc9e7ed26f72c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|194|100|V|markdown
	Maintainers like Nolan are constantly reviewing a library of PRs, figuring out how commits will play into things. They're pushing contributors to do the best work possible, to conform to the house constraints, to contribute in ways that are most meaningful to the larger goals of the project.
	
333382e557aa04e2b0fc9b2ece8b22ec|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|198|77|V|markdown
	Here is my point, chances are those maintainers are not the jerks a new contributor might worry about. They're working their butts off trying to get to everything. They even take the time, lots of maintainers do, to label some things as reserved for first–timers only so newbies have a chance to take a swing.
	
371a4eebb50eb7261a84ff3b6fef13a9|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|202|1|V|markdown
	At the end of the day though, the scope of all the PRs and commits gets overwhelming. How do we make sure that doesn't happen? How do we create environments for maintainers that make sense?
	
54562dc7a9a74a23860079d4a79664f6|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|206|1|V|markdown
	One solution is an open source project with a strong community like Fedora. The Fedora project leader Matthew Miller explains what attracts maintainers and contributors to the project.
	
122596e2a51794e9afeaf3876fdff3a3|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|210|9|V|markdown
	A lot of Fedora is not development, it's all the things that go around development. That's actually true with IT in general, CS (computer science) in general. Open source maybe doesn't have enough of it, the sort of support roles around open source.
	
53ebf408774c90ae2b4e3c8edeafecc8|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|214|1|V|markdown
	What does that support actually look like?
	
4bb6bd85b1d4a4ea09a94aa1ccb1ec17|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|218|1|V|markdown
	One of the paid roles we have for example is the Fedora program manager who helps keep the schedule on track, and bugs people about making sure the paperwork is done. Having somebody paid to do it actually helps keep the bureaucracy down because they can put the time in to make it a human thing rather than something that is just a bunch of paper shuffling.
	
7a108604bcb85ebc3e4d885cbd21a602|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|222|1|V|markdown
	I think having corporate involvement like that gives stability to some of the roles that you can't guarantee with volunteers.
	
0c062eaa9aa134ae79d3d457088bfe7c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|226|1|V|markdown
	It sort of reminds me of those work spaces freelancers use. There's a shared reception area, shared wifi, and shared coffee. The manager's handling it, and you're free to do your own thing.
	
7b707503cf8cec2f89775f91e9915b8c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|236|13|V|markdown
	One of the things we've looked at is making natural endings to leadership roles, where you say you sign up for something, it's not necessarily a lifetime commitment. You can re–sign up, you're not kicked out after a year. If after six months you want to move on, you can gracefully go on without feeling like you're letting people down. We've tried to work on making sure people have a clear exit.
	
c3c0ce6a63bf54153bcd5e0b82cdf941|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|240|1|V|markdown
	Matthew figures that finding ways to support that open source community without being heavy–handed is the key.
	
1ae404a0bd4ddb9e2afdfd3efe1ca3bb|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|244|139|V|markdown
	It's almost like a family rather than something like a workplace or something like that. It's meaningful to contribute to because you're working on this not just for yourself, or not just for some paycheck or an end product, but because the people you're working on it with are your friends and it's something that you're working on together to make something that's bigger than this individual effort.
	
7885185d64052caaa0202bea416e8060|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|248|1|V|markdown
	Whether it's thanks to Fedora or something else, a world where open source contributions are sustainable, now that's a world worth fighting for.
	
095da3f3e01f133d49c257a5c0bacd23|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|252|1|V|markdown
	Meanwhile, back at her desk, that new contributor we were following just finished the changes the maintainer asked for. She doesn't realize it yet, but she's about to have her first pull request accepted.
	
65db40425ab26c505eb5bb59c8e1427c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|256|39|V|markdown
	It's easy to lose sight of those earlysteps when we talk about long–term issues like burnout. Every day, there are new contributors all over the world joining the party. That's really why we need to build a sustainable humane place where all this open source magic can happen.
	
5d044371bf120d25fca5e302f41c6921|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|260|1|V|markdown
	In the end, our contributor and our maintainer work together to nudge things forward. There's one last piece of the story—remember that all that back and forthing depends on development platforms like GitHub and GitLab, places where we can all come together.
	
b95cb277357c347fe6cf4a77ed5c5c68|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|264|1|V|markdown
	I wanted to dive deep into how those communities make our work possible. I got chatting with Shannon Crabill about it. Shannon's an email developer by day, but by night she's learning front–end development. She's also someone who knows first–hand about the value of community.
	
cb741cb551b15399f16a9e0431010993|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|268|1|V|markdown
	Last year she participated in a month–long celebration of open source called Hacktoberfest, an initiative to get more people to contribute to open source. At the time, Shannon was very much an open source newbie.
	
91e0973cfe2c0148cbd2ec1ad6348f8a|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|272|61|V|markdown
	Thinking back to that point in October, I felt like I wasn't finding much to work on and there's probably other beginners or maybe even more beginners who were also not finding things to work on. Maybe if I put something out there that's relatively easy, they'll have some place to try and learn, and get used to Git and GitHub.
	
61a9fd1f3446977d806f8ac2d29897ae|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|276|1|V|markdown
	I think the hardest part is getting used to the motions of just how it works and practicing. How do I push repo? How do I share a project? How do I do pull requests and that sort of thing. I got people to contribute, which was surprising, but also really awesome.
	
752f066edafb1c5eda5c91f0fd8207be|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|280|1|V|markdown
	Was that scary at all? I feel like if you're new, you're putting yourself out there despite even having the repo, period. Now you have people actually contributing and you have to talk to them, and review their code, and have opinions. That sounds like that can be a little intimidating.
	
3bada513a0eebd6d08a3be831e541292|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|284|1|V|markdown
	I think the initial reactions were like, "Oh my God, this is so cool", and also, "Holy crap, what have I gotten myself into?" I realized I had merged my own code into my own code, I merged my own pull requests and pushed to the site and everything like that. I had not done anyone else's. I think I hadn't done a pull request, merging it before then, so I had to figure that out. Merge complex in general is something that I still struggle with a little bit.
	
d5cd18b52660997e7c835cfdfc9c319b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|288|1|V|markdown
	It was this whirlwind of feelings, "This is cool. I don't know how to go about this." Everyone was really friendly, and I just tried to stay very friendly and honest, even if it was just, "Hey, I'm overwhelmed. I see everyone's pull request. I won't get to them tonight, but I'll get to them tomorrow." People seemed to respond well to that.
	
a33fcace5c275426c4b5cc6629856c46|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|292|1|V|markdown
	Yes. One thing that I've always wondered when you are maintaining a project—especially as a newer developer—is does it mean that you have to be the smartest person on the repo? You're essentially grading, you're judging and reviewing other people's code. Have you had a situation where you didn't know as much as the person making a pull request? How did you deal with that?
	
8d3bc352d95ee4bef8d2009261931b11|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|296|1|V|markdown
	That's a really good one. I could see thinking that, "Oh, I need to be the smartest, best developer ever," would maybe be a hindrance. I think I was lucky that I didn't think that when I went into this, so I was able to go into it like, "Let's just go for it, see what happens."
	
a68a9dd295c6cdfd3570554bb17802ef|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|300|1|V|markdown
	You don't need to be senior developer, 20 years experience. You just need to have an idea and just know how to use the software, and just be willing to learn if you don't know.
	
ba023e3770bfb91cd22990bdad1ccf93|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|304|1|V|markdown
	There were definitely one or two pull requests that added some really cool features to my project that to be honest, if it broke, I don't really know how to fix it. I can look at the code and be like, "Yeah, it's broken." To be able to build that from scratch, I wouldn't know how.
	
0021e91a45a4bd7cd58f096644205960|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|308|1|V|markdown
	I think that's the cool thing about it. If it was just me contributing, I might have done some neat stuff but not as cool as what other people are bringing their experiences to the table with to do.
	
8ac0db4c05adcc38956eed4cc78bb26f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|312|1|V|markdown
	As a maintainer, what are some lessons that you've learned along the way to make the project more accessible, more friendly, easier to contribute to?
	
2b5670a30230f6f80f00e2d9f7b56d41|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|316|1|V|markdown
	Sure. The one thing that I think was really helpful, and I wish I had done this initially, is to set up templates wherever possible and documentation, documentation, documentation.
	
07006dc5dc47405d3a5c072269a16d60|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|320|1|V|markdown
	I definitely added a lot to my README file as I went, and I think just having a README file to start is a really big step. Just even links to, "Hey, check out our guidelines for contributing." I think I made a pull request template, I made issue templates, "Click here to see current issues," so people aren't submitting the same things multiple times.
	
bf6bdeae409c59f338ccfdec591fd047|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|324|1|V|markdown
	Making it as easy as possible, or as user friendly as possible, I think is a big step you can do as a maintainer.
	
46cc3d327f83fede8a606ee31a912308|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|328|1|V|markdown
	Absolutely. READMEs, I see them all the time, I hear about how important they are; I feel like it's also there's so much you can do in a README. At the end of the day, it's kind of a blank document that tells people to read it. What do you do in that document? How do you structure it to make it really connect with people who are looking to contribute?
	
332b7b82c19f5fbcc281d262f084c339|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|332|1|V|markdown
	I think in my README I had a lot gifs in there.
	
27e0ccb89eb39b81d3d88bfb12fbea35|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|336|1|V|markdown
	Nice.
	
cb35666a58a25243ff71d5f6fba3147e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|340|1|V|markdown
	I had gifs, I think I had links to–
	
268e87fd7796e19fb0a19ef6a68c23df|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|344|1|V|markdown
	What I was starting to hear was that Shannon had quickly learned how important the relationships are. She knew straight away that the work was going to shine if people were invested, and even having a good time.
	
a245813861fec7779523ca50a8958480|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|348|1|V|markdown
	There's people doing great things with open source projects, I also think it can be fun and a fun project to say, "Hey, I made these cool bats that randomly generate on this page every time you click."
	
9e497118609229bdddc85db5cd468476|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|352|1|V|markdown
	I also love that there's so many different types of things that people can do. If you're really into the artistic cool stuff, you can do the bat generation feature. If you want to clean up, you can do that, too. If you're like, "I'm going to stick to the documentation, I'm going to spend my time to make this room, this place, a little bit cleaner for all my other contributors," then there's the option to do that, too.
	
c1f8db3871a896e099a6b7bbd2e86d9f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|356|70|V|markdown
	Yeah. I tried to make it clear that whatever you want to contribute is fine with me. If you catch a spelling error and you want to fix that, great. If you notice a link is broken and you want to fix that, great. If you just want to help comment this code so it's easier to read and understand, that would be really helpful.
	
6f6b2ed3c3fc6d8d3797d01f16c6a065|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|360|47|V|markdown
	I think it's really awesome that you had such a positive experience with the community, because I've heard lots of stories where that really wasn't the case. People weren't very nice online, and weren't very welcoming and kind, especially to newbies who we tend to ask some more simpler questions than are expected.
	
40d56c76d8db898c0dadb18bb6f6431f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|364|1|V|markdown
	What do you think helped make your community a nicer place compared to what some other communities are like?
	
5207b32fe6269c37fef9d640fcbfb33f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|368|1|V|markdown
	Just the fact that it was a very casual thing. If you want to contribute, you can, cool. If you don't, that's also cool. I definitely had the thought that open source was this big scary thing, you need to have all this experience and know all these complicated languages, or back–end and front–end and everything in between to be able to contribute to.
	
c3797c70b8fa51ae617d578c1b3ca8b1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|372|1|V|markdown
	Absolutely. How has doing Hacktoberfest, how's that changed your idea of open source now?
	
61bb275293050cdfa59403320c0fce61|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|376|1|V|markdown
	It's definitely changed it for the better. Like I said, I had a great experience and I hope everyone that was involved with my project in some way or another had a good experience, too. It's definitely given me the push to want to try things like that more often, even if they don't go anywhere. It seems more obtainable now.
	
d652244f58889153a82d14c1e8aab18c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|380|1|V|markdown
	Music to my ears.
	
cd6578ffb35c6fd2daffb3fe23ede908|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|384|1|V|markdown
	Here's something; thousands of people from hundreds of companies, and some from no company at all, contribute to the Linux kernel. That means Linux, which basically runs the internet, is maintained by a whole army of everyday heroes. If you're feeling eager to make your first contribution to open source, maybe you want to learn more about the Fedora community, we've got a ton of materials waiting to help you out. Check out redhat.com/commandlineheroes for more.
	
762f096433158d6a598bc90bc9892912|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|388|1|V|markdown
	Quick reminder, this season we're building our very own open source Command Line Heroes game. You are invited to contribute in whatever makes sense for you. Get the deets on how to be a part of it; we would love for you to build this game with us over at redhat.com/commandlineheroes.
	
a1102a39a531267448b7f5c2e0e4f0c0|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|391|1|V|markdown
	
	Next episode, we're all about the ruthless Darwinian process of errors and the beauty of failure in open source development—how it haunts us, guides us, and makes us better.
40d2044387d09bb6acb120105de32207|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/LCRH-S02-RTC-Final.md|396|1|V|markdown
	Command Line Heroes is an original podcast from Red Hat. Listen for free on Apple Podcast, Google Podcast, or wherever you do your thing. I'm Saron Yitbarek, until next time, keep on coding.
	
fa7286058cd92fd2e953eebb3e1f15df|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|13|1|V|markdown
	Open source projects can help change the world by removing barriers, linguistic and otherwise.
d70209dea23cc9d68117b6647375d433|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|16|1|V|markdown
	My open source journey started rather late in comparison to many of my peers and colleagues.
f4da5282fa642806e4148a895079552c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|10|1|V|markdown
	My Linux story: breaking language barriers with open source
7e8e5235fb8995d45b8056bd3ed21566|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|17|1|V|markdown
	I was pursuing a post-graduate degree in medicine in 2000 when I managed to fulfill a dream I’d had since high school—to buy my own PC. Before that, my only exposure to computers was through occasional access in libraries or cyber cafés, which charged exorbitant prices for access at that time. So I saved up portions of my grad student stipend and managed to buy a Pentium III 550 Mhz with 128MB RAM, and as came standard in most computers in India at that time, a pirated version of Windows 98.
4ae497aa82b817f9037bb01ff1fefa86|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|19|1|V|markdown
	There was no Internet access in my hostel room. I had to go to the nearby cyber café, download software there, and then carry around dozens of floppy discs.
0c84ce12df7df9c9da9e4fe0806f6de1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|20|1|V|markdown
	
	As happy as I was finally owning my own computer, it bothered me that I could not write in my mother tongue, Bangla. I came across resources provided by CDAC, a government agency that provided Indian language tools based on ISCII, an older national standard upon which the Unicode standard of Indic language was based. It was difficult to learn the keyboard layouts.
ca88b4a8dbda009305890bf6a8e6db74|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|37|1|V|markdown
	### Joining open source
edfe088f68577aba07778377c067cc29|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|24|1|V|markdown
	
	Soon, I came across a software called [Yudit][2], which offered phonetic typing of Indic language using the standard QWERTY keyboard. It was with Yudit that I first came across terms like open source and free software, GNU, and Linux. Yudit allowed me to translate UI elements into Bengali too, and when I submitted the translations to the developer, he gladly incorporated them into the next version and credited me in the README of the software.
a58092c874f3bf6caabea8e1f3034754|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|27|1|V|markdown
	This was exciting for me, as I was seeing, for the very first time, an application user element in my mother tongue. Moreover, I had been able to contribute to the development of a software despite having almost zero knowledge of coding. I went on to create an ISCII-to-Unicode converter for Yudit, which can also be used for transliteration between various Indian languages. I also bought a Linux magazine that came with a free live CD of Knoppix, and that’s how I got a feel for the Linux desktop.
cea8370a8d06805dfebd28c806775858|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|29|1|V|markdown
	Another issue I faced was the lack of availability of Unicode-compliant OpenType Bangla font. The font I used was shareware, and I was supposed to pay a license fee for it. I thought, “Why not try my hand at developing it myself?” In the process, I came in contact with Bangla speakers scattered worldwide who were trying to enable Bangla in the Linux operating system, via `bengalinux.org` (later renamed Ankur group).
09296e983ec748ccec7cb75a0a7b7611|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|30|1|V|markdown
	
	I@s joined their mailing list, and we discussed among ourselves and the authorities the various flaws in the Unicode and OpenType specifications of Bangla, which were then corrected in due course. I contributed by converting legacy Bangla fonts into OpenType Unicode-compliant fonts, translating UI, and so on. That group also came out with the world’s first Live Linux CD with a Bangla user interface.
53d1f159b0e00ff07069b37e3e8b23b0|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|37|437|V|markdown
	Now, I feel more comfortable using Linux to do my daily work than any other operating system. I also feel proud to be associated with a project which allows people to communicate in their own language. It also brought computing power to a population who were for a long time considered to be on the other side of the “digital divide” because they did not speak English. Bangla is actually one of the most widely spoken languages in the world, and this project removed a major barrier to access for a large chunk of the global population.
	
ef691fe06fb6f6d62766a813fb07326b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|41|248|V|markdown
	Joining in on the open source movement is easy. Take the initiative to do something that is useful to yourself, and then think about how it could be useful to others. The key is to keep it freely available, and it can add untold value to the world.
	
a1dd1f508a6f89b6bccc0a08519ee77b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200714.md|33|1|V|markdown
	In 2003, I had moved to a place where I did not have access to the Internet; I could only connect to the group on Sundays when I came to Kolkata. By that time, Bangla localization of Linux had become a mainstream thing. Some of our volunteers joined Red Hat to work on translation and font development. I also became busy in my medical practice and had little time left for open source development.
535e0213b2ecccdc4e5488992414a6ee|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|10|1|V|markdown
	What you need to know about Rust in 2020
42cf593b947cd3d591fa132742486f89|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|13|27|v|markdown
	Person 
16e0a543a9f72ea140a447b2e0978348|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|13|27|v|markdown
	using 
312f91285e048e09bb4aefef23627994|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|13|27|v|markdown
	laptop
c89ac9c58cb09d50c88c8cac0523639f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|12|152|V|markdown
	While many programmers have long used Rust for hobby projects, in 2019, the language attracted support from major technology companies, as the top Rust articles on Opensource.com explain.
	
f538b5a4dda807125167886c432aa9a8|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|15|1|V|markdown
	[Rust][2] has drawn plenty of attention from programmers on sites like Hacker News for a while. While many have long [loved using the language][3] for hobby projects, it didn't start catching on in industry until 2019, when this really started to change.
ae0f523bcec656a57210a5c3d0ffcb40|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|51|11|v|markdown
	译者ID
e061505f4822766ce2975223e18832c9|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|17|1|V|markdown
	Over the last year, many large companies, including [Microsoft][4], [Facebook][5], and [Intel][6], came out in support of Rust, and many [smaller ones][7] took notice. As the first emcee at [RustFest][8], the largest Rust conference in Europe, in 2016, I didn't meet a single person professionally using Rust who didn't work at Mozilla. Three years later, it seemed like every other person I talked to at RustFest 2019 was using Rust in their day job for another company, whether as a game developer, a backend engineer at a bank, a creator of developer tools, or something else.
fea0b62b24bbcf8ea5eef33c1882c722|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|19|156|V|markdown
	In 2019, Opensource.com also played a role by reporting on the growing interest in Rust. In case you missed them, here are the top articles about Rust on Opensource.com over the last year.
	
1dabf59d616ae605af85ea3142538ca1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|21|1|V|markdown
	### Building the virtualization stack of the future with rust-vmm
a4efd8c66ce20310e10191f114e89911|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|21|5|v|markdown
	使用 rust-vmm 构建未来的虚拟化堆栈
	
bdb16046dcd1c24f6919fbe9c65cb42c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|23|220|V|markdown
	Amazon's [Firecracker][9] is the virtualization technology that powers AWS Lambda and Fargate, and it is written completely in Rust. One of the technology's authors, Andreea Florescu, offers insight into Firecracker and its related technologies in [_**Building the virtualization stack of the future with rust-vmm**_][10].
	
cec66c04354d9f46441c15daf95aaa87|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|25|1|V|markdown
	Firecracker started life as a fork of Google's [CrosVM][11] but quickly diverged due to the differing needs of the two projects. Despite this, there are many common pieces that are best shared across the project and in any other virtual machine manager (VMM) written in Rust. With that in mind, the [rust-vmm][12] project started as a way for Amazon and Google, as well as Intel and Red Hat, to share common Rust "crates" (i.e., packages) with each other and the rest of the open source community. These include interfaces to KVM (Linux virtualization APIs), Virtio device support, and a kernel loader.
8a5a2a23da0935fddb920980dc40f048|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|27|192|V|markdown
	It's truly amazing to see some of the titans of the software industry working together around a common technology stack written in Rust. Given this and other partnerships around [technology stacks written in Rust][13], I wouldn't be surprised to see more of this in 2020.
	
4ebb144be4a03519fbe95e1ac52aedee|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|29|1|V|markdown
	### Why to choose Rust as your next programming language
89859210213e02bd73f74e8f7356622d|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|31|219|V|markdown
	Adopting a new language, especially at a large company with a long-established technology stack, is no easy task. I had the pleasure of writing [_**Why to choose Rust as your next programming language**_][14] about how Microsoft is looking into adopting Rust when so many other interesting programming languages have not been considered.
	
69eee0ae5db9f45ca2166a70a7d6efde|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|32|1|V|markdown
	
	Choosing a programming language involves many different criteria—from technical to organizational to even emotional. Some of these criteria are easier to measure than others. For instance, it's easier to understand the costs of technical changes, like adapting build systems and building new tooling, than it is to understand organizational or emotional issues like how productive or happy developers will be using this new language. What's more, the easy-to-measure criteria are often cost-related, while the hard-to-measure criteria are often benefits-oriented. This often leads to costs getting more weight in the decision-making process, even though it's not necessarily true that the costs outweigh the benefits—it's just that they're easier to measure. This makes it unlikely for a company to adopt a new language.
12ffc0215ea32c719eefb0c7900e773b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|35|1|V|markdown
	However, one of Rust's largest benefits is how easy it is to measure its ability to write secure yet performant systems software. Given that 70% of severe vulnerabilities at Microsoft are due to memory-safety issues that Rust is designed to prevent, and that these issues cost the company billions of dollars per year, it's easy to measure and understand the benefits of adopting the language.
01dc0bd34bc51871a42109daef490687|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|37|123|V|markdown
	Whether full-scale adoption of Rust at Microsoft will happen remains to be seen, but Rust's future is bright if only for the fact that is has a clear and measurable benefit over existing technologies.
	
5175d671d14b3fbc7436e54b106c898f|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|39|1|V|markdown
	### Rust in 2020
d4dce05bc72446e0ae7a3cb7fc70ea91|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|43|1|v|markdown
	Rust 实际上已经开始在工业界引起关注。
e812e757166f1f799147a018dfa327c7|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|46|1|V|markdown
	Rust is more than just a compiler and a set of libraries. It's a group of people who care about making systems programming easy, safe, and fun. The coming year will be critical in Rust's journey from a hobbyist language to one of the main languages used in the software industry.
c3b06b9ea5b4d66cdec6c7cf99e15445|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/20200103.md|40|1|V|markdown
	Rust is really starting to gain traction in industry. Although it still has a long way to go to reach the popularity of languages like C++. I expect more companies to start adopting Rust in 2020. The Rust community must now set its sights on welcoming people and companies into the community while ensuring that the things that have driven the language to this point remain in place.
8aedffdd898e600ba362c7c9ad2dd750|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|10|1|V|markdown
	How failure-driven development makes you successful
7a7767f497d564d148e3aa88e94ea8b8|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|12|1|V|markdown
	I'm the picture in the dictionary next to the word "failure"—and that's why I'm good at my job.
9a46483ccfebfd61705dfb42b6c4bf9e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|14|1|V|markdown
	
	My job title is senior software engineer, but that's not what my closest co-workers call me. They call me "Cherrybomb" because of all the things I blow up. My regularly scheduled failures have been tracked down to our quarterly earnings and outage times. Literally, I am the production disaster you read about that says, "what not to do ever, in any case, at any time."
bded345b3ae09969767a71f0279040f1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|17|1|V|markdown
	I started my career at a helpdesk where I wrote loops that wrecked servers in high-end companies. I have taken production applications down for up to eight hours without warning, and I have destroyed endless numbers of clusters in an attempt to make things better—and a couple just because I mistyped something.
6a65ce2475777eb9fec720c03b9ab9cd|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|19|1|V|markdown
	I am the reason we have disaster recovery (DR) clusters in [Kubernetes][2]. I am the chaos engineer that, without warning, teaches people how to act and troubleshoot quickly when we have an application that has never been tested for an outage recovery plan. I exist as the best example of failure possible, and it's actually the coolest thing ever.
2886fefe2db29272a03ed284c7d3ec80|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|21|1|V|markdown
	### Jess and the disappearing K8s clusters
fc498832d2d8292dc5dc9774abae8673|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|23|1|V|markdown
	One of my official responsibilities involves our application architecture. For any sort of architectural change, I get to make and test the code and see what is possible. Recently, this has been an epic pain in my bosses' side, to put it gently.
e9cf0eeeda4d474459276cb6f2f7efbd|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|28|1|V|markdown
	
	In light of this, it's reasonable to ask why I am still employed—and why am I writing about this. Those are easy to answer: I'm still employed because my infrastructure code updates work better and faster than the code we started with. And am I writing about this because everyone fails regularly; it is so very, very normal. If you're not failing regularly, I don't think you're trying hard enough to learn.
a0d419b2ac09aec74e140a1a61e49e66|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|31|1|V|markdown
	### Break things and train people
7c6b7602a2de264f198e1aab417173a9|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|32|1|V|markdown
	
	You'd also think no one would let me train anyone ever; that it's the worst idea ever because (as my team jokes) you should never, ever do the things I do. However, my boss has me train anyone walking in the door pretty regularly. I even provide training for entire teams using our infrastructure or code to teach people how to build their own infrastructure.
2d315258da72a5fe41f97631829dc8bd|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|35|1|V|markdown
	Here's why: Failure is your first step to success. Failure's lesson isn't just "backups are a fantastic idea." No, from failure, you learn to recover faster, troubleshoot quicker, and get amazingly better at your job. When you get amazing at your job, you can train others about what not to do and help them understand how everything works. Because of your experience, they will be a step ahead of you were when you started—and they, too, will most likely fail in new, amazing, epic ways that everyone can learn from.
ab58b47222cea8c2358a6e5ef2c72f1e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|37|1|V|markdown
	### You are only as good as your failures
775334602d59cdcfcf42fe31c4db6b10|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|39|1|V|markdown
	Nobody is born with talent in software engineering and cloud infrastructure, just like no one is born walking. We all start by rolling and bumping into things. From there, we learn to crawl and then stand for a moment or two. When we start walking, we fall and scratch our knees, bump our elbows, and—at least in my brother's case—walk right into a table's sharp corner and get stitches in the center of your eyebrow.
8f047d52689ab759d3a60d3a3d555527|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|41|130|V|markdown
	Things take time to learn. Read everything you can get your hands on to help you along your way—but that is always the beginning. Perfection is some fantasy that's impossible to achieve; you must fail to reach success.
	
b5d66242fa61562ec4dc4c612b07cb8e|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|43|48|V|markdown
	Every step of the way, my failures teach me how to do things better.
	
87db4d4d69c3e1a6b39a958bd7fa97d1|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|45|1|V|markdown
	Ultimately, you are only as good as the sum of your failures, because that's what shows you how successful you are.
c82270c9dba2ce3ace2bb22f764a91cf|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/20200331.md|47|79|V|markdown
	Open source is about more than the code, it’s about the culture. The open cddulture that many open...
	
	开源不仅在与代码，还在于文化。
b280045cced13ab57ab25718988c5395|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/LCRH-S04-MiniCSOM.md|17|472|v|markdown
	数据通用
c46777f3a6f4b0cabc7622d40a2eea3b|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/LCRH-S04-MiniCSOM.md|51|1|V|markdown
	Carl Alsing was the manager of the micro programming group at Data General. He was Tom's second in command. They decided to come up with their own project.
2c0db59c9460418d3a2e0d1e4486e357|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/LCRH-S04-MiniCSOM.md|83|95|v|markdown
	micro 
16f78c04bfe635fcbe6df65e361aa90c|file:///home/godlovesjonny/Jonny/Open-Source/Linux-cn-Translation/todo/LCRH-S04-MiniCSOM.md|83|95|v|markdown
	coding 
0ffbf0d3f56d850735aa34bace6fceb9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S04-MiniCSOM.md|239|1|V|markdown
	现在回过头想想，你觉得自己当时有被剥削吗》  
9034f1d10d7c645297b9ed9402b23f8f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|15|231|V|markdown
	The year was 1978 and a battle was raging in the mini-computer industry. Just a year earlier, Digital Equipment Corporation released its 32-bit VAX 11 780 computer. It was much more powerful than the 16-bit machines in the market. Sales of the VAX quickly overtook their slower competition. Archrival, Data General, was desperate for a new machine to compete with the VAX. They needed a 32-bit computer of their own and they needed it fast, but that competition between Data General and DEC wasn't the only battle going on. There was also a turf war brewing inside Data General and the spoils of both wars would be the creation of an incredible machine under incredible circumstances. A 13-inch laptop weighs maybe three pounds. We take for granted our computers’ portability and convenient size, but back in the 70s, most computers were still room-sized mainframes, multi-million dollar machines weighing several tons. Then, when hardware costs plummeted, the race to smaller, faster, cheaper machines began. The mini computer opened the door for engineers and scientists to have a terminal of their own. It was the machine that led us to where we are today.
	
a8f52e02664161aef2682c0b9aa217f3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|19|1|V|markdown
	Last season on Command Line Heroes, we took a deep dive into an area that is central to software development, the world of programming languages. We looked at their history, the problems they solved, and how they've evolved over time. Languages like JavaScript, Python, and C, Perl, COBOL, and Go. This season, season four for those of you counting, we are diving deep again, this time into the hardware that our software runs on. We're going to tell you seven special stories about the people and teams who dared to change the rules of hardware. That laptop on your desk, that phone in your pocket, command line heroes put their soul into every piece of hardware you've owned and heroes before them. Their passion for building their bold moves to make our hardware a reality has revolutionized the way we program today.
	
e3f84cb969083e7084a60ad5770514d2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|23|1|V|markdown
	I'm Saron Yitbarek and this is Command Line Heroes, an original podcast from Red Hat.
	
91f5bc8ccdb4ef69e04492ba72c0439c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|27|240|V|markdown
	In our season premiere, the story of an engineering team racing to design, debug, and deliver a next-generation computer. Their work became the subject of the 1981 bestseller and Pulitzer-winning book, The Soul of a New Machine by Tracy Kidder. The book follows many of the guests you'll hear in this episode.
	
cd9f8d8680a821b0d9d7d30312cbe848|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|31|1|v|markdown
	He splits up the engineering department, moving a team from its Westboro, Massachusetts headquarters to a new office in North Carolina. Their assignment? Develop an advanced 32-bit design that would crush the VAX. T
fbb2953e8404d071073343ed4e1baa6a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|31|112|V|markdown
	hey named their project, Fountainhead. De Castro gave the team almost unlimited support and resources. Fountainhead was going to be his company's savior. The few remaining engineers left behind in Massachusetts, they felt seriously slighted. They knew they could build a VAX killer, probably a better one than what Fountainhead could build, but de Castro wouldn't give them a chance. So the leader of that group, Tom West, decided to take matters into his own hands. A self-taught computer engineer, Tom West ran Data General's Eclipse division. Eclipse was data General's most successful line of 16-bit mini computers. Tom could build machines, he could ship them, and he knew what the market wanted. After setting up Fountainhead, de Castro told the remaining engineers to keep working on improving last year's product line. Tom and the others were unimpressed.
	
c618ca819e34f86e8ef395e561b10b4f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|35|1|V|markdown
	We were not happy with that at all. Some of us left for other jobs and others of us were depressed and worried about our careers and not feeling very excited. And we predicted that the other group was going to fail.
	
8036c2dca212a0d6e9477964a5f8bcbd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|39|1|V|markdown
	Carl Alsing was the manager of the micro programming group at Data General. He was Tom's second in command. They decided to come up with their own project.
	
0025a7ac2494e365e2d710635f4144a3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|43|1|V|markdown
	This'll be a whole new design using the latest techniques, build a 32-bit computer that would beat the DECs’ VAXs. So we put together a proposal for that and went to the president, Ed de Castro, and he says, "Nope, no way. No, the North Carolina groups taking care of that. You don't have to worry about it." So we were discouraged and we went back and came up with another proposal called Victor. We looked at ways of making the old last year's product better. And we had in there a little switch, a mode bit in the system, that when you turned it on, it would enable the computer to act like a modern 32-bit mini computer, although slow. And we took that to Ed de Castro and proposed it. And at the end he said, "You have a mode bit in here. I don't want to see any design with a mode bit. North Carolina's taking care of the new designs." So again, we were discouraged and I think this is when Tom West decided that we were going to do something clandestine.
b357332f2b84b4acf98676065fa7e3bc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|47|351|V|markdown
	Tom came up with two stories. One was for de Castro. They would work on an enhancement of the old Eclipse product line, make it a little faster, add a few new buttons, a different color. Tom pitched it as insurance just in case something went wrong in North Carolina. De Castro approved it. And then Tom told another story, a better story to his team.
	
cd03eadbd83dfbb13a4b21dbf28a1213|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|51|1|V|markdown
	So Tom West proposed to a few of us in the team that we build a really good modern machine that's completely compatible with the previous machines and did all the latest high tech stuff that we needed and virtual memory and 32-bits and error correcting codes and all those kinds of things. Multitasking, multiprocessing, lots of memory. "Guys, we're going to build the latest market-killing new machine."
	
fe15078ba2c6518d6ed5ebb72e8f845f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|55|1|V|markdown
	The code name for this market-killing new machine, was the Eagle. Nowadays, it feels like there's no limit to what you can do with the memory built into our computers, but back then, a big breakthrough happened when 16-bits gave way to 32-bits. All of a sudden, your address space went from 65,000 bytes of information to over 4 billion. And with that increase, software could deal with larger amounts of data. That left computer companies with two basic challenges: transitioning from 16-bits to 32-bits, sure, but they also had to keep their old customers, the ones using the old software, happy. So, they had to create a machine that would keep old software running, a 32-bit computer that could be backward compatible. The VAXs, for all its power, didn't have an elegant solution to that second problem, but Tom was determined that his Eagle would.
	
167be2bf461cf67fd889c92505166c85|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|59|41|V|markdown
	Eagle HQ was located in the basement of Westborough building, 14 AB. Tom assigned Carl to head up micro coding. Carl assigned Chuck Holland to manage the coders, who became known as the Micro Kids. Meanwhile, Ed Rasala would oversee hardware. He assigned Ken Holberger to manage that team, which was appropriately called the Hardy Boys. Tom had an ally in VP of Engineering, Carl Carman. Carman also had a bone to pick with de Castro because de Castro refused to put him in charge of the North Carolina group.
	
489684fd02429c6afec5b0c7067eabf5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|63|1|V|markdown
	Carl Carman knew what we were up to and said nothing to his boss. And so he was funding us, but we needed to keep the salaries down, and we needed some really good smart engineers. So we decided to go after college recruits. One advantage of that is that they don't know what you can't do. They think that you can do anything.
	
a21e9ed2899b13fba4d1c9072275e955|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|67|1|V|markdown
	Jim Guyer was two years out of college and working at Data General when he got assigned to the Hardy boys.
	
ba85fac4d04c35db4c8e2b413b1888a9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|71|91|V|markdown
	The machine that was being developed down in North Carolina was much more high-end computing, almost mainframe in nature. And well, I mean, that's a pretty big thing to jump into to compete with IBM and the other mainframe companies at the time. We thought we had the edge because we were trying to do something that was not quite as ambitious and we were really, really, really focused on a neat, clean, simple implementation with low cost and fewest components and so forth.
	
665bc5248d58c78f307ce979497ec441|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|75|1|V|markdown
	Low cost, simple design. They realized that they needed to use firmware to control everything. The more functionality they could put under firmware as opposed to hardware, the cheaper and more flexible it could be.
	
84863967ac3f5c2baf34d2ada898e86e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|79|1|V|markdown
	And they'd be able to make changes as needed. Of course, modern-day computers are all built this way, but in 1978 the approach was brand new.
	
8a16e3f6bc05ac3776f77137762ec620|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|83|1|V|markdown
	The kind of design we were doing was very minimal. We were looking at ways of making things simple and straightforward, uncomplicated. Because we knew that it couldn't grow to be a big, expensive machine. It had to be just a few boards, a few circuits, and that's actually an advantage in making it fast. There's a difference between designing a product that's safe, risk-free, and a product that's going to win. And we were not worried about risk. We were worried about winning. We wanted it to be fast and cheap and we wanted to design it quickly. So, we only had three or four boards in there, a minimum amount of hardware, and we made up for that with firmware.
	
8f37408da0065c7dddbdfb0881806fe6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|87|1|V|markdown
	The Eagle team faced a lot of tough constraints. The VAX was the highest performance, 32-bit computer on the planet. Eagle had to match it. But on top of that, it had to be compatible with their 16-bit architecture, too. Getting all that done with less money and time than any other team, made Eagle feel like a serious gamble. But Tom West's team was all in.
	
d98845d44416201004cf4f5cbb80d5ba|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|91|1|V|markdown
	There were two systems running 24/7 that we had two shifts of engineers working on them. We all have to be trying to figure out everything. So, we had to learn what everybody else's part did. That was both challenging and extremely educational for me. But we were all engaged with each other to try and go, "What's the next step to figure out this problem? What do we need to look at?" Everybody poring through schematics and other pieces of documentation to figure out, "Look at this signal, look at that computer state, look at the sequence of steps that the microcode is going through. Is it doing the right thing? Oh wait, it's going the wrong direction. Uh oh, why did it do that?"
	
aa6c71abf77a1fb0e29f4c3813953059|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|95|1|V|markdown
	This was serious business and that was the work ethic. It was intense in the group. There were sometimes arguments about which way to do something. There might be one way that costs a little bit more money and another way that was cheaper but not as fast or not as effective. And there'd be heated discussions and meetings with some effort to make a consensus. And we made those choices though. And then we worked together.
	
0dc6cd1b2f739d61505d3d32905b34b7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|99|1|V|markdown
	We worked day and night, we divided up the hours for the prototype. We only had two prototypes and it was really important that both teams get to work on those prototypes. So, there were people working the night shift and people working the day shift and people getting tired. But there was enough excitement about it that it was rewarding. And so nobody complained too much about the working conditions.
	
22322df89a02735151a00bce9f95c0b8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|103|1|V|markdown
	The working conditions. Some accounts from that time say that to get what he wanted from the team, Tom West practiced something called mushroom management. Feed them \[beep\] and watch them grow. Inside a cramped and hot workspace, the hours were long and the schedules unrealistic. Tom himself has been described as enigmatic, cold, uncaring. One engineer even referred to him as the Prince of Darkness. Was Tom West so intent on winning that he exploited his team? Did he sacrifice the wellbeing of the Micro Kids and the Hardy Boys to get the perfect machine?
	
8b48aaf79a1b63fa351c96ff968831cb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|107|1|V|markdown
	Tom was an interesting guy to work with. He expected a lot of you, and he didn't give you a lot of direction. He expected you to figure out what you needed to do, and pretty much if you weren't able to do that, you weren't on the team.
	
465996b8b835b6264416f3bbde98c332|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|111|1|V|markdown
	Direction came from Carl or Ed, the line managers that Jim and the rest of the team worked with on a daily basis. But these young engineers were also in it to win and they liked the opportunity they were given, to figure it out for themselves.
	
f80f1b54a2118f984ce30dde113806a7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|115|1|V|markdown
	I personally won the first honorary Micro Kid allnighter award. I don't know, maybe we were over competent, brash, young upstarts who didn't know any better. We were confident. We thought we were pretty smart and could figure things out, and we fed on each other's, maybe those are egos, in that sense. I was having a lot of fun doing it. I think most of us were having a lot of fun doing it.
	
d320f98aa2c789dfc7447834b70611d6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|119|1|V|markdown
	Carl disagrees with the term mushroom management. He said it was just the opposite. They all knew exactly what was going on and what was expected. It was upper management who didn't. At the same time, Tom West was under a tremendous amount of pressure from multiple fronts, and that pressure got passed along to the group.
	
41e9d11e533666d4fd55dd3e740bb2ca|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|122|1|V|markdown
	
	Tom was keeping the true nature of the project quiet. So, he didn't speak much to the engineers, and he remained aloof and he told them, of course, that they weren't to discuss the project outside the group or at home. Not even to use the word Eagle. So we also conveyed that this was very urgent, that we had to do this in a year, that the competition was already in the market, and if we were going to hit the peak of the market with this thing, we had to get it done now. And so they were under a lot of pressure and there was an expectation that they would work nights and weekends and there would be no time for going on picnics with their family or anything that wasn't work-related.
376777f38f82e08631cd41d4815dd46f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|126|1|V|markdown
	
	I wanted to find out what it was like working in the trenches of Building 14 AB. So, I sat down with Neal Firth. He was one of the Micro Kids. He joined the team fresh out of school.
60d1cfd4e11064c1423016599b0375f0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|130|1|V|markdown
	
	What was it like to work for Tom West? Did you get to interact with him a lot?
21a4bafbe102137309721e9f2036ab06|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|134|1|V|markdown
	
	Not necessarily. He was this ghosty figure. We saw him around. He tried not to interfere so that we could lead ourselves and achieve the goals. This was brand new stuff for what they were doing, and he didn't want to influence us by trying to impose things that had to be done for the previous generation of processors.
37ce2ae8e32cc018c1be194cd7c666c1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|139|1|V|markdown
	It sounds like an intense place where you really want to keep moving and keep getting things done. How did you deal with the fact that there wasn't a ton of time?
	
079f773746ecc0a3c8324ef3f9f9f72f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|142|1|V|markdown
	
	It wasn't a factor to be honest. There was really no issue with there being enough time. We would take the time it took to achieve the result. That's where the spouses had to be very supportive and understanding, because they didn't necessarily say yes immediately. You could equate it to some of the Silicon Valley people at the time or the Jobs, Wozniak type, let's just get in and get this done. We are not quite all live-in-the-same-apartment and code-on-the-floor type people, but it had some of those characteristics.
55f38f8aa21acf92a1a2f40d5dac2526|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|146|1|V|markdown
	
	And during that time, what kept you going? Why were you so motivated?
dddce212a92e9511ffa244d11be6a2c1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|150|1|V|markdown
	
	Quite frankly it was solving a problem. I've always been a puzzle and problem-solving guy. In fact, most of the team was that way. All of us had that in our background, and we all enjoyed it. So, solving those puzzles, getting those things solved, discovering a way to do something that had never been done before.
ff5015d98684670f47530299125c0244|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|154|1|V|markdown
	
	So what was your most memorable moment on the project?
a2fc3a78cb905f085ece2ab641d41adf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|159|1|V|markdown
	At the time, it was quite a ways into the project, and we were running the microcode simulator, and it was actually running what was proposed to be the production simulator, and it had been running for about 10, 12 hours. And all of a sudden, the letter E shows up on the console and then we waited a little while and another letter, then another letter, and then we suddenly realized what we were running for test code was the diagnostics that were being designed to run. And so the microcode simulator was simulating the hardware running this microcode, and it was starting to print characters as if it was actually operating. So, it was maybe a hundred thousand times slower than real life, when it actually came out and operated, but that was one of my most memorable moments.
	
7f41b7f4645d051f536e7238aeb1c63d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|163|1|V|markdown
	Looking back on it now, do you feel like you were exploited?
	
0712df31b4c78c7236a09a8900f89d1e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|167|1|V|markdown
	No. I was aware of what was happening. I knew what was happening. So, no. I do not feel exploited. It was actually my expectations coming out of college, it would have never been that I would be in a project that significant, or have an opportunity to play such a significant role in a project like that.
	
84800c979cb1f8df4494d08d48cb5f11|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|167|1|V|markdown
	No. I was aware of what was happening. I knew what was happening. So, no. I do not feel exploited. It was actually my expectations coming out of college, it would have never been that I would be in a project that significant, or have an opportunity to play such a significant role in a project like that.
8d6f761e6c6870f4377f2ef0a8e73ff8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|171|1|V|markdown
	I'm wondering how you think about the sacrifice of invention, because if you think about all the great things that we make, usually we have to give up something, right? Something's got to give to make something truly amazing. Did that happen for you? And if so, what was that thing that you had to give up?
	
2f7590afac06f160a9b9c7191befacea|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|174|1|V|markdown
	
	I wouldn't say that there was a thought-driven process on my part for giving up something. I think it was much more that I became a little more attuned to what I was doing and how I did it impacted those around me.
d999184b4dc8c3ea828993e993549101|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|178|1|V|markdown
	
	But I never necessarily saw it as a sacrifice, and the people I was close to, they lived in a world where that's just the way things happen. I hear the horror stories, if you will, about today, where 24/7 you wake up, you plug in your coffee IVs, grab some pizza or dim sum, and you start coding, and eventually you fall asleep in your keyboard. And then you wake up the next morning and repeat the process.
d1049bfe77597fba78bc88e54756e69b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|182|1|V|markdown
	
	We certainly were nowhere near that level of sacrifice. I still had a wife, I still had friends, we still got together. It certainly wasn't a nine-to-five job, but it provided me with a lot of personal and technical achievement, and I was able to share that with my wife, and my sister, and my mother and my father, and my father-in-law. So, those people could appreciate that.
b6552f17c824ad73986e929e60d89141|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|187|1|V|markdown
	Yeah. So, what do you think is the key to making something truly great?
	
2dd0ed671ea4cc2941376a0e1b384dec|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|191|1|V|markdown
	Key to making something truly great. Interesting question. I think it depends on the people involved doing it, because they want to, not because they have expectations of achievement, or wealth or fame. Because those things are very fleeting and almost never satisfied. But if you're going in trying to achieve a goal, and you and a bunch of people work together on it and achieve it, that really is satisfaction when you achieve that.
	
e3d0aca0df8e3b162d67f0a65c7eda33|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|195|1|V|markdown
	Neal Firth was one of the Micro Kids on the Eagle Project. He's currently the president of VIZIM Worldwide, a software company.
	
3b8f543d1e694d12799c93a3fbbe6068|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|198|1|V|markdown
	
	As chronicled in Tracy Kidder's book, Tom West's aloofness and distance was deliberate. It was his attempt to keep a clear head above all the day-to-day chatter so that Eagle's goal could remain intact. Even more than that though, he wanted to protect the team, isolate them from the politics and corporate brinkmanship happening around them. He also protected the Micro Kids and the Hardy Boys from preconceived ideas about what was possible.
7c6496ae08d544e8db51fa30c8b025e6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|202|1|V|markdown
	
	In 1980, the Eagle was complete. A year later than Tom had promised, but done nonetheless, unlike Fountainhead. Just as the senior team had predicted, the Fountainhead group had failed and their project was shelved. Here's Bill Foster, director of software development at the time, on Fountainhead's struggle.
7e3cd01867fb65f7c5d75d4d00fee848|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|206|1|V|markdown
	
	I think the biggest mistake that was made was it wasn't given any limitations. More or less, it was let's do the world's best computer. Well, when should it be done? Oh, we don't really have a date for that. How much should it cost? Well, we're not sure about either. And I have to fail Ed with this. He didn't put enough boundaries on the programmers and the engineers.
c7b743b6111509cec6bf8c25086c9f9d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|211|1|V|markdown
	And if you turn a bunch of programmers and engineers loose, guess what, they're going to make something so complex, design something so big, it will never get done.
	
7a05fe75601f691cc42d13e59d27dece|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|215|1|V|markdown
	Let's remember for a moment. Back when Tom and his team decided they would build the Eagle in secret, for two years this was happening. And the whole time, the president of the company had no idea what was going on. When the machine now officially called the Eclipse MV/8000 was ready to ship, the head of marketing went to Ed de Castro to green light the marketing campaign. Carl Alsing explains.
	
7f4b025f36b55d3f1406f536d9edec4a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|218|1|V|markdown
	
	The head of marketing, he said, "Well, we're ready to do the rollout for the Eagle and we're going to need several thousand dollars. We're going to have a press conference in six different cities around the world. And we're going to do a tour, and we're going to go to many cities, and we're going to shoot a film and show it, and it's going to be a big splash."
c6efd2c4b9d91ebc8225b26ef8f774fe|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|222|1|V|markdown
	
	And Ed de Castro said, "I don't understand. Why are you doing that?" This is just another bag on the side of the Eclipse. A skin job. And the marketing manager said, "Nope, this is a whole new machine. This is a 32-bit machine. It's got virtual memory. It's compatible. It's going to beat the VAX. We've got the whole thing here."
13d323c5ccf74cebffd58095a4df2b4b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|226|1|V|markdown
	
	And Ed de Castro was really confused for a bit. He thought we were failing in North Carolina and that was going to be the end of it, and we had saved his bacon. So, yeah, he invited us all up, and we had a little lunch meeting. There were sandwiches and soda and he said, "Well, you guys did a good job, and I'm surprised. And I didn't realize you were doing this, but we are going to roll this out, and I understand there's going to be a film, and some tours, and you guys are going to be part of that, so thank you and eat your sandwiches."
3f46526eb265dfeeb02cebb1a28a63c1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|230|1|V|markdown
	
	The Eagle, now christened the MV/8000 appeared on the front cover of Computer World Magazine. All the media hoopla during the rollout turn that team of secretive, basement-dwelling employees into minor celebrities. After all, they had saved Data General.
a6fd05cb10d1bcc6be455972e924ac26|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|234|1|V|markdown
	
	But the good times were short-lived. Tom West could no longer shield the group from the company's internal politics. The team was unprepared for the animosity. Others within the corporation envied their accomplishments and were appalled that they got away with the secret project for so long.
36cdaf63f253334f8756b243fb97a668|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|238|1|V|markdown
	
	Soon, a new VP of Engineering replaced their ally, Carl Carman. The new guy broke up the Eagle group and shipped Tom off to Data General's Japan office all before a single MV/8000 was sold.
e36af8d9a8e0ff5f897aedcb525ffb69|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|242|1|V|markdown
	
	I thought we built the best 32-bit super-mini computer that money could buy, and I thought that was a great thing for Data General, and I thought it was going to kick Digital around a little bit, and not that we ever took the world away from them. Competition in that time was just way too tough, and it's hard to be a winner in high tech, but I thought that we had done something worthwhile.
015685f2b9f18afd8116b7ab7e9d5a01|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|246|1|V|markdown
	
	When the Eagle was released, it did save Data General, but after losing market share to DEC for three years, the company never really recovered, and the industry had moved on. Mini computers were no longer the big thing. The microcomputer race had already begun, paving the way to the personal computer revolution.
ffa6eb3794a06f852aa98c0a6809aa58|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|250|1|V|markdown
	
	Data General went on and did other versions of that, and improvements on it in other models, and it carried them for a while, and so they enjoyed some success. But things change. The market changed and they turned themselves into a software company, and then they ended up being bought out by somebody else. Now, I think they're a file drawer at some company in Hopkinton, Massachusetts.
7745f1cdc360aa3152066629989893e3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|254|1|V|markdown
	
	A year later, many in the Eagle group had left Data General. Some were burned out. Some were ready to build something different. A few headed out west to Silicon Valley, keen to find that next creative spark. Regardless, there didn't seem to be much point in staying on at a company that didn't recognize all they'd done to save it. That same year in 1981, Tracy Kidder's Soul of a New Machine was published. Now, the world would know how the Eagle got built.
3f81a89607b8214fb3936f8d96d2e23d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|258|1|V|markdown
	
	If you're asking me what the soul of a new machine is, I guess I would say it's the people and the things that they go through, the sacrifices they make, and the effort they make, and the excitement they feel about that, and the satisfactions they're hoping to get. Maybe get, maybe don't, but they strive for that.
d49cd551b0fa8e71edf421f958fd9898|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|262|1|V|markdown
	
	The machine, in a way, was kind of a bit character. It was the people who were the real guts of what it was about.
0998efc277700ffa1fceb5c9950fcdac|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|266|1|V|markdown
	
	In the next episode of our all new season on hardware, we go back in time to the world of mainframes and tell the story of another group of rebel employees. The computer they built gave birth to a programming language that changed the world.
c14a7fb53fa365d9b38f5a77bfcb40ea|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04-MiniCSOM-Final.md|270|1|V|markdown
	
	Command Line Heroes is an original podcast from Red Hat. This season, we're compiling some great research for you so you can learn more about the history of the hardware we're talking about. Head on over to [redhat.com/commandlineheroes](//www.redhat.com/commandlineheroes) to dive deeper into the Eagle and the team behind it. I'm Saron Yitbarek. Until next time, keep on coding.
543154e738a2057f47038467115e2a06|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|10|1|V|markdown
	Balloon-powered internet service goes live in Kenya
8fcefd68756505d250eac6a9526d1c29|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|14|1|V|markdown
	[Loon][1]
01d64101f6085c5ac2cce3296b82b1f2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|12|1|V|markdown
	Alphabet spinout Loon uses balloons to create a floating network of cell towers.
0955b72177391f6f401b03890f0159e7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|14|112|V|markdown
	ISP [Telkom Kenya][2] is launching the first commercially available 4G LTE service using balloons that act as a network of cell towers floating in the stratosphere.
	
873b3182d47434ec105c174c19e95873|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|12|9|v|markdown
	 衍生产品
052f7475dde98b36b626cd1910ac62ed|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|15|1|V|markdown
	The service will initially cover approximately 19,000 square miles in Kenya, according to Alastair Westgarth, CEO of [Loon][1], a spinout of Alphabet and the underlying technology provider. Roughly 35 or more balloons will comprise the fleet, moving continually, drifting in the stratosphere about 12 miles above the surface of the earth, Westgarth said in an article [on Medium][3]. "We refer to Loon as a floating network of cell towers," Westgarth said.
b0c96c33daab11859314d5c723456022|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|25|1|V|markdown
	
	In the bigger picture, internet service delivery from the stratosphere is an attractive proposition for [IoT][5]. At altitude, network coverage footprints can be more widespread, and coverage can be shifted as demand changes—a mining area moves, for example. In addition, there's less ground-based infrastructure to build out or deal with; developers can avoid the hassle of private property easements required for laying cables, for example.
386dd586e1587962e7bb585180a24198|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|28|144|V|markdown
	Service outages are conceivably more controllable, too. A provider could launch another device instead of having to trace faults through elaborate, remote, ground infrastructure. Backup balloons could be staged, waiting to be placed into service.
	
d9ce6c22808f349d0636222aeca8d265|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|22|1|V|markdown
	In testing, Loon achieved a downlink speed of 18.9 Mbps with 19 milliseconds latency and an uplink speed of 4.74Mbps. Westgarth said the service is capable of being used for "voice calls, video calls, YouTube, WhatsApp, email, texting, web browsing" and other applications.
	
4051759eb91ec88b731f23fe87c5c052|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|28|1|V|markdown
	### Drone-based internet delivery
c242c4fab45ab6ddd8caa8eb8e385442|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|34|1|V|markdown
	One reason the major Japan telco is interested in stratosphere-delivered internet is because the archipelago is prone to natural disasters, such as earthquakes. Floating base stations above Earth can be more easily moved than traditional cell towers, enabling a quicker, more flexible response to natural disasters.
7c840afdcda803ede66c9e8fdd602c40|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|30|1|V|markdown
	Another organization that's exploring the atmospheric Internet is Softbank, which calls its 260-foot wide HAWK30 drones a "floating base station in the stratosphere." (See related story: [SoftBank plans drone-delivered IoT and internet by 2023][6])
ddca64cbb17faeac83e7b990900aa084|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|34|123|V|markdown
	Loon's balloons, in fact, been used successfully to deliver internet service following a disaster: Loon provided connectivity after Puerto Rico's Hurricane Maria in 2017, for example.
	
f6ad80669b5099961fd03130bb3b954c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|38|1|V|markdown
	实际上，在灾难发生后，卢恩（Loon）的气球已成功用于提供互联网服务：例如，卢恩（Loon）在2017年波多黎各的飓风玛丽亚之后提供了连接。
17f92f1f6f6c504cf15af391e15cba83|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|36|190|V|markdown
	Westgarth said Loon's balloons have come a long way since initial development. Launching is now performed by automated devices that can propel the ground-station-linked balloons to 60,000 feet once every half-hour, as opposed to by hand, as was done in earlier days.
	
feeeaf2bcd6e05274acf4a7e0c307c99|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|38|182|V|markdown
	Machine-learning algorithms handle navigation to attempt to provide sustained service to users. That's not always possible, however, because wind (although not as excessive as can be found at ground level) and restricted airspace can affect coverage despite what Westgarth calls a "carefully choreographed and orchestrated balloon dance."
	
1f3b5457e87a93851f0a3997dce90baa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|40|244|V|markdown
	Plus, the devices are solar powered, which means they only function and provide internet (or reposition themselves, or feed internet to other balloons) during daylight hours. For that and other reasons, Westgarth and Kibati have pointed out that the balloons must augment existing infrastructure and plans—they're not a total solution.
	
77f6358100933edfca3c3675930f15a9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|46|1|V|markdown
	Join the Network World communities on [Facebook][7] and [LinkedIn][8] to comment on topics that are top of mind.
9b50174bcd759adf854f02be3c0d5f43|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|42|1|V|markdown
	"To connect all the people and things that are demanding it now and into the future, we need to expand our thinking; we need a new layer to the connectivity ecosystem," Westgarth said.
	
b822b945c47f98e2bc847c0a22d3f848|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200720.md|18|1|V|markdown
	Kenya is underserved by traditional internet, which is why this delivery mechanism is appropriate, said Mugo Kibati, Telkom Kenya's CEO, in a [press release][4]. "… the Internet-enabled balloons will be able to offer connectivity to the many Kenyans who live in remote regions that are underserved or totally unserved, and as such remain disadvantaged," Kibati said. Telemedicine and online education are two expected use-cases.
	
4353ff8f345f2b7aa34d9a7cd843ace1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S04FDCW.md|10|1|V|markdown
	Command Line Heroes: Season 4: Floppies: The Disks That Changed the World
0d23acb5ce86e4f5c46677598ab0e30a|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|1|62|v|markdown
	ferried
ee26908bf9629eeb4b37dac350f4754a|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|1|62|v|markdown
	blob
eb0a191797624dd3a48fa681d3061212|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|1|62|v|markdown
	master
bd4c3ed19a74f5d3dec8feed48b7ba9d|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|1|1|V|markdown
	<img style="height:61px;width:100%;" src="https://github.com/JonnieWayy/JonnieWayy/src/imgs/2.gif" height="50px" width="100%" />
1a5ce68f575deb4293bb4f6c36e5dbc0|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|15|1|V|markdown
	<img style="height:61px;width:100%;" src="https://github.com/ferried/ferried/blob/master/imgs/3.gif" height="50px" width="100%" />
780b7cf4d02a66af97bc43a357fddb9d|file:///home/godlovesjonny/Jonny/Open-Source/JonnieWayy/README.md|15|43|v|markdown
	https://github.com/JonnieWayy/JonnieWayy/src/imgs/3.gif
a71e852ea2ba97a21c5e2f3b65a95e65|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL31.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
	tags: ["git", "Linux", "github", "fork"]
bf215181b5140522137b3d4f6b73544a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL32.md|5|28|v|markdown
	github
b2fcb4ba898f479790076dbd5daa133f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL32.md|5|41|v|markdown
	fork
1703e21472e90f246fb891a9702ea005|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL32.md|12|1|V|markdown
	Traceback (most recent call last):
	  File "/home/godlovesjonny/.local/bin/pyinstaller", line 8, in <module>
	    sys.exit(run())
	  File "/usr/lib/python3.8/site-packages/PyInstaller/__main__.py", line 111, in run
	    run_build(pyi_config, spec_file, **vars(args))
	  File "/usr/lib/python3.8/site-packages/PyInstaller/__main__.py", line 63, in run_build
	    PyInstaller.building.build_main.main(pyi_config, spec_file, **kwargs)
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/build_main.py", line 844, in main
	    build(specfile, kw.get('distpath'), kw.get('workpath'), kw.get('clean_build'))
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/build_main.py", line 791, in build
	    exec(code, spec_namespace)
	  File "/home/godlovesjonny/Jonny/Installs/v2rayL-master/v2rayL-GUI/v2rayLui.spec", line 18, in <module>
	    pyz = PYZ(a.pure, a.zipped_data,
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/api.py", line 98, in __init__
	    self.__postinit__()
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/datastruct.py", line 158, in __postinit__
	    self.assemble()
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/api.py", line 128, in assemble
	    self.code_dict = {
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/api.py", line 129, in <dictcomp>
	    key: strip_paths_in_code(code)
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/utils.py", line 652, in strip_paths_in_code
	    consts = tuple(
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/utils.py", line 653, in <genexpr>
	    strip_paths_in_code(const_co, new_filename)
	  File "/usr/lib/python3.8/site-packages/PyInstaller/building/utils.py", line 660, in strip_paths_in_code
	    return code_func(co.co_argcount, co.co_kwonlyargcount, co.co_nlocals, co.co_stacksize,
	TypeError: an integer is required (got type bytes)
	
05544ec7d922d7bc24ee22d639aef9e3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|97|1|V|html
	<img style="height:50px;width:100%;" src="https://github.com/JonnieWayy/JonnieWayy/blob/master/src/imgs/2.gif" height="50px" width="100%" />
7ec499fd7e65bff710328e3906b22990|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|128|4|V|html
	    ![Jonathan Wang's GitHub Stats](https://github-readme-stats.vercel.app/api?username=JonnieWayy&count_private=true&show_icons=true&theme=radical)
cb171a7d99258b554d784602b0107417|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|130|9|v|html
	style="height: 50px; width: 100%;" 
0aa84c2f924da29da62d28977ae83834|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|130|1|V|html
	<p><img src="https://github.com/JonnieWayy/JonnieWayy/blob/master/src/imgs/3.gif" style="height: 50px; width: 100%;" /></p>
484a7d0e2108d5a18843287d0f79cbf1|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|97|1|V|html
	<p><img style="height: 50px; width: 100%;" src="https://github.com/JonnieWayy/JonnieWayy/blob/master/src/imgs/2.gif" height="50px" width="100%" /></p>
9468c8996d279ed6d842bfac8a965e12|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|97|1|V|html
	<p><img src="https://github.com/JonnieWayy/JonnieWayy/blob/master/src/imgs/2.gif" style="height: 50px; width: 100%;" /></p>
9da7cdc05e003e264888276b4b3d5da4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|98|1|V|html
	<p><img src="/images/about/2.gif" style="height: 50px; width: 100%;" /></p>
359d592ca7e0f31708b6b0fbedd9d2a8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|98|1|V|html
	<p><img src="/images/about/2.gif" alt="banner" style="height: 60px; width: 100%;" /></p>
334c4a4c42fdb79d7ebc3e73b517e6f8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/About.html|33|18|v|html
	none
85e8d1a83a82f111a93ff113a5851e6a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/SE-Notes1.md|4|1|V|markdown
	categories: ["NJTU CST Learning Notes"]
076194e007317ab8e8a6a0497c7994eb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Math-DJ.md|4|1|V|markdown
	categories: ["Math Preparation Notes"]
42a5b3c609a411bb55e8d3f1783347ad|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Math-DW.md|4|1|V|markdown
	categories: ["Math Preparation Notes"]
	categories: ["Math Preparation Notes"]
19c32685a36b512adb05301c644b27cf|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Eng-KY1.md|4|1|V|markdown
	categories: ["Language Learning"]
ce0f80f01a0d9bf87cdb3245eb875526|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/KMP.md|16|1|V|markdown
	**3.1** 若相等，则 `Next[i] = Next[i-1] + 1`；  
5ec11d2f0e20fe5b57335f402fada507|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|14|1|V|markdown
	Jordan Mechner is a pack rat. He's the creator of games like Karateka and The Prince of Persia. He meticulously saved everything along the way. Journals, sketches, and storyboards. All of it. So it came as a bit of a shock to him when he couldn't find something he'd saved, and that something was a pretty big deal.
	
3f017c53eab7ed10d361b07d05972120|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|18|1|v|markdown
	Back in 2002, Mechner was working on Prince of Persia: The Sands of Time. The programmers wanted
ea4cb5e7ecdd08d305722b51e5922110|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|18|1|V|markdown
	 to add the classic version of the game to their PlayStation 2 update as an Easter egg. So they asked him for the original source code. But when Mechner looked in his archives, he couldn't find it. He searched everywhere. The source code that he'd written on his old Apple II, the code he was positive he saved, had vanished.
50967fba6041879a76ecd263dd02b820|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|22|1|V|markdown
	Fast forward 10 years. Mechner's dad is cleaning house, and buried at the back of a closet is a ratty looking shoebox holding a bunch of dusty old 3.5-inch floppy disks. One is labeled, "Prince of Persia source code. Copyright 1989." And in brackets, in all caps, the word, "Original." The long lost code, found at last. It had sat in that box for a quarter century, before being unearthed like some archeological discovery.
	
7f027fd5bfd260be22fd4f4cf6983587|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|26|1|V|markdown
	But this was 2012. How would he be able to get it off those old disks, and would the data still be intact? Was it, in fact, too late to save his work?
	
92fb4ee740c61861274a6c742b950703|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|30|1|V|markdown
	Saving our work. These days it often happens automatically. With programs regularly pushing stuff into the cloud. We don't worry about manually saving things anymore. In fact, a whole new generation doesn't even know what that save icon represents. Side note: it is not a vending machine.
	
3d0ab77f4c98abcfd6ebf5d33f15380e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|34|1|V|markdown
	But for many decades, saving, storing, and transferring our data had to be done using some physical medium. When the personal computing revolution took off, which we heard about in our last episode on the Altair 8800, there was one piece of technology that became synonymous with saving. The floppy disk. It seems so simple now. But floppies changed the course of our history. Because they helped turn microcomputers into personal computers.
	
f1449f9789b34cdc17f91f00c33c1c0b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|38|1|V|markdown
	I'm Saron Yitbarek, and this is Command Line Heroes. An original podcast from Red Hat.
	
2f6b80f47981faf328774802b9a43031|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|42|1|V|markdown
	Let's put a pin in Jordan Mechner's floppy disk discovery for a moment. We'll come back to it. First though, I want to learn how the floppy disk was born in the first place, and how it became such a crucial part of the tech world for almost 40 years.
	
0fd0b307ecd5f4fc58c4d9daf6bfdeed|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|46|1|V|markdown
	Our first stop, 1890. Before electronic computers existed, there were electrical mechanical computing devices. The method for getting data in and out of them was through punch cards the size of a dollar bill. When electronic computers came along in the '50s, IBM standardized those punch cards with 80 columns, and 12 rows. A punched hole would form one type of character. No hole meant another.
	
3e6f0ff00dab8f76b95c8eb40b4ea490|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|50|1|V|markdown
	For a long while, those punch cards were the main method for data input. But handling hundreds of cards for bigger, more complex programs, was hugely cumbersome. There had to be a better way to save and transfer information.
	
b66669126151a6c16732b4756507c0ca|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|62|1|V|markdown
	Next up, paper tape. Which came along in the 1950s. To hear how paper tape played a central role in the origin of personal computing, listen to our last episode. Paper tape had the same punched hole method of reading data as punch cards. But because it's all one tape, no one had to worry about getting cards mixed up. It could carry more data, and was much faster to use. But as minicomputers grew in capacity, they needed more and more tape to store programs. Like punch cards, paper tape eventually met its limit.
	
4fee7ac49fdeb9ffb0e6443f087a190b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|62|1|V|markdown
	Enter magnetic tape. The key ingredient was mylar, a tough, flexible material coated with magnetic oxide to make the tape recordable. Nine tracks could store up to 175 megabytes per tape. That was a big deal in the '50s and '60s. Magnetic tape drives of 10.5-inch reels became standard issue for businesses.
	
93bee4b761b48bfbc525e180cfa1f01a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|62|1|V|markdown
	But the problem with tape is that while it's great for moving large chunks of data from one place to another, it's really hard to search on them to find anything in particular. We would install software on our minicomputers and mainframes using tape, but it really wasn't that good for anything small and portable or if we wanted to do anything interactive with our data.
	
7efd380fbe8c5348c8c6716ea5eeacc0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|66|1|V|markdown
	That's Steven Vaughan-Nichols, contributing editor at CBS Interactive. Sure, magnetic tape could store a lot more data. But it was too big and slow. It was only practical for the mainframe world, really. Again, there had to be a better way.
	
99bdb2b0909d684baef307a117a1eaaf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|70|1|V|markdown
	That better way came along in 1956, when IBM launched its very first disk drive—the IBM 350 disk storage unit. It was a component of the 305 RAMAC mainframe computer, a machine that filled an entire room. Here's Dave Bennet, a former IBM disk and storage product engineer.
	
9b63488ec09be645c30c3153e39ba6eb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|74|1|V|markdown
	There was storage in core memory. In fact, the disk storage device, of which RAMAC was the first, was a storage device that permitted random access to a given record, as opposed to a tape drive.
	
f08cb82a01e3903bc6e81555654983f5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|86|1|V|markdown
	While the floppy disk was originally developed for a new need. The reason was that there was an intermediate kind of storage. Originally there was the computer code, and then there was the computer memory, the working memory. But with System 360, there was a new class of memory in between, which they called firmware. In System 360, there was unique technology for the firmware in various forms. It was either a special kind of a punched card, or there was a thing called transformer read-only storage.
	
9cdca8ac370e6cfc3c49bd3fb4174a41|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|86|1|V|markdown
	Interesting thing. That disk drive almost didn't see the light of day, because it threatened IBM's punch card business. But the project was eventually approved. Problem was, the drive contained disks made of solid metal. RAMAC literally weighed a ton. It had to be moved with forklifts, and transported by large cargo planes. Not the most convenient storage method. But out of that, came a better solution.
	
f01b07379bbc345c609d56124fcf8e58|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|86|1|V|markdown
	But the new need was the desire to go from these technologies, to semiconductor technology, in the days when semiconductor technology was volatile. That means that the memory in semiconductors went away when the power was removed. So there had to be a way of recharging. Bringing the program back into that memory when the power was restored, for loading what was called a micro program, or that intermediate memory.
	
8f2dd6c46b018fecbac2dfaebe912db2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|98|1|V|markdown
	The need for such a device is what caused the development of the floppy disk drive.
	
9238659f7df6162a03694d9d6f03f815|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|98|1|V|markdown
	Noble personally went through all the things that he could think of, including various forms of punched cards. Including use of tape cassettes. I don't know what else he went through. But he hit on the idea of using an inexpensive form of disk drive based on a flexible disk, and a very inexpensive read-only mechanism.
	
1da48518e5ff0eb782a0789cbaff475e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|98|1|V|markdown
	So in 1967, a small team of engineers, led by David Noble, started developing an inexpensive system for loading those micro programs into mainframe computers. The codename for their project was Minnow.
	
ffa25e7a538cabf5f758e36fe1f05e96|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	The Minnow team wanted to be able to mail their micro program to various locations that needed to load it. So the product for sending that program around had to be durable enough to fly through the mail without having its data damaged. Some kind of casing.
	
18bcf7bd9a0acba2ce47491a32624356|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	Now what they actually had to do in order to make it mailable was, they decided to put it in a plastic container that was fairly rigid. They would actually read and write the disk while it was inside of this plastic container, like an envelope. A plastic envelope. When you have a coating on a disk and a rigid head, you're going to have wear. When you have wear, you have wear particles.
	
7bcaaa520a56a01e49f177d2df144894|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	The problem that they had was that as the wear particles built up, it kind of caused an avalanche effect. The particles would act as additional abrasive. Then pretty soon, with the particles being loose in there, you'd wear the recording track out, and it didn't work anymore.
	
19f697ea9a579f058f6ea572c401289a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	So a really smart guy that was on that program, a man named Herb Thompson, came up with a plan that was based on a household dusting fabric that 3M sold to housewives for dusting their furniture. He put a sheet of that in there, between the envelope and the disk. That material picked up the wear particles, and they embedded themselves in that fabric, and prevented the avalanche effect, and really saved the day.
	
266b9bb02e3b1eae672e01ad3c17a971|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	IBM released their 8-inch floppy disk in 1971. The Minnow team had done good, but they had no idea how good. Their breakthrough was about to evolve into a totally game-changing technology.
	
357b80ab102b0202493cd70935e6bcab|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	Flexible 8-inch mylar disks. One could even call them floppy. It was all housed in a slim but sturdy envelope, with that repurposed, dust-wiping mechanism. Altogether, it was easy to pick up, easy to mail. With a storage capacity of 80 kilobytes, each new floppy disk could hold the same amount of data as 3000 punch cards. A huge leap forward in storage capacity.
	
704264ee7f167928638c21260ddb1bd2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	The head of direct access storage products at IBM was a man named Alan Shugart. The Minnow project was his baby. Shugart was quite a character, and entrepreneurial by nature. He wore Hawaiian shirts as his daily uniform, never a jacket and tie. Shortly after the 8-inch floppy was released, Shugart left IBM, joined Memorex in 1969, and then founded his own company in 1973, Shugart Associates. Specializing in computer peripherals.
	
f84b6d0a9189f81e84cc3e18c3b22fe1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	Don Massaro followed Shugart from IBM, becoming VP of operations at Shugart Associates. A couple of years into that gig, Massaro received a request from a man named An Wang. He was the head of Wang Laboratories, one of the leading computer companies at the time. Wang had come up with a method for magnetic core memory that computers would use for the next 20 years.
	
935b69002742588d7793abe456bc93d4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	When Wang reached out to Massaro in 1975, he gave him a challenge. George Sollman, an engineer at Shugart at the time, remembers.
	
657bc870ac951e59f3367346fb34f9e2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|138|1|V|markdown
	Dr. Wang said, “I really want to do the small business system and word processor, but the disk drives that are out there, your big 8-inch ones are too big. We want a couple of small storage devices. They'll sit next to the CRT, and we can't have the big 8-inch ones, because the magnetic fields will corrupt the image.” So he thought we could take the 8-inch floppy and condense it down. So we knew we had to come up with something that was low cost and we could execute. We put together a plain old garden variety flip chart that described what it was, and we took it back and met with Dr. Wang, who said, “I like it, but you cannot use a motor in it that uses AC current because you're going to distort the image.”
	
4159dad1d72fbedaebd4fcbd782615eb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	So he said, “Why don't you find out who makes the motors for the tape players in, say, the General Motors cars?” So we went back, we implemented some very small motors that would fit in the mini floppy that would drive a belt, that would rotate the diskette.
	
67cd410d36859a312cd2cbfc0ee8a891|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	George Sollman had to figure out the specs of this new floppy disk, how much smaller it should be and what it should hold.
	
701440e09808fd821acfb8fd528d8b4b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	Now in historical tech lore, there are a few variations to the story of how that 5.25-inch size came to be. One states that weighing one of the floppy disk to be larger than pocket size to avoid unfortunate bends and breaks. The favorite folk tale takes place in a bar over several drinks with Al Shugart and a eureka moment when he spotted a bar napkin that happened to be 5.25 inches square. Here's Teri Shugart, Al's daughter.
	
45ca21cbb82aee3a192c776b35040842|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	What we did is, we looked at all of the tape players at that time, and we figured out their average dimensions. When you get all done with it, you end up with a 5.25-inch diskette size. We knew we’d probably have one time at bat. I think it was when Dr. Wang pulled Don and I into his office said, “Let me show you your disk drives in our new word processor.” And they also wanted to give us an order for some significant amount, 10,000 disk drives. So it was like, wow. We were now there.
	
c9ab70c3ac3b0c7543d990e59d0859aa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	But what really changed the game for Shugart and his team, and frankly for all of computing history, came down to one key moment when George Sollman and Don Massaro decided to demonstrate their 5.25 floppy disk at the Homebrew Computer Club.
	
411e6b525ad36185d9dcd72b6bea45f6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	There was a Homebrew Computer Club meeting at the Stanford Linear Accelerator meeting room, which turned out to be about a mile from where we lived. So we brought our mini floppy over and demonstrated it and there was a guy named Steve Wozniak in the audience and Steve wanted to talk to me on it and said, “I've got to have some people pay attention to this.”
	
e857375678f0df1a371fb7ad1a8daf0c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	And said, “You're the marketing guy. You're supposed to keep the front lobby clean, George.” And I said, “yes, Don. What's your point?” He said, “We have a bum in the front lobby, we should get him out of here.” So I went out and shook this guy's hands. And he had the most intense eyes, and I talked to him a little bit more and he was very interesting to talk with and he said, “I would like to walk out in the lab with you and see what this thing is that Steve talked about.” I didn't know whether it was legit, but he was one of the more interesting people I've met and it was pretty clear he had a high IQ and a huge curiosity and that was Steve Jobs.
	
278da5b0350598ce39804c6c4b01ccf8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	After the demo, George and Don went back to their regular routine, but a few days later in the office, Don called him aside.
	
e96ad392b5e9ed95b51c490b2a425601|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	He liked to drink and what I can tell you is most of his planning in any company he ever started always did take place in a bar. And so it's not unlikely that that might've actually been the case.
	
ac8820fd30870874c46d0d2d9962bc00|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|178|1|V|markdown
	Steve Jobs hated the cassette drives in Apple's early computers. They were always failing and took forever to go back and forth to get information. For the Apple II, he wanted a floppy disk drive and Steve Wozniak wanted to build it, but size was key. The floppy had to be shrunk down to make the computer more compelling to customers. So in a 2-week span over the Christmas holidays in 1977, subsisting mainly on a diet of McDonald's, Woz built the prototype. It was done in time for the new year's Consumer Electronics Show in Vegas.
	
cb01a017f8a0451712e0431837fcf298|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Woz loved building that floppy drive, describing it as the finest piece of engineering he ever engaged in. Jobs hired Shugart to manufacture the Apple floppy. The disk II became a major hit for Apple, helping drive sales of the Apple II computer and changing the industry. Here's Steven Vaughan-Nichols.
	
4f0ab485ce342acc91f8170b38374706|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	If you bought an Apple II, this was an option that very quickly became wildly popular. Really, you can give Steve Jobs the credit for being the person to introduce the floppy drive to the PC world. People are running this operating system called CPM 80 and there are literally dozens of small manufacturers and some big ones like DEC making CPM 80 computers and all of these computers use the 5.25-inch floppy drive. And then when IBM comes along in 1981 with the first IBM PC, it has become clear to everyone that this is no longer a hobbyist market.
	
2ee7239b5683b46799ec095840d9af4e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	This is a real business market and that this business is going to be driven by the newfangled 5.25-inch floppy drives.
	
00847bcc896f2d36359642c1567f1286|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	The floppy disk and the personal computer revolution were symbiotic. One fueled the other and vice versa. They evolved together. Thanks to the floppy, companies could write programs, copy them onto disks and sell them through the mail or in stores. It did for early PCs what app stores would do for smartphones, opening things up for developers. In fact, the floppy made the whole software industry possible, and as those software programs became larger and more complex, floppies changed again. In 1981, Sony introduced the next evolution of the floppy disk shrunk down to 3.5 inches.
	
53d04fcc133c7d3f2b736a005d696e87|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Because floppies were hand-sized and easily shareable, they had a social quality, like an early form of social media. You could meet up with people and trade disks. This was before people had easy access to modems and before the internet was even a thing. People shared floppies full of programs the same way they shared mixed tapes full of Cyndi Lauper tracks. And this way of transferring data even had a name, Sneakernet, because you literally have to use your feet to transport digital information from one machine to another and what people put on those shared disks could be anything, software sure, but so much more, especially with all the new digital creation tools that started to spring up.
	
604203d8af0a9fb648c5a0d844c039c8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Well, we all know about Steve Jobs and Steve Wozniak. The creators of the floppy drives, like Shugart, are not household names by any means, but the work they did was absolutely vital. If it wasn't for that, PCs would have been adopted much more slowly. It's impossible for me to see how the PC revolution could have happened the way it did without these early drives. It just made getting data in and out of computers an order of magnitude easier than it would have been otherwise.
	
0c1de3a72dc37e522602c2453c442459|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	The smaller siblings were encased in hard plastic with a built-in metal shutter to prevent dust from getting in. They were more sturdy and they could store more data. Funny thing, despite their hard case, they were still called floppies and once again it was Apple that made the 3.5s the new standard when they released their new Macintosh computer in 1984.
	
6ff1dc4721830ce80baf1a6b1ae5979b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Jaime Levy was one of those new digital creators back in the late '80s. She's now a professor at the University of Southern California and the author of the book UX Strategy.
	
a65b803d587ca36b27c0026d6644de83|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	No one had ever heard of an interactive zine before, not even Jamie, but she combined animation, art, and sound and an interactive interface and made them fit on a floppy. She made a bunch of copies, packaged them up and took them to a local bookstore.
	
ddadaaa910e737891285d850119df480|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	I certainly thought it was amazing too, that you could make something that was interactive and nonlinear on a floppy disk. I was making what became a diskzine. It was at the same time as desktop publishing. I think PageMaker was coming out. People were just getting Macintoshs and people were slowly gravitating to digital.
	
9c78b2788484ece0a74ed72a8bb38608|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	The bookstores kept selling out. Jaime received letters from around the world and started getting national media attention. Soon she made a business from selling her disks through mail order. Then her career as an interface designer took off. Her story is a testament to the floppy and the power of Sneakernet. There was a time when you could run an entire operating system off a single 160-kilobyte floppy drive, but by the mid '90s you needed multiple floppy disks to run anything. Files got bigger and bigger and it was annoying to do the floppy disk shuffle in and out of your machine.
	
c12933ac9f82689575e5f78c3cdaee51|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	In most cases, they did not have a Macintosh to even look at them, and so they didn't know what was on them. So I'd say, well here, take 10, take one home and check it out, and if you like it, then sell them. And they would keep them by the front counter because they didn't fit nicely on a rack and then immediately people bought them. As soon as anyone with a Mac walked in there and saw this thing for 6 bucks, they were like, “Yes, I want that thing.”
	
d00c71ec3bd2dae2e63b4aa15844475f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	People still have shoe boxes full of them. Floppies have in fact proven to be one of the most resilient pieces of technology out there. You might be surprised to learn they're still used to maintain the legacy machines like the US Intercontinental Ballistic Missile System. Up until recently, that system relied on 8-inch floppy drives for real. Matthew Kirschenbaum is a professor of English and Digital Studies at the University of Maryland.
	
5f4c127b73e1cb6ce7e01688c1452afe|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	So there was a story that was making the rounds about the US Air Force phasing out 8-inch floppy disks from its nuclear command and control systems. And so this was accompanied by pictures of people down in the missile silos plugging floppy diskettes into sort of old style mainframe computers. And I think that surprised a lot of people to see that something like nuclear weaponry was still controlled by 8-inch floppy disks. The government, the military is finally phasing those systems out. And I certainly think that's a good thing, but it's worth remembering, too, that floppies tend to be pretty durable and resilient as storage media goes. They're low areal density, meaning that they're relatively coarse or low-fi as compared to hard drives nowadays. Which actually made them a little bit more resilient, and reliable. They were also, because of the very age, the very obsolescence of those computer systems. They were ironically more protected against some of the kinds of networked threats that we see nowadays in the forms of viruses, and hacking, and that sort of thing. The phrase people used was the “air gap,” and so the floppies were not physically connected to the internet in any way and there's a way to think of that as a pretty desirable security feature. Even though it made people a little bit queasy. It's not completely absurd that they've persisted in use for as long as they have.
	
9cd90c020943cc78befa5e5389e0effd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	The writing was on the wall when the 1998 iMac was the first personal computer to ship without a floppy drive. When modems got better and the internet was easier to get on, people moved away from floppies to newer storage technology like the CD ROM and from CDs we moved on to DVDs, SD cards, USB flash drives. Turn around, and there's a whole graveyard of obsolete storage technology behind us. And now we have the cloud. Poor old floppies, they didn't stand a chance. But here's the thing, floppies linger. They have staying power. There's still the save icon for starters.
	
4c5da07b57b7528870d08eb5164a50da|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Sure. When you look at floppies now, they look flimsy and a bit ridiculous, but with the right equipment, disks from decades ago are still readable today. Who knows what treasures can be found when that data is retrieved.
	
183d4029f0b3cf92326ef287b4c68ca6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	He had gotten the Amiga and was experimenting with it and began to use it for some of his artwork and the resulting images were stored on floppies that were at the Warhol Museum in Pittsburgh. A team from Carnegie Mellon University was able to rescue those files, and we now have a dozen additional pieces of artwork by Andy Warhol.
	
707276c06be1ec79c790183b6983d2ef|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	A couple of years back, there was a press release that there had been a dozen new Andy Warhol images located. It turns out that the images in question were actually digital images that Andy Warhol had created on an Amiga computer back in the 1980s.
	
846db6438f0de71660feb6f001ae161d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	Speaking of treasures, it's time to find out what happened to Jordan Mechner and his long-lost source code. To recap, Jordan lost the original source code for Prince of Persia. Years later, his dad unearthed a shoe box at the back of a closet with a bunch of dusty, 3.5-inch floppies. One was labeled “source code,” but was the source code really on that disk? Would he be able to recover his Prince of Persia work?
	
82eea7243452d078ce8ff83e846f1de2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|258|1|V|markdown
	To find out, we talked to two people Jordan enlisted as his save-the-code crew. The first person Jordan contacted was Jason Scott. Free range archivist at the Internet Archive.
	
7ccd7d559bb4533c5159d2399063238b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Via a long running IRC channel, Jason tracked down Tony Diaz and recruited him for the job. Jordan invited this pair of computer archeologists to his home in Hollywood Hills. Tony loaded a bunch of gear into the back of his truck for the long drive from Oceanside to LA.
	
610598b039a9b491d7933cda467afc08|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	In Jordan's living room. Tony set up an impressive array of vintage Apple II computers and 3.5-inch disk drives. Then Jordan brought out the shoe box in a plastic bag like it was the Holy grail. This grail had rubber bands around it to try to keep the cardboard lid from falling off.
	
708492d6ebf836f951a1acd6882e3264|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	I took a couple of Apple IIe systems that I have sitting out, back them up, filled about half the pickup truck bed full of various stuff, and I got disk drives that are modified for reading difficult floppies and various tools like that. Disk drive controller that does things a little differently and some stuff on more modern computer that helps with the floppies if I have to do it. Yup, load it all up and hit the road.
	
bb6aa44a08e1b87febe3c683bfa60b0c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	I've been at the receiving end of this a lot of times where I just crack open the old box of disks, and it's all got that same kind of musty smell that. I don't know, it's hard to describe, but for those people who've been on a Navy ship, they all have the same smell. You go to an airport, the backside of it, they all smell the same. The floppy disks have their own unique, what's the word—luster—to them, anyway.
	
a23b7d8fec05db1605ece0eab6819432|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Tony pulled out a couple of the disks to see what condition they were in. He was ready to take off the protective cover if he had to and clean them with Joy dish soap. The disks hadn't been rotated for a long time. So he put his fingers in the center, gave it a wiggle and rotated it once to check for mold. Then he and Jason split off into two teams.
	
f3a7508c21ca14d39f3af8b616881cc0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	I was going to do flux readings, which is where you take the magnetic information, pulling every single wavering of magnetic info off of a floppy and that produces a very large and hard-to-decode image of the floppy. The idea was that if anything else went wrong or we were stymied in any single way, that we'd be able to use that in the future.
	
ceb57b9f6c2c42c108fb3e89d5b0b3e2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Tony understood what the information on these disks were and he was using utilities on a machine to read the disk as if it was back in 1990 and the data was something that made sense to him. We went after the disks that were very obviously standard copies of files. Trying to make sure we weren't touching any one-of-a-kind disks until we knew what we were up against. Some of the things that were on these initial simple disks were things like Death Bounce. A game that he made that never came out along with an Asteroids Clone. They worked, and we were able to make them play on the machine and he was looking at games he hadn't even thought about for decades and they were running fine.
	
588a805a1cf9af41647db12774185811|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	So far, so good. Now for the disk labeled Prince of Persia. Tony started analyzing it and realized it was a backup of a hard drive that had been split across five floppies. He needed to put the whole thing back together.
	
3fbe7802bd4515a21e6ca2766baa8407|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	So to restore those images, you have to have a hard drive volume the same size as the one that you wrote it from. Of course, I brought drives, but what are the odds we're going to have the exact same size because you didn't always. That's okay, I'll make a 10 meg partition on my card here, and I will make a copy of these disks, and I will tell it that you have been backed up from a 10-meg drive. We proceed to restore it and after that get a nice hard drive full of a source code files to go through.
	
9b1d397053018f30b18405e3d7e765f4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	It was going to work or it wasn't, but you'll always want to prepare for the worst. There's this guy I know and his name is Tony and Tony's relationship to Apple is astounding. He knows them inside and out. I would call him an “Apple II whisperer.”
	
58ec8251d714cfd6e9c8510b2a7aa90c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Jason uploaded the salvaged code to GitHub where it was instantly accessible to fans from around the world. Word of the event had leaked out and people were logged on and waiting.
	
e8d24503df6bad228e2d832551d0733d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Amazing. The moment the team saw the directory with recognizable source code files, they let out a collective sigh of relief. Prince of Persia had been rescued from the sands of time. Their work was not quite done.
	
13b94d1d9b5e0f828649ce645d773428|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	The big reveal happened when they did the first catalog and looked at the files.
	
52c14159997fd84ed7f3a137e58c5285|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Yup. That's it. Merlin files, they all end in “.s” and there's the OBJ files for when it's compiling or when it's assembling—it's all here. Oh my gosh, there's so many different versions of it we have to figure these out, but all the heads basically turned pretty much concentrated right back towards the monitor and the computer and it was kind of silence more like, okay, here, let's see what's on this one? How about that one? I remember this.
	
c50496d122c1c0f778f827ff8b2c184b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Our main goal that day was to get it uploaded to a repository on GitHub as soon as possible. We were connected in that same IRC chat room the whole time, and we had all kinds of people asking us questions. "What is it? What are you seeing? What do you got?" And we're getting live feedback as we're going.
	
cf7864f475eadb0ceafde002b69e7340|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Since that eventful day back in 2012, the Prince of Persia source code has been studied, shared, commented on, and cherished. Here's Matthew G. Kirschenbaum with some final thoughts.
	
a714552fe19d6cbce7b016fe4ae72390|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	Once he did that, and we started scrolling through the text files that were on that disk, Jordan recognized them immediately as his original source code. So we just kept going through all of the disks even though we knew we had struck gold, just to make sure we weren't missing some other versions. Among the things we found were other work in progresses from Prince of Persia where he had tried different graphics and so on.
	
496665b4ec0fad82c0f9ab1518dae940|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	It's another example of the way in which aspects of what we would think of as digital culture, sort of the artwork of today, the creative expression of our own moment. A lot of it is locked away on these dusty obsolescent floppies, but with a little bit of luck and engineering, there are some pretty remarkable stories that have emerged about how we've gotten things back.
	
2938d246f4a86f5eab3095194dbdf3bd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	John Romero who worked on Doom and Quake said that he learned a few tricks looking at the source code and a bunch of other people of course were completely confused as to what they're looking at because a code written in the late 1980s is a lot different than today. The fact that he is byte-by-byte moving memory, trying to clear space so that a Sprite looks like it's supposed to. That's a whole other world.
	
485e272fe402af387dbeb0d0b8b58dc1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|338|1|V|markdown
	The save icon is as close as some of us ever get to floppies these days, but when you see it, I hope you'll remember that it's part of this amazing history we should never take for granted. A history of sharing and rescuing the things we create. A history of saving.
	
c5b324337cce2b7fbd40dbd8a332ab24|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S04FDCW-Final.md|342|1|V|markdown
	Command Line Heroes is an original podcast from Red Hat. Check out our floppy disk research notes at [redhat.com/commandlineheroes](https://www.redhat.com/commandlineheroes "redhat.com/commandlineheroes"). By the way, if we saved this episode, which is about 51.5-megabytes, we figured it would take 36 3.5-inch floppies. I'm Saron Yitbarek, until next time, keep on coding.
	
b2391aabcb2ea4de11dbed210c19c757|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|359|8|V|markdown
	[](//www.redhat.com/en/commandlineheroes)
	
	[](//www.redhat.com/en/commandlineheroes)
390c8ab5bbf7834097ebd96ed1a10d21|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|357|848|v|markdown
	](//www.redhat.com/en/commandlineheroes)
	
80443562505d0a7b5559c186c4906a0e|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|115|1|V|markdown
	![107](/images/2020/01/wallpaper/107.jpg)
43bdb0d10e4116f9536d2b52e901d5f0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|357|1|V|markdown
	David Heinemeier Hansson.
a8a4c3599f0984dbd2f84665a6d37eb7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|393|628|v|markdown
	[redhat.com/commandlineheroes](//www.redhat.com/en/commandlineheroes).
0c1073f3b5477e96c963ad3f0809c97a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|431|1|V|markdown
	继续写代码吧。  
a9306e6cdd08e4f5f647bb331cf3482f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|440|1|V|markdown
	[](//www.redhat.com/en/commandlineheroes)
	
	[](//www.redhat.com/en/commandlineheroes)
	
8e31e1836b27db489e9e9efeb4a2c5c9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S05WCW.md|440|1|V|markdown
	[](//www.redhat.com/en/commandlineheroes)
8116371b28bbfc2aeacac9cec657dd34|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|15|1|V|markdown
	Hello, welcome to Command Line Heroes, an original podcast from Red Hat. This is episode 2 of our special mini-season all about the work life of coders. From developers to sys admins, to architects, to engineers, to programmers. I'm your host Saron Yitbarek, and joining me for the run of the season is Clive Thompson, journalist, technology writer, and author of the book Coders. Hi, Clive.
9787b1c728755564f8c45b16e0ed9237|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|15|1|V|markdown
	Hello, welcome to Command Line Heroes, an original podcast from Red Hat. This is episode 2 of our special mini-season all about the work life of coders. From developers to sys admins, to architects, to engineers, to programmers. I'm your host Saron Yitbarek, and joining me for the run of the season is Clive Thompson, journalist, technology writer, and author of the book Coders. Hi, Clive.
	
fbd9e83801d515e3446b47d79874a888|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|19|1|V|markdown
	Hi Saron. Good to be back.
	
ce6cd7d92fe8081e069ef9152d6cc9bb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|39|1|V|markdown
	Well, my name is Mary Allen Wilkes. I was a computer programmer for approximately 12 or 13 years between 1959 and 1972.
	
10d46bbf85a6959007bdc084a3accfa8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|39|1|V|markdown
	Thanks for joining us Clive. In this episode, let's talk about something a large number of us, not just tech workers, are very familiar with by now, because most of us have had to do it since March of 2020. Remote work. Now, you might think that remote work in our industry is a relatively recent phenomenon. As technology has improved, the easier it's gotten to work from home. Think again, let's listen to this developer's story.
	
68104226d64fa3c111154ebcdb6bb106|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|39|1|V|markdown
	Mary Allen is 82 years old. When she was a teenager, she fell in love with law and wanted to be a lawyer, but back in the fifties that wasn't a wise career choice for a woman. Mentors discouraged her and told her it would be too much of an uphill climb. By chance, one of her teachers pictured another route for her.
	
47cbb67e89f0597b84f2e98d791d5365|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|39|1|V|markdown
	I had been told when I was in the eighth grade by a geography teacher in class one day, apparently I was giving him some kind of argument about something, and he just stopped and he looked at me and he said, "Mary Allen, when you grow up, you ought to be a computer programmer." Well, I had no idea what he was talking about. Years later, I wondered how he knew what he was talking about. He taught geography and French, nobody taught computer programming. But I never forgot what he said. And I think one of the reasons that stuck with me for so many years was that it was something positive that an adult told me I could do when I grew up.
	
1f7e95c51c7c023afafcb6f689884ad3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|39|1|V|markdown
	When Mary Allen finished college and started applying for jobs, the only place that had a job for a computer programmer was at MIT. Nobody had any training in computer programming. Her main qualification was two logic courses she'd taken in college, but that was more than her MIT colleagues had.
	
57b5aa8959013b3030f633b095505c49|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	The Link had a display screen. We called it “the scope” because it was really just a laboratory oscilloscope. It had four boxes that you could set on a tabletop or a desktop, and one box held this oscilloscope, one box held two little magnetic tape units that were pocket-sized. That was basically your permanent storage, your hard drive, if you will. That was where you stored your programs, and you read in your programs. Another box was called a console box. You could use the switches to load some code, some bootstrapping code for example, into the memory of the Link. It also had a keyboard. So, you had the basic interactive setup that you have today, with a keyboard and a screen and some means of permanent storage. And then of course there were all the electronics, which were housed in a big box about the size of a refrigerator.
	
cdcadc607f96f76c213bb254102da1bc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	In 1961, Mary Allen got assigned to a group to work on the Link computer, a laboratory instrument mini-computer. It was one of the first truly interactive computers, not too dissimilar to a desktop computer today.
	
081caab68106712e76e3bbb74b0d87fa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	I started off at Lincoln Laboratory in Lexington, Massachusetts, a big MIT research facility that is funded by the Department of Defense. We're talking 1959, and I first learned they were using these big behemoth computers, the ones that occupied a whole room. That's what I first learned to program. They were IBM computers. You wrote your programs out line by line in assembly language, and then you handed these sheets of paper to a punch card operator who punched each line of code. Then you took that to the computer room and you gave it to a computer operator.
	
73fade689cf8ec2618dae855f64b0d98|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	In 1964 the Link Group made a tough decision to relocate for MIT to Washington University in St. Louis, Missouri, but Mary Allen didn't want to go.
	
cf6514f1a6dfea28abbcceae44686ed2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	I said to him, "I want to write the operating system." I was probably the only person who could write the operating system at that point. So, Wesley just said, "Well, no problem. We'll send you a Link. You can have it at home." And that's how it came about. A couple of guys from our laboratory arrived one day in a small moving van and wheeled the various four boxes, the four modules and the refrigerator size thing that held the electronics and the memories and so forth. They wheeled those into my parents' living room in Baltimore. They might've had to create 20-amp circuits for it, but otherwise, you just plugged it into the wall socket.
	
752a9eee918781c11d8e5ab600885e88|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	Wesley Clark, the lead of the Link Group thought it was a great idea.
	
3d33f2410b8c2c1508638664578af152|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	I didn't want to move to St. Louis right away. I wasn't sure I wanted to move there at all. What I wanted to do was write a proper operating system for the Link, because up to that time, all we had was pretty basic little assembly programs that I had written in 1962 and ‘63. And I said, "I could do that. I could write it at home."
	
0aa4a0e22301ed71cd889a085fa1feb3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	And what did her parents think of this large new intrusion in their home?
	
7764af0ba8d56609f888af29ef928ea2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	My father was an Episcopal clergyman and he would tell everybody he saw, "I bet you don't have a computer in your living room." It was quite a novelty to say the least. Quite a novelty.
	
9d1dee90d266121bb63d07b4c6df230f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|79|1|V|markdown
	Mary Allen's parents were gone all day, so she was able to concentrate. She wrote the operating system right on the Link, no need for punch cards, so she could debug much faster. She communicated with her team by phone or good old-fashioned snail mail, and would take the odd trip to St. Louis if necessary. In just under a year, she completed the OS and wrote the programming manual.
	
4e75e2dd52a3e2c27fbdc05c59af9b58|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	I've been working at home now for several years, since I quit my last day job in 2001. So, I'm a work-at-home person. And in fact, when I left that day job, I said to myself, I'm going to keep working, but I do not want to go to an office, and I do not want to sit at a desk. But by that time, of course we had laptops, so I was able to sit in an easy chair.
	
b479a465a8e2fed25e575902e1983644|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	I never felt isolated, and I never felt frustrated. I felt challenged. I think programming is basically a job for introverts, people who work well in isolation, people who work well independently, who don't need a lot of support or interaction with others.
	
c683a3c6b3958f62122d391cff6f32d7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	So Clive, Mary Allen has such a great story and you got to interview her for Coders. She was not just a computer programming pioneer, but a remote work pioneer as well, wasn't she?
	
6aa3d1752d81be37426434e6b97f2c14|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Over the years, Mary Allen has worked in other jobs that required her to work at an office. Her preference though, is working from home.
	
75ef8a66ed7cbe0fdfa8a05123249ccd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Well, it's very popular, and that's because coders love working from home. The vast majority of coders, if they were given the choice, they would say, yes, I would work from home all the time. And the reason why is because it just gives them a quiet and a focus and a lack of interruptions from people tapping them on the shoulder in the cubicle. If you were to say to them, "Hey guys, everyone, where would you prefer to work?" They would all prefer to work from home.
	
04b45f6bceb167998b6520729f077a80|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Programming is that ideal kind of work to do remotely. Even my own experience with self-isolation has made me realize that I've been doing exactly that for a number of years. So when you talk to coders, how many of them prefer this work method? How popular has it become?
	
e5997930b02fc2c14496c4cb8f5da1dc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Yeah. I mean, as far as I can tell, she is the first person to have a personal computer at home that she's doing her work on. There's this amazing photo online of her and she's sitting there at the foot of her parents stairs. It was downstairs from the top floor, it’s where they have all these components where she's sitting there, a little table, and working. And it's a glimpse of the future, right? I mean, what she was doing then would take 30, 40 years to be realized en mass, that she was completely ahead of her time.
	
bfc5879a95ddb795ba9c2a7070696f48|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	One tech company that is a big advocate for remote work is Basecamp. They've been around for 20 years and they've been remote from the start, even before it became popular. Their staff work from home around the world. Let's listen to David Heinemeier Hansson. He co-founded Basecamp with Jason Fried. He's also the creator of Ruby on Rails.
	
36dc5bd36e18e7cee4bf7c236230aaac|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Actually, for the first six months after I started working with Jason, we just emailed and IMed. We didn't even talk on the phone. So it took six months, I think, before we had our first phone call, and it took over a year until we met each other in person. So for a very long time, this was not conventional wisdom. We got access to this huge talent pool of people who realized that they don't want to live in San Francisco. They didn't want to live in New York. They didn't want to live in Seattle. They didn't want to live in any of these big tech hubs, yet they're really proficient, qualified people. So the fact that Basecamp allowed them to do this was a huge factor in both our hiring strategy and our retention strategy.
	
872608287d3f60711be77620e1b03130|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	In 2012, I had a series of conversations with other entrepreneurs where I would ask them about their work practice, and we'd talk about remote, and they would just give me these trite defenses for why remote couldn't work. "Oh, you can't do collaboration. The magic only happens around the white board." And I thought like, what, people still think like this? How is that possible? The whiteboard is basically nonexistent at Basecamp. The number one tool we have is writing. It's asynchronous, by yourself writing and you post it, and you let some time pass by. Good collaboration happens when creative people get time and space to do deep thinking and they compile that deep thinking into deep writing. The deep writing consists not of one chat line at the time, but fully composed sentences, that form paragraphs, that form complete arguments.
	
4c563a6d46dda16d1c8b84cc92db5e5d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Then you consider those arguments with the advantage and calm of time. 90% is considered writing, then 5% chat, and then maybe 5%, I don't know, Zoom or Tubal or some other video connection—share-my-screen kind of collaboration.
	
b2acce20cdcf41f354537204cf31e112|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	So Clive, David is making some super interesting points here. Some I never would've thought of. Are there other ways of working that coders were using that make remote work as success?
	
a555ae670e23ef4d4fcc3b6a2d51388d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Yeah, absolutely. They arrange times when they know that they're going to be in contact and maybe in face-to-face contact. So there were definitely companies I spoke to that said, "Okay, we know our developers do their best work when they're not here, but we want them to be here some of the time, we want to have some face-to-face meetings." They still believe in that. And so they would have these schedules that were like, okay, on Tuesday and Thursday, from 1 - 5 PM, we need everyone to be in the office just so we can have some time to talk. The rest of the time, go wherever you want. You can work in the office if you want to, you can work wherever you want. It could be at a Starbucks, it could be at home. So this sort of interesting latticing of new arrangements is one thing that works really well.
	
86eef303dd5bddcf366fc202c8ceac7f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Another thing that I think works really well is figuring out what's the sort of mode of chat or communication that everyone likes the most. And in David's case, he likes, and his team likes, long-form email conversations. I've definitely talked to people that like that, but other ones, they actually really like Slack, or they really like good old fashioned IRC, right? Like green text on a black background. But they worked out what their co-presence was, because there's this phenomenon that psychologists who talk about online communication describe as ambient awareness, which is the ability to know what other people are sort of thinking about and doing when you're not physically there with them. There's a lot of technologies that allow us to do that. And the best remote teams think carefully about what their ambient awareness method is, and they lock in on it and they use it.
	
86ab8670ec3574cc1e07087903af6b02|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	One thing that I found to be really useful in my own remote working experience is to co-work via a Hangout session or a Zoom session, just letting the stream run and just having that connection open. It's been a really great way of feeling less isolated, kind of having company with the expectation that each person is still doing their own thing, but it gives that opportunity to tap someone on the shoulder, because I can just say, "Hey, I'm stuck on this one feature. Do you mind for the next 5, 10 minutes, can you pair with me and help me get unstuck?" So it's been a really useful way of having some type of social interaction and having those opportunities to get help when you need it.
	
8736d1800ca0bd28df021fe474394da3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	That makes total sense. I mean, I think a lot of people try to figure out some way to do that with an experienced person or even frankly, even just with a peer because you can get a lot, even if someone's not senior to you, but is just a different brain.
	
5782ca69a712aec52d932ea2fa0b1f26|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	Yep. Absolutely. I think it's a different type of communication, but I'm not convinced it's a lower quality of communication.
	
fb78c99ea14e1b1242cc627efd3668ee|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	So now that we've all been forced to work from home, companies are realizing that they can still get work done. Have attitudes changed to the point that remote work will go mainstream?
	
1868465ab4e83fa1444b6e9236854595|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	No, not at all. It's like what psychologists would call metacognition, thinking about thinking. Really, the task at hand is: what type of thinking am I trying to do today? And is that thinking better served by being physically with someone, or chatting with them online?
	
5c286c91feb19e174b4bdd9f944473e8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|159|1|V|markdown
	That is a really big question that I don't think we have an answer for yet. I think what's going to happen is that a good chunk of the workers out there, including the developers who have never worked or been allowed to work from home a lot, I'm going to say more than 50%, are going to ask to have that be made semi-permanent. They're going to discover that they're way more productive and they'd like to do it more often, and that a certain amount of those meetings were just not necessary and interrupted their flow in their workspace.
	
49c76bdbf25341c75a7505084e172fac|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	So I've done remote work for a number of years, I've done it just working for myself, and then once I had a team, I had a couple people that were working with me, but my experience with remote work has been a maximum of four people, and they were everywhere. We had someone in LA and Brooklyn and Chicago, but I'm wondering: is remote work only really successful for small teams like that, for smaller companies like Basecamp?
	
bee520d6e3f8306272077ca7ab868b0a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	So if remote work is a great way to be productive, it's getting more popular over time, and especially for coders it's such a great way to get work done it can be a lot more convenient, and our type of work is really meant to work from home, why do these big tech companies keep building such large campuses for their workers to work in?
	
4370a903f6da162e545a73e25953883b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	Steve Jobs literally created Apple's headquarters to maximize the chance that people wouldn’t just work together, but they would have to sort of convene in places to create those creative sparks.
	
48b621ad82bb17e093a76cbc780b968a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	Yeah, that's a great question. I have seen it most successfully deployed when development teams were small, at the startup level, where they had five or six people, and in fact, the reason why they were able to get the talent they wanted is that they said, "Okay, you are in Russia. I'm in Toronto. Our other person is in Tennessee, and we're just going to work together." So you see it a lot in a certain type of startup that has a specific skill set they need and they need to get people that they think are the best and they're not going to demand or ask those people to move. Those are small teams.
	
758794d347764b5cc04bd63bb3443c9b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	Let's hear another argument about working remotely. Dave West is CEO of scrum.org. Fundamental to the work at this company is the first rule of the Agile Manifesto, individuals and interactions over processes and tools. Here's Dave.
	
60e625f4923b5ba12fa6b56d8c83723e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	I think it's a little easier to manage the communications because you can almost think of this as the communications between a set of nodes, and as the nodes grow, the number of people that need to communicate grows dramatically. So with four or five people it works really well, with like 50, it gets really hard, 150, oh my god. It gets a lot harder for a company that is 10,000 people to figure out how they're going to do that.
	
37abd97c0695eaf397a556f6b2cdb866|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	I think that the reality is that if you really want to build a product at vast speed, working together in a really effective way, face-to-face is still probably the best. That doesn't mean it's the only, and it doesn't mean you can't be as effective in other forms of communication, in other forms of distribution, as it were, however, the best and the easiest is face-to-face communication. I, to this day, still believe that the most enjoyable software projects that I've ever worked on and development projects and teams I've ever worked within have been located in the same physical geographic, same office. And that's for so many reasons. It's because of going out and getting a few beers on a Friday night, the ability to really get that extra level of understanding about a human being when something's going wrong that may be challenging their work, like their dog's died or something like that.
	
c6ecd211ae2bf5b960899ff4324279a5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	It's partly based on their idea or their concern that creative thinking only happens when people are face-to-face, and have unexpected connections to each other. And that's based in some actual science. I mean, there is a fair amount of research that shows that a certain type of communication and loose collaboration and loose idea generation happens when people in a company encounter each other that maybe didn't really know each other's existence. I mean, it's a classic water cooler effect. 3M, the big paper company that famously invented Post-it Notes, just a multibillion dollar invention, when one person that had invented this kind of sticky substance encountered someone else who was looking for a way to hold pieces of paper in place. And because of that chance running into each other, they created one of the most iconic products of that company.
	
1d031772eb95209a67dc112167d423c4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	You get that sort of extra stuff that's a lot harder to get from a distributed team. But on the other hand, I don't think all the best software engineers live in Silicon Valley. So I'm conflicted, I think the value of a co-located team is huge, but I also think the benefits, particularly around diversity of people in different locations, is also huge. So, there's a balance that you have to make, and it's incredibly hard. What I do know is that if you are going to distribute your team, then you must pay particular attention to facilitating and enabling the environment to actually replicate as near as possible that co-located team. Which means bringing them together frequently. So you do a lot of screen-sharing, and you spend time together, and maybe you shove on a Google Hangout and just leave it running and just share. Those sorts of things become very, very important.
	
435805ba244159232a22396b1ea74e9d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|199|1|V|markdown
	So Clive, open source projects are built on collaboration and teamwork. So does remote work hinder that? How conducive is remote work to real collaboration?
	
d40c5e8dd101a3e4c7f5546fd46f02a6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|203|1|V|markdown
	Well, the first part of that question about open source is easy to answer, which is that I actually think most of the big successes in open source have been extremely remote because by definition, the magic of an open source project is a developer saying, "Hey, I've got this code base I'm working on. Does anyone have any ideas?" And instead of just asking the 50 people in your company, you ask the millions and millions and millions of people online. Because only 1% of 1% of 1% of 1% are going to actually have a good idea for you. No one in your 50-person organization might care about the weird little library you're building, whereas scaled across the planet, you're going to find nine people that are just unbelievably passionate and interested in helping with that thing. So in one sense, open source is by definition heavily catalyzed by remote work, by remote collaboration.
	
4ee7603a0709472d1e5891e028457b65|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|223|1|V|markdown
	Maude Mensah Simpson is a front-end developer who works from home while being a mom to two young kids. She explains one of her early challenges with remote work after she had her second child.
	
1d7f86f4137691250275e66a8a60b777|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|223|1|V|markdown
	I had only been a developer for a year when I had my second. So there's so much you miss when everybody else is in the office and you're not. One of the things was the little side conversations that people have about work in general. My senior developer would, when I'm coding, he would pass by behind me, and then he would see things that I'm doing and he'd be like, "Oh yeah, I like how you did that." Or, "What are you doing?" The act of him just passing by my workspace gave him the opportunity to talk to me about coding and how to do things properly. It just might be your personal confidence to work remotely, because you just miss some of the teaching and the tutoring when you're not working inside the office.
	
30b3d42451b8d1ea11eb9be39b6a36b3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|223|1|V|markdown
	It's challenged by it too though, because all the sort of stuff that Dave was just talking about is true, which is that with no face-to-face contact, it's really easy for all the social glue that helps an organization work to fall apart. And you see that in open source projects. They can really turn into nightmares of antisocial behavior online because people are bad at reading each other's tone. They'll think they're just being direct and other people read them as being unbelievably curt and insulting. And things that could be cleared up in like 30 seconds with face-to-face social interaction can tear open source communities, and have torn open source communities, apart online.
	
0d7ae580339f6229cca3bb2bc79d89f8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|223|1|V|markdown
	Clive, I'm wondering if the experience of working remotely is different for an experienced coder versus an early career coder, because I can imagine for an experienced coder, who's used to working in an office environment and then has to switch to remote work the change probably isn't too bad; it's probably not too challenging. But for an early career coder, I can see them really benefiting from being around mentors, people with more experience, being able to tap people on the shoulder and ask them a question. So, are early career coders losing something by not being physically around other coders?
	
1d8ac588f4611963ca15f0ee8b6ffec3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|223|1|V|markdown
	I think they are. Yeah. I think that's a very legitimate concern, and I've definitely heard it from older developers who came up through face-to-face collaboration and knew that wow, they could learn an enormous amount and get unblocked with a 30-second conversation, face-to-face with a senior developer. So Jeff Dean is a senior, senior engineering manager at Google. I heard from lots of people who worked alongside him, that he is just this incredibly useful senior resource because people would come to him with a problem, and he could literally just see the vector straight through it, and in like 20 seconds go, "Oh..." He wouldn't give him the answer, but he would tell them here's where I think the issue really lies, and they would get unblocked and they would go back and they would be unbelievably productive.
	
8cafe0a6e3689b8b3eee0d88cb810617|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	And so the junior people would benefit greatly from interactions like that. I wouldn't say you never get them remote, but they're harder to get. Then there's also code reviews. So at a good company, that's well-managed, you're going to have code reviews where your peers, and ideally senior people who have been around the block a bit, are looking at your code and sitting down and talking about it and asking you how and why you did it this way. And that to-and-fro takes a lot of unconscious decisions that you might've made and makes them conscious, and that's incredibly valuable for learning. To be able to understand why you did what you did, to externalize that for someone else, is incredibly valuable.
	
7621dd0a61068037ba74388bb8af6df6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	You possibly could underwork, but I never heard about that in all my interviews, both with developers and their managers. In fact, the opposite. I tended to hear that managers were worried that people were never turning off, never stepping away from the work. I also heard that from the developers, too, that it was hard; it's always hard to stop thinking about a problem for developers. When you work from home, you'll spend your eight hours of deep immersion and you'll get a lot of stuff done, but because you don't physically go somewhere else, your body can't help trick your mind into turning itself off. Like if you leave the office and you get in the car or the bus or the scooter or you walk home, you physically go from one place to another, and that physical signal helps your brain reset itself.
	
0d319ea07ff9aa715a1b26fb95640f56|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	One of the problems I've heard of with working remotely is this idea of blending, which is when you start work and then it's 6:00 and you kind of should stop working, but you're at work, you're comfortable, you'll work an extra hour or two, and you end up overworking when you're working remotely. Is that a thing? And then kind of the opposite of that, can you underwork by working remotely?
	
6026cd4d346df89606525b57fb0fedf8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	There's just lots and lots of science on this. I mean, literally physically going from one room to another helps your brain reset itself. When you don't have the ability to do that, when you work from home, the natural chess-like mental space of a coding problem becomes very hard to tell your brain to stop working on it. And so there's a lot of reasons why people who work from home just keep on going in a way that they know is unhealthy, but they have trouble stopping.
	
da4d12cf8cb7228795325325c262861b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	David Heinemeier Hansson.
	
58642dd7e7dce1915f2e87b894052ec9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	We have some funny anecdotes of how people at Basecamp have dealt with this over time. We had a data analyst at one time who had two sets of slippers. He had his work slippers that he would get into when he walked into the office and then you would have his home slippers. They were both just a set of slippers. They just provided the separation between work and home. And I think that separation is pretty important. I think for a lot of people who do use their home, being able to segregate one room of the house for that and then when you leave that room, you're no longer at work is also a healthy practice.
	
3b6b37965400032b6eba101fae1c3201|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	I love the slipper idea, like Mr. Rogers. Here's Maude again. After years of working from home with kids, she's figured out her own formula to make working from home work for her.
	
b74a947b69b91f53c4a6e0ece65b6a3e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	So Clive, are there other tips or tricks to managing a workforce remotely or even being a remote worker?
	
59ab997da4eeb04961f566d76b96f79d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	Sure, if a company is going to have a serious remote culture, one important thing is for people at the top to also work remotely so that there isn't this sense that remote is this secondary status and that big decisions are being made face-to-face by important people and the remote people are not part of that. An example of that, that I ran into while researching my book, was when I was talking to some of the engineers for Postlight, which is a terrific company here in New York City. They develop apps mostly for the media industries. The head of engineering was remote, and he was working in the woods south of Nashville. When I talked to him, he said, “This is a really important thing, because we have a lot of remote engineers, and they like knowing that I'm heading up the engineering workforce, and I myself am remote." It means that everyone in the company thinks very mindfully about how to make remote work, because the person running the show in that part of it was himself remote.
	
4610c760497f644ba3d8a30a79e65a25|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|263|1|V|markdown
	It's very easy to lose track of time. You could be sitting there for a few hours and not know how long you've been coding away because you're at home. How I fixed that was I had a Pomodoro timer and I would make sure to take dedicated breaks every hour or so. Then just being able to like separate home from work. I have an office at home, and I don't let my home life come into the office to make sure I separate the two. So when I'm outside, I can be mommy or whoever I am when I'm not at work, but then when I come inside the office, it's go-time and it's a lot easier to get into the flow of working. I would do a quick status update every day. In the morning, I'd let them know this is what I'm working on today and then in the evening, I'd let them know where I was. I don't think there's any such thing as over-communication when you're working remotely. So yeah, just communicate, communicate.
	
637f21215f6b74cdd124636376dd923a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|283|1|V|markdown
	Thanks, Saron.
	
f8ca3da90012fb23c39333dca62971d9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|283|1|V|markdown
	Most of us had to make a drastic shift in how we work since March of 2020—working from home, whether we did that already or not. And when we work from home, it comes down to our personal work style and making sure that whatever project we're working on, whatever company we're with, whoever we're managing or being managed by, our individual preferences are respected and we're allowed the flexibility to work how we work best. Putting people over process isn't just the first rule of the Agile Manifesto, it's the open source way, and it's the approach that yields the best results. For more research on this episode, go to [redhat.com/commandlineheroes](//www.redhat.com/en/commandlineheroes). Next time, our final episode of this career-minded mini-season, Clive will be back and we'll tackle the question, what kind of coder will you become? Thank you so much for joining us Clive.
	
823eb6fc06797a1af72bfedb48ae1d3f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|283|1|V|markdown
	And I'm Clive Thompson.
	
208f046f34e5efe84ea3bdd09ddeae08|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|283|1|V|markdown
	You've been listening to Command Line Heroes, an original podcast from Red Hat. I'm Saron Yitbarek.
	
1c7170e7e728327bac1ce77e91f9cf6b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|283|1|V|markdown
	All right. How are we going to do this?
	
b3f963fcdd12a3110739899dbe002c25|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|295|1|V|markdown
	Keep on coding.
	
8fd315a4ad654e0cd44bfa0156cd6362|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|295|1|V|markdown
	Oh my god. Can we use the “keep on coding” for the last time?
	
b3f963fcdd12a3110739899dbe002c25|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|295|1|V|markdown
	Keep on coding.
	
6e484ee3354456173d701e3eb6fb20b8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|10|1|V|markdown
	Leaving Google: Five Years On
93b53d03ebff5499f3e28fae3ac553ce|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|13|1|V|markdown
	About five years ago now, I handed in my Google employee badge and walked out of the Sydney Google office to start a new life of self-employment. I figured I should write up this story because I got a lot out of reading [Michael Lynch’s][1]. As you can see, it’s still taken me a couple of years to get around to writing this post, but I finally told myself that if I don’t write it for the fifth anniversary, I never will.
5b4104d266e657ec9a9413dc0f4a5a7e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|15|442|V|markdown
	This post is kind of long, but I hope it has something useful for new developers who are interested in working at a big tech company, or for big company employees who are wondering what it’s like to quit. I’ll talk about my story of getting into, working at and quitting Google, and what I’ve done since. Feel free to ask if you want more detail about something, though I already have a lot of blog posts to write, so I can’t promise anything in-depth straight away.
	
df1407ca95b190ae9c0aff22e129695f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|17|239|V|markdown
	Also, at the risk of labouring the obvious: I haven’t worked at Google for five years, so don’t take this story as a literal description of Google today or what all Google employees experience. However, I think a lot of it’s still relevant to tech careers in general.
	
a1d818190b5ca381b2c047dbbc59ff08|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|19|1|V|markdown
	### The windy road to Google
41469892c9d769f99fc19433b60896ba|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|20|1|V|markdown
	
	I got my first paid programming job in 2005. It was working at the local power company, taking some old Pascal code and making it work on a different OS with a different compiler. It was basically just a summer job for extra money while doing the maths and physics degree I’d started that same year. They were happy to have an undergraduate who could do the job; I was just blown away that these grown ups were not only interested in my programming hobby, but actually going to give me real money for it.
a3421446f890abcc49c332f542ff5546|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|23|582|V|markdown
	I kept doing stuff like that until I graduated in 2007. I liked programming work, and Google was a cool company doing cool programming stuff, so I applied for an internship. The Google interview process was famous for being tough, so I spent weeks practising on all the Google interview problems I could find online. I don’t think the process has changed much in 13 years: I submitted a résumé, and I got invited to a few rounds of phone interviews that were mostly algorithmic problems (I remember a dynamic programming one and a divide-and-conquer geometric one). I passed the initial interviews, and got invited to come to Sydney for a day of on-site interviews with Google engineers. I went home and waited for what felt like an eternity for the phone call from Google HR. I got rejected.
	
6b8292c4e4d21e21859eb738fd3db941|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|25|673|V|markdown
	It’s natural to feel bad about our rejections and failures, so we don’t talk about them much. But for the same reason, other people don’t talk about theirs, which only makes things worse. When I _did_ get into Google later, I felt like there must be something a bit wrong with me as a “ex-reject”, but one day I was at a table with a bunch of colleagues and the conversation came up. That’s when I discovered that actually a lot of people around me had been rejected at least once. I wasn’t even the “worst”. One guy joked that he must have only got in because Google HR got tired of rejecting him. I’m talking about some pretty impressive engineers, as well — some were responsible for code I use all the time, and I bet you use, too.
	
ba2e985722e33350a194bf3a11934105|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|27|1|V|markdown
	Companies that do interviews usually interview two or more candidates for each hire. That means there are more rejections around than acceptances, so the average interviewee gets rejected more often than not. Yet we keep forgetting that. Four developers go into an interview; one gets hired, the other three rant on social media about how the interview was totally flawed because they personally got rejected. Sure, interviews are far from perfect, but we need to stop taking them so personally.
b5a9c1f152e0494e75a25b2f95381a5b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|29|150|V|markdown
	Rejection and failure aren’t so bad as long as you can figure out what went wrong and how you could improve yourself. The Google interviews were heavily algorithm-oriented, and I fumbled through a lot of them but definitely didn’t come out shining.
	
557285c97dcfec6176bed2b643efa9b7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|31|574|V|markdown
	After the Google rejection, I got two things and took a kind of sabbatical year. The first thing was an Australian Business Number (ABN) that I used to do maths and science tuition, as well as tech job contracts. The other thing I got was a library card at the university science and tech library. I wasn’t planning to interview at Google again, but the interview experience told me there was a lot I didn’t know. I’d give tutorials in the library and read books in between. By the way, a few people thought I was weird for doing all that accounting and stuff for my tuition business, when most tutors just did it cash-in-hand. But I learned a lot that’s helped me later in life, so I don’t regret a thing.
	
2e95a696f6179e6ef277b7faf9663cc4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|33|219|V|markdown
	In 2009, I did a maths honours year (a.k.a, bachelors fourth year) based on the work of a magician-turned-mathematician called Persi Diaconis. The computer science department let me take one of their algorithms units as part of it.
	
ac6ab30d5a39eba7c6118ae738a192b3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|34|1|V|markdown
	
	As I said, I hadn’t planned to interview for Google again, but let me fast forward to how it happened. I’d been studying Japanese since high school, so in 2012 I decided to try living in Tokyo. That mostly worked out, except I made one pretty big mistake: I didn’t have any paper qualifications in Japanese, so it was really hard to get job interviews. Eventually, a friend of mine who had been accepted at Google suggested I give it another try. Like all Google offices, the official business language at Google Tokyo is English, so they didn’t require me to have Japanese qualifications.
b842d33cb41b644ce62a72ba57d639ad|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|37|1|V|markdown
	### Google interviews, again
49769896b99578f01dc25ec48bb09c4f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|140|1|v|markdown
	[11]: https://theartofmachinery.com/2018/03/23/seto_trip_1.html
6dff726bad857d3e96ca2760f250d437|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|39|299|V|markdown
	My friend gave me a recommendation to Google HR. That definitely helps, but don’t get too excited if you get a recommendation, yourself. It ensures your résumé gets noticed (not trivial) and cuts one of the phone interviews, but you still have to pass the remaining phone and on-site interviews.
	
9caba2a0d80bb1f4ba573514da0b0ba9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|117|1|V|markdown
	![109](/images/2020/01/wallpaper/109.jpg)
bec20bc27a8e00d4a50d6b42c73824c6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|115|475|v|markdown
	New York 
951f087367024ce16013bb623db19c7b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|115|514|v|markdown
	Seattle 
25d2ce70c78aa60beb08cb8bc1caf499|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|175|295|v|markdown
	Brooklyn 
5a6b65c1640413621aa571d6a7ddb9a3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|175|319|v|markdown
	Chicago 
800ea49b740ffbc383f0b6a5867130a8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|179|301|v|markdown
	Toronto 
460d63824484fd17ab81aaa8694d85d2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|179|331|v|markdown
	Tennessee 
6152559a9d93cc3f9a4783977725643d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|195|169|v|markdown
	Silicon Valley 
379369adbee0a9e198b2fb0350bcdcff|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|267|510|v|markdown
	gile Manifesto 
731a51225a7c74e2dcf59910e135a671|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|275|37|v|markdown
	ommand Line Heroes 
4e563c26e6ffd312727efda92d0e8393|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S05WCW-Final.md|275|55|v|markdown
	Red Hat 
8a226fe8c502a20e492e3412a94c82d1|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|6|1|V|python
	data_vgg_T1 = np.array([51.33, 53.33, 54.46, 54.32, 53.62])
2bf88ceda4980fcccecf1aa63e3721f7|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|8|15|v|python
	.array
4e1ea23655e03d1e19e0f2c0b44ecf3c|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|11|54|v|python
	label_K
26c5fa986bbd01ab014df8a1a495a90d|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|11|41|v|python
	data_K_vgg_T1
58e2c73772e571400a2e3ee18cb43990|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|5|1|V|python
	import pyecharts
57f9fd27f06eb3ff1c0c5f58473f8aaa|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|10|1|V|python
	#  data_vgg_T1 = np.array([51.33, 53.33, 54.46, 54.32, 53.62])
58e2513daf7c2bdf670e2d892cdaec2d|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|15|1|V|python
	sns.lineplot(x="Acc")
b5ce3d2718082860098eb0ce08c1b72d|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|11|18|v|python
	51.33, 53.33, 54.46, 54.32, 53.62
50d4e6c41898d24ff5b1b54c132b19a5|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|19|1|V|python
	        .add_yaxis('Top-1', [51.33, 53.33, 54.46, 54.32, 53.62], is_smooth=True)
b84aa49e7eba9305f4204c7c877da6e8|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|18|20|v|python
	dwFaker
ebd73ade48cb3e102d1dbbfbc0377c5f|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|18|20|v|python
	choose
64c0981f5c6da7eb274f37828ebb02e0|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|24|1|V|python
	line_K_vgg.render('VGG16_K.pdf')
d50a13c2c391cfb337f8d1aee4892331|file:///home/godlovesjonny/Jonny/Temp-Storage/MathmaticalModeling/pre/MCM-Models/Charts/pyecharts/Bar.py|2|1|V|python
	from pyecharts.render import make_snapshot
	from pyecharts import options as opts
	from pyecharts.globals import ThemeType
	
17e038f0378606757e0f85c9d0d9a044|file:///home/godlovesjonny/Jonny/Temp-Storage/MathmaticalModeling/pre/MCM-Models/Charts/pyecharts/Bar.py|2|1|V|python
	from pyecharts.render import make_snapshot
	from pyecharts import options as opts
	from pyecharts.globals import ThemeType
	
	from snapshot_selenium import snapshot
e43db4e528a5495ef6bdc7f9d1d0de9c|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|1|1|V|python
	import numpy as np
	import pandas as pd
	import matplotlib.pyplot as plt
	import seaborn as sns
	
f6a5478fdc0c038c25aca670c6213e6f|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|5|1|V|python
	from pyecharts import options as opts
7ef4f8611ab4ee38a3b5303d3d89b47f|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|12|1|V|python
	df_K_vgg_T1 = pd.DataFrame({'x': label_K, 'y': data_K_vgg_T1})
8b8086d5fc2d51bc6e5e66e5daa5f0cc|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|9|1|V|python
	data_K_vgg_T1 = [51.33, 53.33, 54.46, 54.32, 53.62]
	label_K = ['2', '4', '6', '8', '10']
999fb8bea022868e3fcbed34043e1e1b|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line1.py|16|1|V|python
	            xaxis_opts=opts.AxisOpts(name='K'),
02adff210b4e48f76c2620a9f358ae17|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line2.py|8|8|v|python
	vgg 
ae747eae2399401a652e33026f66fd2d|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line2.py|12|30|v|python
	73.94, 75.43, 75.88, 75.67, 75.49
373f5aea77aa30189ddaa665f50d9817|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line2.py|13|31|v|python
	82.16, 83.91, 84.19, 84.01, 84.77
f827cf462f62848df37c5e1e94a4da74|file:///home/godlovesjonny/Jonny/Pys/draw_figures/eccv_line2.py|11|76|v|python
	True
aa4075b8e2d430d20916158ec1e81ac0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|41|285|V|markdown
	This time I practised using problems from [Project Euler][2] and [Google CodeJam][3]. I had to do some live programming in a Google Doc during the phone interview, which was a bit awkward, but otherwise the phone interviews went okay. Then I got invited to the Mori Tower office in Roppongi for a day of onsite interviews.
	
1add0ebd06c6fe6613a0f19412612885|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|45|220|V|markdown
	My first interview went terribly. I got brain freeze. I knew I could solve the problem, but I couldn’t think straight until the interviewer walked out of the room. Instantly I relaxed and recognised it as a ternary search problem. That was pretty frustrating, but I decided to just keep going and see how the rest of the interviews went.
	
ed59710301c218be91c106c1c9bc28a0|file:///home/godlovesjonny/.vimrc|338|1|V|vim
	" Plug 'lpinillae/Qim-codepainter'
8bf1acf53c03ab2f6f01740364b4bae8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|121|1|V|markdown
	![113](/images/2020/01/wallpaper/113.jpg)
5bfa8f4040a9f0bb6486190764a5d122|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|122|1|V|markdown
	![114](/images/2020/01/wallpaper/114.jpg)
8069f56023937e93978866436b39a549|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|124|34|V|markdown
	![115](/images/2020/01/wallpaper/115.jpg)
3dc85164f9da20f66d399cd9d381173d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|125|34|V|markdown
	![116](/images/2020/01/wallpaper/116.jpg)
e0b3de398298b229d7bc2dfc7a265095|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|126|34|V|markdown
	![117](/images/2020/01/wallpaper/117.jpg)
1b63bf5c4fc9e9fe38004a1f6f0837a2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-AYS.md|10|1|V|markdown
	Command Line Heroes: Season 2: At Your Serverless
315c7bf1130dbdbd499c13767f490d06|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-AYS.md|256|1|V|markdown
	在我早先时候抛出那个术语“功能即服务”时，你有过些许畏缩吗？过去，基于云的开发为我们带来了大量的“ …… 即服务”的术语。我们有基础架构即服务，我们有平台即服务，我没有软件即服务、数据即服务、数据库即服务 …… 你明白了吧。  
0c921c1ffe041e5e9cf922a04ae9a3b5|file:///home/godlovesjonny/.vimrc|379|1|V|vim
	colorscheme deus
bbdca68cbee3a9d88718a7519ef740be|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL1.md|79|56|v|markdown
	[滴滴云](www.didiyun.com)上购买GPU/vGPU/机器学习产品可享受 9 折优惠
a21ab9f9a31bd16027af1f0de3c2a695|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|7|1|V|html
	                Written by <a itemprop="name" href="{{.Site.BaseURL }}" rel="author">{{ if isset .Params "author" }}{{ .Params.author }}{{ else }}{{ .Site.Params.author }}{{ end }}</a> with ♥ 
8d002072094958c28801e2b18fbb9605|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|8|185|v|html
	 with 
33dceae095113e13f40cef7eb7039e28|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|70|15|V|html
	            <p>
	                <span>PS:</span>
	            </p>
60c76fec350c94b2219475a40e3aa0d2|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|67|116|v|html
	AI大师活动购
8df66366b1ced82749d48acbcaba24af|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|67|116|v|html
	AI大师活动
55ca91d6b44b5652ad2420eecb67e428|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|67|277|v|html
	></s
5504ceea91e62031eccf9496eab44be7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/themes/LeaveIt/layouts/_default/single.html|67|274|v|html
	</b>
1a5ec72941f5a5b44fac92cf9e8022f7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL1.md|77|1|V|markdown
	
	---
	PS：欢迎参与[滴滴云](www.didiyun.com)AI大师活动购买GPU/vGPU/机器学习产品，使用我的滴滴AI大师码 0724 可享受 9 折优惠！  
04da5a679b388db2977e015d9ed8bd04|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-AYS.md|628|66|v|markdown
	普林斯顿
33f85fbe1c43476ae13dd9cff9feda75|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|126|1|V|markdown
	![118](/images/2020/01/wallpaper/118.jpg)
cbdad1189a001a877d34433e25ce7266|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|127|1|V|markdown
	![119](/images/2020/01/wallpaper/119.jpg)
6b17bdd6f66eae74696b74f6709fbde5|file:///home/godlovesjonny/.vimrc|13|1|V|vim
	set cursorline
c4f6377e812d5b67801ae9791b5e786d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|14|1|V|markdown
	But now, of course, all over the United States of America and all over the world the internet is revolutionizing our lives.
	
cd01a30c50e6170e817a4bad32ecbab9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|18|1|V|markdown
	It's 1998. Google just hired its first employee, and Vice President Al Gore is talking to the press.
	
9a604c5949d18d7c06f5f1b66b1cd1d9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|22|1|V|markdown
	This technology is still in its infancy. When president Bill Clinton and I came into the White House there were only 50 sites. And look at it now. I got a bouquet of virtual flowers on my birthday.
	
310a8d661c5f726b8a8adfc5c44b94c4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|26|1|V|markdown
	Okay. I can sense your eyebrow arching already. Why am I playing you some bit of 20-year-old internet history? It's because I want to remind you that the basics of the internet are still the same.
	
dd8239c7c840059e50883fe3333aebee|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	Sure, there are more than 50 sites now. I get it. But, we're still sending virtual flowers. And from a developer's perspective, if you strip away all our incredible advances, you've still got that same client-server model that started it all. A client-server model that allows for a distributed network.
	
6a4aee08dd3489471608094084a89de0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	Today, developers talk a lot about going serverless, which sounds like Al Gore's client-server internet just got trashed. And if we're not careful, we can abstract away so much infrastructure that we forget there are still servers out there doing their server thing.
	
031e8bf124c81f4ebb103a04537e9008|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	Did you know wireless internet has wires somewhere?
	
35eff764c6655b6b14c6a78a910826dc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	Andrea Passwater works for a company called ... Wait for it, Serverless. They created a popular, open source framework for developing serverless applications. Andrea is noticing how organizations are hungry for ways to abstract away infrastructure, which is what that magical word serverless is always promising.
	
f6a9bea100c8a92936b85190ca07de76|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	For Andrea, the attractions of serverless are pretty obvious.
	
587e3c5afa16e7d6ef56e7d0b77a7c27|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	I think the term is mostly just supposed to convey the fact that as a developer who works in serverless applications, that's abstracted for you. You don't have to worry about those servers. You just get to code and deploy that code up to a cloud provider and not have to worry about the administration. That's really what serverless means.
	
967f84dfe4431bcde87ac96059bcccbf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	And another big serverless bonus is you're less likely to find yourself reinventing the wheel.
	
6d3f8ddfcf242a3bd797f5817f5332dd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	But does serverless literally mean no servers? Really? Or is the developer's relationship with servers just evolving? In this episode, we are talking with people from around the world to explore this thing called serverless.
	
fb28ed28224832fdb78fe62f5ffbf6e0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|66|1|V|markdown
	If you develop applications in a serverless way, it gives you the ability to not have to think about the mundane parts of deploying that application and maintaining that application. It just means that you can focus on business value. You can focus on being creative.
	
f1fcda3012cd00e3ae276d83b3b0d34c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Why would you create your own way to handle authentication when services like Auth0 exist that you can just use and tap into? At the end of the day, serverless is about giving developers the opportunity to be able to more easily and more rapidly build all of these ideas in their heads that they want to get out into the world.
	
78bf9829d8ad1e20d5ff7703c140fbe9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	I did it!
	
74f093da8c5054c4afa92becff611ed6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Allow me.
	
2846a3ef948d30b7e7f6e1ace70fd311|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Andrea has been hearing a lot of talk about non-developer development.
	
80919ef0dfa638b42bc0b27a687ec919|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Imagine you've got your arms full of groceries, and you're stumbling toward a door. The door slides open in a simple, friendly-
	
82282ec4aa31e380b9b9b19805c0af0e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	... kind of way. That's serverless. It's opening the door for you, making development a lot less cumbersome. In fact, as organizations flock toward hybrid cloud setups and the serverless movement gets underway, the barriers toward development are vanishing.
	
9c1f36b2061593fb35d8678f09205aa2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	There's something you do on your job that is so rote, like you do it every single day and it's this thing that you're like, "You know, couldn't a computer do this for me?" I started to feel that way. I happened to work at this company called Serverless and they were like, "You realize that the product we make can help you with that. Right?"
	
1b1d6fedda2e3d93775d2bbb26d06c26|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Sort of stories from people who traditionally thought they couldn't code, and who are now actually able to get into the software engineering game because of serverless. And able to make these tools that automate their own workflows and stuff like that. It doesn't matter what job you do.
	
8bf03307f20fca0d3b24074e26a0f3aa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	With Lambda, I've never had to pay for any of these small applications that I've made. I can make these bots that do part of my job for me, and I can become more efficient at my job, yes. But, I also don't have to do that boring stuff anymore. I can do something that's more fun.
	
53d26ce60d65028715a11f84ba8b4ed7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Andrea figures that pretty soon a lot of people who never considered themselves developers are going to realize they can build simple apps themselves. At essentially no cost.
	
cdd14533fc3445e2a2e47a8cd129a328|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Even for pro developers, that automatic door effect is pretty tempting in an arms-full-of-groceries kind of world.
	
0a7a51eb0a54cf2e34d26e52125e9034|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	I'm going to throw another term at you. Ready? Functions-as-a-service. That's the offering at serverless places like AWS Lambda, or Apache OpenWhisk. Functions-as-a-service means a single function can be executed on demand, only when triggered. And that's a lot more efficient.
	
ae6498e3e9a3a62a53f2b851c5035230|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	I think people are very attracted to the idea that they can get prototypes working with a one- or two-person team in a very short amount of time. Like, a handful of days. They can get a prototype up and running. I think it makes it very exciting for people to start realizing that they get to just focus on what drives business value in their application, or for their product, for their company. They get to focus on that business value.
	
c09ca0932c95fd440917107dcb63bd35|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Plus, I'm way less worried about compute capacity and run time. End of the day, that serverless deal can be a pretty sweet setup. In fact, some folks have even started wondering, are we going all in on serverless? Does it maybe replace containers?
	
0cfefbbeec9dd04d4f7b994efc4f768d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Michael Hausenblas is the developer advocate for the OpenShift® team over at Red Hat.
	
02e1f80901e5dc6bdb02e386bb12bea9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	I see the point.
	
56001a0bc9d19b003c16fd7c9ba78ad0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Yeah. That sounds pretty good. It kind of sounds like that dream of a “noops”environment. Where everything is automated and abstracted away. It's like the developer's version of minimalist interior design. Nice, clean surfaces.
	
542bb881b52349fa3e4be8d17858e9c5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	If you look at all of these things we have here, OpenShift and Cloud Foundry and what not, you have essentially these abstractions. This idea that the Heroku, essentially, bent it more or less. Right? This very simple way of, don't worry about how the execution will run, don't worry about what it looks like. Just give us the code and we take care of the rest.
	
2be67d47491d2af867884bc312a9ffb0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	But, Michael wants to give you a little reality check.
	
274f35716be77de1285203bbef041e60|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	No ops! Right? You know, it magically just will somehow go away. You see these jokes on HackerNews and Twitter, and wherever. Serverless, of course there are servers! I know, of course there are. There's operations.
	
cf8ad898c0fe43eca1c819cdb2535443|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Someone has to do that, someone has to rack the servers. Someone has to patch the operating system. Someone has to create containerimages, because guess where these functions are executing? Of course, in some kind of computer.
	
46f992f3eeead795e7d92e792bc7d777|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	You cannot simply call or page an infrastructure administrator. Obviously, someone in your organization has to do it. But, I fear that many organizations only see it's so simple and cheap. We don't need to move this, and this, and this. Then forget about who is on call, and who really is on call? Do you have a strategy for that?
	
7db27a22f9599ea486a3ee39cecbbf5d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	It's not a zero-sum game. Functions-as-a-service don't outright replace containers. Instead, they add a tool to the tool box. And I've got some more news for you. Using that new tool, going serverless doesn't just mean the ops is somebody else's problem. You've still got ops of your own to think about.
	
8d4990b2d18c207f2eb0d2bec03b3c17|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	You see there is operations bits on the infrastructure side. But, also with the developers. If you're in an extreme case, using let's say Lambda, then you have zero access to any kind of administrators. Right?
	
1ed68b48c5e16f957504bc2762f630ea|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	If no, then you might want to come up with a strategy first before you go all in there.
	
64ff44caaa7e4065eb80abfeb4c5c3f7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	Someone needs to be on call. Even if you do go "serverless,." you still need to have your head wrapped around that bigger picture. You still need to get your operations in order.
	
ce0b21c48f41ca75ed41d475719f548c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	When I threw out that term earlier, functions-as-a-service, did you cringe a little? Over the last while cloud-based development has brought us an army of “as-a-service”terms. We've got infrastructure-as-a-service, we've got platform-as-a-service, we've got software-as-a-service, data-as-a-service. Database-as-a-service. You get the idea.
	
6aa7c0abe1d4df18544f05afe56f9065|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	If you're having trouble keeping the differences straight, you're not alone. That's why we tracked down Himanshu Pant. He's a tech lead at the Royal Bank of Scotland, over in Delhi, India. He spent years parsing out the differences here.
	
1403c81f85cac719bcd02a6c7671e16d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	So, serverless is not the same as containers. Serverless is not platform-as-a-service. But Himanshu wanted to nail it down. What can functions-as-a-service provide, exactly? And what can't it?
	
05341ff2941b63f801a4ef59da50a596|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|186|1|V|markdown
	These other computing paradigms are so similar sounding in name to serverless that one tends to forget, or tends to get confused as to why, this is not being called serverless. Or why this is being called a serverless.
	
4685d3c64a02d157ba344824cf4a5340|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	As I did, I realized that cost aspect was one aspect, which kind of really tippedthe skill in my favor. So even though all the other participants, they had a much better ... I would say coverage, or maybe coverage of logic. The NLP situations or their scenarios.
	
e5ded7510af6560718b2dadec454977c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	But, as far as cost is concerned, and scalability, I was going hands down to win over there because with serverless it all depended on how many invocations people are doing on that chat bot. Accordingly, the functions will be triggered. This was one use case when I was very much happy to do serverless, because of the cost—there was no cost. Faster development time, and to be honest, it was not exactly a production-scale workload at that moment.
	
531aa8d6e826ee5d4a4c2e1d39f5103c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	He shared two anecdotes with us, two times when he figured out when to go with serverless and when to forgo. The first moment came during a 24-hour hackathon. Himanshu was trying to make a chat bot.
	
19b33769cbb8f4574353f019fea2fdf9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	I could make do with the somewhat infant tooling of the platform. It was a win for me.
	
925736004c1eee2284f12f3a2e71fb52|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Nice. That was a time when serverless madesense. But at the bank Himanshu is working in right now, they're migrating their systems from legacy to cloud. And that's bringing up different kinds of goals.
	
da8e6cb86de9c14ce5ed64619ed63325|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	There were various vectors on which this was going to be a sales. For example, that coverage of logic, the cost which would be incurred and the scalability. I sat down to do this work in serverless.
	
5f80eba3f3c9abb3884a46e5bfe0f849|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	We are trying to see which workload can go on to which paradigm. I should just go into IS, BAS, FAS, obviously the ones who come down to enterprise space. You need to see that there are no aspects, like number one, let’s say vendor looking. And number two, that technology should be proven, extensively. More so for a risk-averse industry like, you know, the banking sector.
	
d9ba11b9f19aa3f745c9c3011912eb99|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	This is where a platform-as-a-service, but still has a better proving, and a better capability, and a better tooling kind of takes the upper hand.
	
a0a3d9f4a62e4a038cc3484d22e793c3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Himanshu is looking at his own needs, and his own comfort levels, and curating which workloads make sense in which cloud computing paradigm.
	
d145763eefbf40a10df610dedbe7fa53|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Let's say a listener is working on a trading shop, and he wants to build something, just an entry one. For him or her, serverless may not really be apt because the latency may not really be desirable in that kind of a machine-particular application.
	
14ec1c8a7e4db61b896410afeaddac8f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	End of the day, it's a measured approach. Instead of throwing everything into one bucket. When we're thinking about which cloud-based architecture is actually right for the work we want to do, there's one more thing to consider. How all that abstracting, all that taking things off your hands, can end up changing not just our work lives, but the finished work itself.
	
020b9aa344f4b34860d1d8930d87157b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Abstracting away part of our workload can mean less ability to customize. Think of a car you bought off the lot. It works. It drives. But then, think of a car you built on your own. That one works the way you decided it would work.
	
ab0a15b14625d10d6639a13f5c020c0f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	It comes at a cost.
	
6e7c05104f87921f2758ba98d4c7ffac|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	In using these serverless applications, you may not have full control of everything that's going on. You don't have control of scheduling, or when they'll run, or where.
	
b2a93815e459079ec13b98bc703377ad|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Rania Khalaf is the director of AI Engineering at IBM research.
	
6fad2d5af819a423c6a0472fd4b93851|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	There's a trade off taking place, right? Fine-grain control may slip when you're using serverless.
	
73f81192df76b462e74a17174bcfc5cb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	It abstracts so much away from the end-user that if you do want to have more control, different scheduling, more checks and balances, different values on how long a function can run for. So on and so forth. Then you really want to be able to get in there and tinker, and maybe create your own deployments.
	
ea7bb856dc4addbbf5488d70b6167431|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	That would require something new, though. A new kind of serverless that open source communities are already building for themselves. Rania and her team of IBMers are part of that movement.
	
93ac85beb057e4e4a6fc938e292a03f6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	Just combining these two trends and saying, there is this idea of being able to build higher order function for many small pieces that may or may not come from you.
	
06b003168b06d3264573fcb5212bc9c0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|266|1|V|markdown
	We first worked on a language that was ... It’s basically JavaScript extensions to let you create these multi-threaded interactive service compositions as a starting point to give you a lighter-weight way. That was around the same time that cloud and microservices and platform-as-a-service were really picking up.
	
791a0395b0dd3c8912c4bdb39ced43f5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Rania and her team were building Apache OpenWhisk. An open source functions platform.
	
51d7269b7703d6ec777d96910864cb4e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	But, also provide the kind of finer-grain control that people wouldn't have with it if it was only offered as a service.
	
75ff8daed5287788eb39fc9944fb3a34|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	With OpenWhisk, from the beginning, we made it open source. A big part of that was to really enable the community to participate with us. But also to peel away the covers. And give control to the people that are wanting to operate their own serverless computing environments, so that they can customize it to their needs. Maybe put in their own controls, see how it really works, and control it better.
	
9c15e3d51d15b3a4f5c0e9e042663905|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Giving control back to anyone who wants to operate their own serverless environment. It's next-stage serverless. Joining OpenWhisk, you've got other open source platforms like Fission and Gestalt. We start to see the serverless arena evolving into something more adaptable, and more powerful than before.
	
3233b36c7a6a852c63ae0a6e4059394a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	To really get why an open source version of serverless matters, I got chatting with one of the founders of OpenWhisk.
	
fbc73a883e340f9d442c77951973e866|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Hi, Rodric. How is it going?
	
524a4ae7c1e59051f7c3fc0a3940b3bc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Good. How are you? Thanks for having me on.
	
bd313ceeec36d2a8fd7d995a069f83d7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Rodric Rabbah was one of the three developers who conceived of, and founded, OpenWhisk. Here is our conversation.
	
717632a3c1291acfdcbda619f96379f9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	It tends to be confusing for others or tends to get snickers, because people tend to think, “How could you possibly compute without servers?”
	
b56b34b93cc5d1086f7a8d6e5dea33cd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Right. Server is there somewhere, it's just I don't have to worry about it.
	
ac53d2cdd769e9b21de85f0dc84abd3b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Exactly. That's really the beauty of this model. When you start developing in a serverless style, you never really want to go back. You know, I've been in it for close to four years now,and I've developed some production-quality applications.
	
03a04fce1c20c3c88ea6a683fc4cb660|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	This is the only way I develop now. If you tell me I have to provision a machine and install an OS, it's completely foreignto me. I'm not even sure I'd know how to do it anymore.
	
0d268dd4d937afdaeb8eccb70fc3c8aa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	Yeah. When you put it like that, it sounds like a huge load off,you know? Because when you initially hear of serverless, at least I think, "Man, it's yet another thing I have to learn."
	
6cbba45c59acfcf2409f50e6f92f41aa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	But, when you put it that way it sounds nice.
	
40c2b86431cd3e952ba773ede37a10e0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	It does sound nice. Then you have to realize that you have to take a little bit of air out of the bubble. It's not a silver bullet.
	
07fec5b1910543e7ba9a4d333cb2b387|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	What are some of the surprising risks or issues that people may not see or be aware of when they get started?
	
0dd15847b99091953201f569ce8a0382|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	I think the lack of transparency is possibly the biggest one. It's sort of reminiscent to me of sort of the technology that came about when new languages came about and raised a level of abstraction relative to the computer. It's a similar kind of, sort of, startling effect in serverless today.
	
fd5d7ba6f7d43f2ccac337c190f8b398|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	In that you write, typically a function, then you just deploy that function. It's instantaneously available to run, say on the web as an APIN point. It scales massively. I mean, you can run thousands of instances without any work on your part.
	
013488fffe21aebf3a556564d3803ad0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	But, if something goes wrong, it's like, how do I debug this? Or I actually want to inspect the context within which my function failed. Typically, these functions run within processes, are isolated from you—you can't even log into the machine to see where your code is running. They might run in container environments that are closed off. You don't know what's in them.
	
62a5aeefab6b8e55e6184a3a6170bb05|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|346|1|V|markdown
	It becomes hard for you to get that little bit of transparency. This is where tools will eventually help. But, the lack of tools sort of makes that pretty significant pitfall for people to get their heads around.
	
b1361702ac72cfff936eeea1fae243b9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	A small team of us, basically three people-
	
7de74d376e0136934f20783dc0440ef8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	That was really good. Okay. Let's go back to OpenWhisk, alright? Tell me about that.
	
4b0299ec68444f2dbf0b359a0591b4ba|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	Wow.
	
8a2d92d5ed5a4510cc1cbe516597955c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	... got together to essentially do the initial development and prototyped what became, eventually, OpenWhisk, with respect to the command line tools, which is really the programming interface for serverless today. The programming model concepts, and then the actual architecture that it has to support, essentially, this function of the service model and give you all the benefits that serverless espouses.
	
5a4a8e2b1f6b0ea78604fc9f268c0fea|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	How long did it take? Or the first version anyway.
	
65b939ccd98d8a9711d684d146a6d5dc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	The genesis was really Amazon Lambda coming on the scene and saying there's this new model of computing. Pay attention.
	
0a5def421214055d7add09458a5a8e73|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	The project started right around the time Amazon Lambda announced their offering, which was really where serverless started to get into the nomenclature and started to gain mindshare in the space. When we saw Lambda, we started thinking, “There is a lot of technology here that has to be developed. Not just at the base layer in terms of a new cloud computer, but really in terms of your programming model that you put on top of it to make it more easily accessible to programmers.”You know, coming out of IBM research, we had pretty strong ... Instead of skills around programming language design, compiler expertise, and run time expertise.
	
9e2b5b81375ae70a51698e062dcf6bc5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	It happened quite fast. In fact, when IBM announced ... Well, it was at the time IBM OpenWhisk. It was one year to the date from our first commit.
	
b84cb4c11c9da1afd1a85c5001400869|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	Wow. Oh my goodness.
	
7c5155a056edca34a38601cdbf6ced12|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|386|1|V|markdown
	That was quite exciting.
	
22ee91cdc1229535d32dfaa66855fc94|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Whisk was the internal name, that's right. I'm responsible for the name. The idea behind the name was to move quickly and nimbly.
	
218fb5059d5e61f2782f4bb07b5e15c8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	You whip up a function and there it is. You can put it in the oven and bake it.
	
25f43364e651d34b2e97531b2d6ca113|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	That's wonderful, because I was definitely thinking eggs when I saw that. I was thinking, let's whisk some eggs.
	
006b6377d4560227ccdf3fb3cf76271d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Right. We've done some positives and some negatives on the name. When we open source a technology, and sort of put it out on GitHub, we put the open prefix on it to sort of emphasize that this is open as in open source and free to use, free to download, free to contribute to.
	
539cf141f457d2d17d4253891ab2e2e0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	And our goal in putting it on open source was really to sort of raise the bar in terms of what's available to execute these days as a serverless platform. It was important to us to sort of build a platform that is not only production-ready, and share it with the world,but also to make it possible for academic research or research in general. Maybe coming out of IBM research, we cared about that a little too much.
	
40815347f982bc4dccfc21f127b76803|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Yeah.
	
b31aeca1b98bb11e8fe20527c2cf65f6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	That's really impressive. Actually, when it first started, it wasn't OpenWhisk, it was just Whisk. Right?
	
baddd692bc9e47855aacf6df32f98d80|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	But, it sort of paid off in that I know of universities that actually use OpenWhisk for their own research—from Cornell to Princeton. I've gone to several universities like Brown, Williams College, MIT, CMU, and I've given talks with the purpose of encouraging students to really look at the problems around serverless and functions of the service. The tooling, the programming model, and get them excited about the technology.
	
0ac8d3bafdca65d1912c45de4cbb0e04|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Showing them that there's a path to where if they actually contribute to the open source project, it's picked up by IBM cloud functions and run in production, usually within a week.
	
f07083929493097e909a363672523389|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Wow. That's so fast.
	
9bfd870cc09074be5cc898b883e0bc3d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	That's been surprising to some people.
	
881328a119fd10e958cd219509d7a370|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	That's a super-efficient process.
	
87f3af02c2dbb32b1a68ca7e950e5812|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	It's really a testament to how we develop a lot of technology in the open. It's not an open core model where there are some components that have been held back. What's running in the IBM cloud is really what's in the Apache OpenWhisk project.
	
e94fd69fbb74ef0ec2ca3f23dac8de83|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	When you think about the future of serverless and the options we may have moving forward, do you feel like they will inevitably be open?
	
f6067f6d63f4d95eda5b4764a134ccae|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	I think there's a raging debate these days about the value of open source, especially in the cloud.
	
11ab423d66352e5fb4c0b824b89f3691|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	Right, yeah.
	
14f07f1e13555a594551a89c7a296231|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	If you consider why people go to the cloud, or why they might have aversions to go into the cloud, it's this whole concept of vendor lock-in being ... losing transparency. Open source has played an important role in sort of alleviating some of these issues. Then you look at efforts like Kubernetes, which is just gobbling up the cloud in terms of a container and management system. How successful that's been.
	
44cdc7a42054a1583ec3cf2f77dad38a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	If you're doing something that even touches containers, does it even warrant having a discussion about keeping it closed source, giving how dominate it is? I tend to think that openness helps. It's compelling from developers’ perspectives.
	
b6f2ea31659df3db6d932c9420a6baf1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|466|1|V|markdown
	When you think about the future of the serverless ecosystem and tools, and projects, and services that we're going to see, what does that look like? What does the future of serverless look like for you?
	
3210abbe4ec1bb25e846e79a5b52fbbf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	In a similar way there's a layer that's going to come on top, which is the function of the service layering to give you that kind of serverless notion. Then it's really about what's the new middleware that you're putting on top of it. How are you empowering developers to really take advantage of this new cloud computer and the toiling that you're going to put around it to make their experience pleasant.
	
0304cfd4ac78e0844dabc721d6f10fd7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	All of these are sort of fundamentally important, I think. The underlying mechanics of how you run your function, whether they run in a container or some future technology, whether you can run them on one cloud, or multi-cloud, I think fades into the background. Kind of like what Kubernetes did for containers and container management.
	
de7bee5c3fc379350e4db7b449c4e5c0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	I think you start to think less and less about the underlying technology, and it becomes more and more about the programming experience, and the tooling around it. The tooling for debugging, the tooling for deployment management, the tooling for performance analysis, the tooling for security.
	
cbf8ae70e7e4693370e52d990d8472c2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Yeah. What does that empowerment look like?
	
54200e39f33be4183f7cacae26effaef|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Now you can really innovate in terms of rededicating that brain power to just innovating more rapidly, delivering more value to your end-users. I'd lump that all into just better efficiency.
	
a28f906502b358e1993f9c492ca728ad|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Rodric Rabbah is a founder of OpenWhisk. Remember what I said at the top of the show? That old client-server model that the internet is based on really isn't going anywhere. What's changing, and I mean radically changing, is the way we think about those servers.
	
0ab9490f1e70e273f7b4b636d52fb83b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Efficiency, to put it in one word. It's the ability to just focus on the things that are of value to me as a developer, or the value to my company if I'm working at a corporation. It's more rapid in evasion that, then, you beget out of that, because you freed up your brain cells to not think about infrastructure and how things scale, and how things are secured at the hardware level.
	
0bdd18ed65d9ddba035e5b9b4fa00888|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	In a so-called serverless world, the hope is that we concentrate on the code itself and don't have to worry about infrastructure. But the level of abstraction we select, and how we maintain control over work we don't abstract away, are where that serverless world gets interesting.
	
8e03dbe01ec6a058f15f7a0892ac53f2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Serverless should, ultimately, be about developer empowerment. The freedom from patching, scaling, and infrastructure management. But, at the same time, we have to stay curious about how that big picture works even as we abstract some tasks away. We're going to be asking, what controls am I giving up and what controls do I want to take back?
	
8d7bd489a1ca169309c4754e486082cb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|506|1|V|markdown
	Next episode it's our epic season two finale. Command Line Heroes is taking a journey to Mars. We're learning how NASA's martian rover is kicking off an open source revolution of its own. And we're hanging out with the CTO at NASA's Jet Propulsion Laboratory. No biggie. To learn how open source is shaping the future of space exploration.
	
ea7b8f5ce948453f8fa8b8df8bb80a8a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|510|1|V|markdown
	Meantime, if you want to dive deeper into the question of serverless development, or any of the subjects we've explored this season, check out the free resources waiting for you at redhat.com/commandlineheroes. While you're there, you can even contribute to our very own Command Line Heroes game.
	
5a9e820b6fa4936c3b7246d97d4ff85c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-AYS-Final.md|514|1|V|markdown
	I'm Saron Yitbarek. Thanks for listening, and keep on coding.
	
444aa8e1041a3afed8cd2d2c3dcba64e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-BASIC.md|10|1|V|markdown
	Command Line Heroes: Season 3: Learning the BASICs
0fa3edd79a4617cdacc6dee2b65ebd0e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|47|1|v|markdown
	Two of the interviews were bad. One is still today the worst interview question I’ve ever had. The interviewer said, “You run a program twice with the same input and get different results. Tell me why.” I replied, “When that’s happened on modern computers and I didn’t expect it, it’s usually been a race condition.” He just said, “No, it’s not a race condition,” and looked at me waiting for my next answer. 
b89d2ee8eeb436b436c08f8104ae3159|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|47|1|v|markdown
	The question could have been a great question if he’d been interested in a discussion, but apparently he really did just want to play “guess the secret number”. For almost everything I said, he simply replied, “No.”
9cbefbdc536f1a387e6cef6f836e4d6c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|47|1|v|markdown
	Apparently the program was fully deterministic, stored no state, and had no dependence on the environment (such as disk or the real time clock), but gave different results each time it was executed. 
9320fa36f0ec4daafd4211bc991e9005|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|46|1|V|markdown
	
	I suspect we had a different understanding of what “stored state” or “environment” meant or something, but I had no way to tell. At one point (getting desperate) I tried asking if temperature changes in the electronic components were having an effect, and he said, “No, that would be a race condition, and I’ve already told you it’s not a race condition.” Eventually the interview ended, and I still don’t know what that secret number was.
f2581b20d90541edbcdd4c8be4f216ed|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|48|1|V|markdown
	
	I’m telling that story because I’ve heard much tamer horror stories being told as proof that interviewers are terrible people who hate interviewees. But, contrary to popular stereotype, most of the interviews that day were basically okay, and the interviewers were friendly and respectful. Interviewing is genuinely really hard, too, so it’s good to cut interviewers some slack. Hopefully, the “guess the number” interviewer got feedback from Google HR that his question just wasn’t helpful for making hiring decisions.
3b5d60d680449b3fabeb53de2eb83b80|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|51|289|V|markdown
	This time, the interviews resulted in an offer, but with a little catch: the job was in Sydney, working as a site reliability engineer. I’d never heard of SRE before, but I had a phone call with a senior Sydney SRE who explained that he’d noticed my experience doing embedded engineering in the natural gas industry, and thought SRE would be a good fit because of a similar emphasis on reliability and fitting tight constraints.
	
7105360b4b460eec73adfeb01ee2752d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|57|25|V|markdown
	### Google Maps SRE at Sydney
	
ab07947ff0c36584cff5b518d38d4be6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|53|1|V|markdown
	Having spent about a year building up a life in Tokyo, I didn’t want to drop everything and move to Sydney, but no way in hell was I in a position to turn down an offer from Google. I did make one very stupid mistake when talking with the recruiter: I got asked how much money I was making, and I blurted it right out. [Don’t do that.][5] It means it doesn’t matter what happens in the interview, or how much you were being underpaid at your previous job, or whatever; you’ll probably either be rejected or get offered some token amount on top of your old pay and be treated as crazy and unreasonable if you try to negotiate more. In my case, I was making much less than even an entry-level position at Google. I can’t say for sure that’s the whole story, but in 2013 I moved to Sydney to be a new-grad level SRE on Google Maps.
	
0852733bd1d29d25f58d5cbf1915dc9a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|56|1|V|markdown
	
	A product like Maps is really several software projects, each with its own team of developers. Even a feature like route-finding is really multiple software projects — from gathering transport timetable data, to calculating routes, to rendering results, etc. There are two sides to the SRE job: One is being oncall for the various projects, responding in real time to any production incidents. The other side of the job (when there aren’t any fires to fight) is applying experience from production incidents to other projects and pre-emptively finding ways they could go wrong, or opportunities to make them perform better. Google’s SREs also act like an internal consulting group for developers with questions about deployment practices, or automation, or monitoring, or things like that.
498df740fbd482d633a6b010e8e0e9e7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|59|265|V|markdown
	The work was pretty intense. As a team, we were expected to deal with at least one production incident a week, or else take on responsibility for more services. Every week, all the SREs in Sydney would get together to swap stories of failures that had happened, or new tips for how to make things work better. The learning curve felt like being an undergraduate again.
	
8cb7609ca69da0ec9c1deb3f9801f202|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|61|1|v|markdown
	I sometimes get a shocked, “But don’t you miss the benefits?!” from people who hear I chose to quit Google. The material benefits (like meals, etc.) are definitely nice, but they’re things that you can buy, so, no, they’re not things I miss. 
71cf2402c8b17e55af05b5ae5d553dfc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|61|1|v|markdown
	If you ask me what I miss, I’d say it’s the people who worked there. Contrary to what you might have heard, arrogant people don’t enjoy working at places like Google. 
d676cb24526ab02c6336f2d629ac74c9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|61|1|v|markdown
	There’s an infamous story of a narcissist who got a job at Google and kept embarrassing himself by pretending to be a top expert in all kinds of things. 
571eb195f9c7a52cfbd8ff24602761b5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|61|241|V|markdown
	He lasted less than half a year before leaving. Overall, the culture was very low on arrogance and blame slinging and politics compared to other places I’ve worked at. On the other hand, Google doesn’t have a monopoly on nice colleagues.
	
3affb8d111f4c24d6c2af71e1d8f9f99|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|63|1|v|markdown
	There’s one kind of corporate politics that was a big problem, though. Getting promoted required “demonstrating impact”, and it was well known that the easiest way to do that was to launch some new thing (not the only way, but easiest). 
6f7003a93753959aaebede2dbcb71d36|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|63|1|v|markdown
	The result was Googlers who were more interesting in promoting their own alpha-quality, prototype solutions to problems than improving existing solutions. 
1250ed086b4ce023480073f2f5b0dbfd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|63|495|V|markdown
	We had a standing joke in SRE that there were two kinds of software inside Google: old things that worked well but were deprecated and were Ungoogly to even consider using, and hot new things that were the 100% official tools to use today even though they didn’t work yet. As SREs, we often saw first hand what went wrong with the new hotness (which sometimes became the old deprecated thing before it even got out of alpha). ([I’ve talked more in depth about this kind of thing before.][6])
	
0ac93abc91595f1b74066f2b67430316|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|65|149|V|markdown
	This isn’t something that we cynical SREs just imagined; it was openly recognised as a problem in the company, and I remember being reassured that promotion committees had started looking for evidence of impact through things like maintenance work.
	
c519c2c607982066a6bee7f8190400a6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|67|1|V|markdown
	### The promotion application
4adb4527b38335c181bf7cd130699044|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|69|1|v|markdown
	In 2015, after working at Google for a couple of years, my manager told me it really was about time to apply for a promotion above my new-grad level.
f682bb00b0cf0289a5c6bec260bafc00|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|68|1|V|markdown
	
	The promotion process was centrally managed through promotion committees twice a year. You’d make your application and back it up with a short description of projects you’d worked on, supported by references from your colleagues. The committee would do a review and give you the thumbs up or down. Your manager’s recommendation alone wasn’t enough because your manager had an incentive to get you promoted. Having high-ranked staff under you helps your own career advancement.
ae4edec444f8446658d004919da5bd0d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|71|1|v|markdown
	To cut a long story short, I made my application and the committee said no. Actually, it was a pretty damning no. I don’t remember the response in detail, but it felt like the committee had just gone hunting through my application looking for things to be dismissive about. 
d0f65fbd92aa55b07d1d3f237f0544db|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|71|1|v|markdown
	For example, one project I’d worked on was an internal tool that was building up a backlog of feature requests. I’d looked at the project and figured out that the root problem was that it had outgrown the key-value store it had been built on, and needed a proper database. 
d5592679c42f92c57e5d70c04096c716|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|71|1|v|markdown
	I argued for switching to a relational DB, and I went ahead and implemented it: schema, data migration, queries, the live site migration, etc. The new queries were much faster, and (more importantly) the new features could be supported efficiently. 
972e403b24f4aa81b4220e5a75221dd4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|70|1|V|markdown
	
	One problem I had to solve before migrating was that most of the code wasn’t covered by tests, and that was because most of the code wasn’t testable. I refactored the code using dependency injection and [other tricks I’ve talked about before][7], and that let me build a regression test suite. I remember that project was mostly dismissed with the comment that writing unit tests is “new-grad-level work”.
34d4f8926508c687e3f59de7068202cb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|73|200|V|markdown
	My manager was really supportive and wrote an appeal. He didn’t show it to me, but I think it was several pages that could be reduced down to “WTF” (argued more eloquently and with more detail). Here are some of the reasons I also thought this response was a bit WTF:
	
21fa4da6e9a0a4cd1b05e6b4bb105a49|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|75|1|v|markdown
	Google SRE has a concept of “point-personship”. The point person for a project has two roles: One is to know the software project to a greater depth than other SREs, so that you can answer questions they might have. 
6e0c1a044c7a3fd52f969c95f8621f95|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|75|337|V|markdown
	The other role is to be the first point of contact for the devs on the project itself, so that they can get answers to all their SRE questions. The Google job ladder guide said that point-personship wasn’t required at the new-grad level, but looked good for promotion. As my application had said, I was point person for three projects.
	
822be6547c1ad914ba9f28869080187a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|77|165|V|markdown
	My point-personships made it easy to find senior developers who agreed to help support my promotion application. They were all shocked when they found out I was new-grad level. They’d all agreed to support my application assuming I was already at a higher level.
	
498a912bc8e5ceeb277fb3ef87f4a79c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|79|172|V|markdown
	On my application, I mentioned being a mentor for a group of new-grad interns we had. When I made my application, many of them were being hired as permanent employees. I was senior enough to be their mentor, but firmly not enough to be promoted above their level.
	
39bbbc302a92ddb1fe464b8091336891|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|80|1|V|markdown
	
	The response to my manager’s appeal took a completely different tack from the original review. This time I was “strongly exceeding expections for my [new-grad] job level”, but the problem was that they just needed a little bit more time to be sure I could be promoted to new-grad-plus-one. I was told I could keep strongly exceeding expectations for another six months until the next promotion cycle, and maybe I’d get a promotion then. The appeal was over; that was the deal.
a0aac9a8c08e26930ec0f86df6e16f08|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|83|1|V|markdown
	I wrote an email that I was taking another option. Like many tech companies, Google has an employee stock program. You’re given a nominal grant when you start work, and you actually receive real shares at various “vestment” milestones. My next stock vestment was a couple of months away. The day after that, I wouldn’t be working for Google any more.
	
fef496685b7f0c8035846de18bbfb9db|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|85|1|V|markdown
	### My reasons for quitting
a5e404795af050a30cd83ec83046bd05|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|87|150|V|markdown
	The decision to quit any job isn’t easy, and one day you might face the same decision. Here are some of the factors that helped me make my choice. ([Some of this thinking I explained in more depth in an older post.][8])
	
62505400ae193117d808d81a7515dd05|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|88|1|V|markdown
	
	If you think about it, given that I wasn’t literally a new grad, Google’s review should have been something like, “You’re doing some things very wrong. You simply won’t get a promotion until you improve at X and Y and Z.” Being told, “You’re strongly exceeding expectations, but we need another six months or so,” didn’t make any sense. No one raised concerns about whether I was capable of doing my job. I was getting a lot of excuses, but not any useful feedback to help me do better. (NB: sometimes you have to explicitly ask for feedback. Managers can fall into the trap of defending the performance ratings they give, instead of thinking about the report’s need for feedback.)
2ac0c3af2f46ccf8d04d96e546c77e7f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|91|251|V|markdown
	I also wasn’t sure what the promotion committee might see in six months that they hadn’t already seen in two years. Why wouldn’t they ask for another six months again? If I needed to prove myself for years to get new-grad-plus-one, how old would I be before I got new-grad-plus-two?
	
212b00eff621aef573a7692f81287a2d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|93|1|v|markdown
	When I first started at Google, my job level was irrelevant because I was learning so much and getting a famous company on my résumé. Two years in, the equation was different. The value of the future that Google was offering me was waning, while the value of opportunities outside Google had gone up. 
45874a0aa9d04bd96b960b44c8bde3c8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|92|1|V|markdown
	
	Google job levels mean practically nothing outside Google. In the past five years, plenty of people have asked about what I did at Google, but not a single person has asked me what my Google job level was, or called me a new grad. Although I took a financial hit short term, I effectively got a promotion that day I handed in my badge.
8c4d0548a6dcbe3ee4aec190e27f3a66|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|95|1|v|markdown
	Credit where it’s due, Google didn’t do anything like this, but it’s common in other companies: trying to make employees feel guilty about asking for pay rises. 
6cab96f6d157247c50cbfbddb0beaf16|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|95|1|v|markdown
	At a place I worked a few years ago, some engineers asked for a payrise after a highly successful launch following a lot of crunch time. Management played the victim and accused the engineers of “twisting their arms”. (About six months later they lost most of their engineering team.) 
70cd102e371d8f46e46493a7882809d4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|94|1|V|markdown
	
	If you’re genuinely co-operative about the timing of when you might quit (e.g., after a launch date, not the week before) and willing to document your knowledge and clean up after yourself, etc., you’re only twisting your employers’ arms by as much as they’re underpaying you.
58ea3b016159f060ed6ec29c854af88f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|97|361|V|markdown
	Nominally, I left a large amount of unvested stock behind at Google. But stock isn’t yours until it’s yours. I just had a promise of being paid shares in future, and I could convert it to an equivalent pay rate by dividing it by time required. Working two months for that vestment was worth it. Working years for the remaining vestments wasn’t. Don’t fall for endowment bias.
	
77da8d9a45fd2f6fcea677e4d5abda15|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|99|288|V|markdown
	When shouldn’t you quit? Well, are you’re getting a good deal compared to what you could get elsewhere? Corporate career paths aren’t mandated by heaven; they’re a series of business offers representing what the company estimates you’ll work for. If you think you’re getting a good deal (considering all compensation and intangibles like the work environment), great! Otherwise, it’s time to think hard about what to do next.
	
2a45da5afa435afe71ab913efbb98660|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|101|1|V|markdown
	### After Google
907016de353efa11a522bdecdd7494a0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|103|1|v|markdown
	I should warn you that I took a strategy that was high growth, at the expense of short-term stability. If stability is more important to you, you’ll do things differently. My plan A, plan B and plan C all fell apart, and I ended up spending a few months struggling to find a way. 
18621680497a7d654f5538813d0fd04b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|103|1|v|markdown
	Eventually I got a contract at a small web shop, working on [Safety Town][9], a government road safety website for kids. 
316949176f105623bcc7c8e78d8d9d59|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|103|1|v|markdown
	The pay was a big cut from Google, especially considering it was my first work in months. But, you know, I really enjoyed that project. Sure, it wasn’t “cool” like Google, and maybe some kids at school didn’t think it was cool. 
fb95078a43853c4a9d1012d8c7f2509f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|102|1|V|markdown
	
	On the other hand, at Google I was a tiny part of a huge thing. Safety Town had a small team, with everyone playing a crucial role. For part of the Safety Town project, I was _the_ backend engineer, and Safety Town was the only thing I had to worry about at that time. And, heck, maybe some kids have learned a thing or two about road safety from that website. I’ve done plenty of projects since then, most of them bigger, but I still show people Safety Town.
1a2821f8d79231d3f6026e22b02dca77|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|107|280|V|markdown
	I remember a poster in the Sydney Google office that said, “Shoot for the moon! Even if you miss, you’ll land among the stars!” It’s easy to forget that you can have a quality life even if you’re not doing moonshots for famous companies, or doing moonshots for startups.
	
ff4f9620706659a2220a2d7b1b231e96|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|109|1|v|markdown
	Here’s one trick that helped me get contracts. I’d go to Sydney tech events, stand within view of the job board, and wait until I saw someone writing on it. 
8ba557eb605aa2f68c718d5d32199cdb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|109|1|v|markdown
	Suppose they were writing about CSS development for an insurance company project. Even if I weren’t especially interested in CSS or insurance, I’d wander over and say, “Hi, what kind of insurance project is that?” It’s the easiest conversation starter because their head’s full of the project while they’re trying to fit it into a tiny space on the job board. 
f98ad3887bce7034589736664192d55a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|109|1|v|markdown
	Usually the conversation still wouldn’t lead to a job for me, but occasionally I’d discover something I could help with. 
de311d25c9889d533fed1d596d8db6db|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|108|1|V|markdown
	
	Some events don’t have a job board, but the organisers are often glad to offer the microphone to someone for a few minutes. It adds community engagement to their events.
f528cbab836ef17d3e91da06b86ca9ee|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|111|222|V|markdown
	I got a major break after working on a website for government procurement, just because I learned to not be so clueless about government procurement. It’s hard to say exactly how much that knowledge was worth, but less than a year afterwards I signed a government contract for about 40% more than I would have hoped was possible before. (I don’t do so much government and big enterprise work nowadays, though.)
	
f4eb673648c45b30538e3a023c245b6e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|112|1|V|markdown
	
	After about a year and a half, I had my own one-person company. As I built up a reputation, I gradually got more SRE-like work. Basically, doing dev work was my “in”, then several months later I’d get contacted by someone who needed SRE/DevOps help and remembered me. I actually like both SRE and pure dev work, but supply and demand means SRE work is good business. I can still do programming in my spare time.
c7c01b62cbc9fafdfb04e805001debc9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|115|1|v|markdown
	Speaking of which, work/life balance is my favourite thing about my new lifestyle. 
dbe5ed52067583a3256e97937ef4e624|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|115|1|v|markdown
	No one pays me between contracts, but I can make the most of it by learning new things doing side projects. After one long, intense contract, I took a break and did [a month-long backpacking trip exploring rural Japan][11]. 
38b285d46b6c13bb71fd5b94c60e7eb5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|115|1|v|markdown
	It was a trip I’d wanted to do for a long time, but before Google I needed more money, and during Google I needed more time. 
bde7f9c1b73be94c84552650c75ef0ff|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/20200804.md|114|1|V|markdown
	
	Being self-employed is far from stress free and isn’t for everyone, but there’s stress that makes you feel dead, and there’s stress that makes you feel more alive. For me, self-employment is the second kind, and I’d say I’ve been less stressed overall in the past five years than I was while at Google. In my case, at least, I can honestly say I don’t regret joining Google when I did, and I don’t regret leaving when I did, either.
d62f4796d523b07f771d2b7457ca7a0a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|10|1|V|markdown
	Command Line Heroes: Season 2: Bonus_Developer Advocacy Roundtable
6660514ce119b791e745b0024a070c57|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|64|43|v|markdown
	从凤凰城外和我一起来的是
199f479c0c3d53a94dcde33f61bbf0fa|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|64|1|v|markdown
	Red Hat 的社区架构师
b28ef4ed61948c05b1328454b1ba3916|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|159|1|V|markdown
	kkkkkkkkkkk
a5fb1eccfbafc57901d26e637807a4af|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL32.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
	tags: ["python", "Linux", "pyinstall", "pip"]
23eeeb4347bdd26bfc6b7ee9a3b755dd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|5|9|v|markdown
	python
7e8400fd9347f40669d7a8b30bb2ba3c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|9|1|V|markdown
	Docker 是一个开源软件，是一个开放平台，用于开发应用、交付应用、运行应用。 Docker 允许用户将基础设施中的应用单独分割出来，形成更小的颗粒，从而提高交付软件的速度。
4fab08c7eb5acf30f2ed2fdca6a14aa1|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|13|22|V|markdown
	作者：落羽成霜丶
	链接：https://www.jianshu.com/p/ee959322a8f6
	来源：简书
	著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
8b8881bcc1bd9f56534b1674f32d3aed|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|111|1|V|markdown
	之后再次拉取应该就能够享受到镜像的加速效果了。  
26a2454ae089a0c52f7b02e4c04addaa|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|19|1|v|markdown
	### 
4c6c57a8b7fc65726c910bd2d18398c4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|124|6|V|markdown
	    NAME                                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
	    pytorch/pytorch                                   PyTorch is a deep learning framework that pu…   229
	    floydhub/pytorch                                  pytorch                                         43                                      [OK]
	    anibali/pytorch                                   Docker images for the PyTorch deep learning …   20                                      [OK]
	    stepankuzmin/pytorch-notebook                     Jupyter Notebook Pytorch Stack                  7                                       [OK]
	    thechaos16/pytorch_tf                             ubuntu docker with pytorch, tensorflow          4                                       [OK]
	    bitnami/pytorch                                    Bitnami PyTorch Docker Image                   4
	    spellrun/pytorch-jupyter                                                                          3
	    spellrun/pytorch                                                                                  2
	    pytorch/pytorch-binary-docker-image-ubuntu16.04                                                   2
	    shatu/pytorch                                     Collection of Docker Images for PyTorch         1
	    pytorchlightning/pytorch_lightning                PyTorch Lightning image                         1
	    dsksd/pytorch                                     0.4 : python3.6, cuda8, cudnn6, pytorch==0.4    1
	    jetware/pytorch                                   PyTorch Production                              1
	    mapler/pytorch-cpu                                Dockerfile of PyTorch on CPU                    1                                       [OK]
	    nakosung/pytorch                                  pytorch                                         0                                       [OK]
	    uodcvip/pytorch                                   Rebuild of PyTorch base GPU image for Jupyte…   0
	    spellrun/pytorch0.2.0-jupyter                                                                     0
	    clipper/pytorch-container                         Model container for PyTorch models              0
	    spellrun/pytorch0.2.0                                                                             0
	    clipper/pytorch36-container                       Python 3.6 PyTorch container                    0
	    ucsdets/pytorch-notebook                                                                          0
	    spellrun/pytorch0.4.0                                                                             0
	    nakosung/pytorch_dev                              pytorch                                         0                                       [OK]
	    spellrun/pytorch0.4.0-jupyter                                                                     0
	    xiaoxiaoxh/pytorch                                pytorch-based repo                              0
1afa0eddd6a79d800660a83196a20cf8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|121|20|v|markdown
	pytorch
70b0df54f9f162182b7f136724719735|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL33.md|218|10|V|markdown
	查看当前已安装的 Docker 镜像列表：  
	    
	    $ docker images
b2642a3fd00550edb22417a1f3c39fb9|file:///home/godlovesjonny/.config/i3/config|13|1|V|conf
	set $mod Mod4
a1cc3fc51d8d4e55c583aa7156bcbaea|file:///home/godlovesjonny/.config/i3/config|65|11|V|conf
	From: Kevin
	Author: 留洋
c9d2d786d802c57f5cca158d2371866d|file:///home/godlovesjonny/.config/i3/config|65|1|V|conf
	From: Kevin
4fe5363d487f81d200d413714813852a|file:///home/godlovesjonny/.config/i3/config|65|1|V|conf
	Author: 留洋
d22778d9018c1ca94199a2dde99c0db8|file:///home/godlovesjonny/.config/i3/config|65|1|V|conf
	Link: https://godliuyang.wang/2019/08/24/manjaro-i3wm-huan-jing-pei-zhi-pian/
7ef222efa3a6202e2904bebc865b63d7|file:///home/godlovesjonny/.config/i3/config|65|1|V|conf
	本文章著作权归作者所有，任何形式的转载都请注明出处。
50dd20eb60a63d32e0e64ce8bcebc3cb|file:///home/godlovesjonny/.config/i3/config|64|1|V|conf
	bindsym $mod+b exec firefox
d6a5c9544eca9b5ce2266d1c34a93222|file:///home/godlovesjonny/.config/i3/config|64|21|v|conf
	firefox
6147a49967a7a7681c4c1bac5783b0c5|file:///home/godlovesjonny/.config/i3/config|12|14|v|conf
	  # Enter
2cda3fc2bb7e14c3497dd198e147f174|file:///home/godlovesjonny/.config/i3/config|13|15|v|conf
	  # Alt
ae90090fb5ad0d982124055781a3631c|file:///home/godlovesjonny/.config/ranger/rifle.conf|151|1|V|cfg
	ext pdf, has okular,   X, flag f = okular -- "$@"
84030e9781ac8cf60bf5bc4b2eaebd09|file:///home/godlovesjonny/.vimrc|59|13|V|vim
	" " Color name (:help cterm-colors) or ANSI code
	" let g:limelight_conceal_ctermfg = 'gray'
	" let g:limelight_conceal_ctermfg = 240
	" " Color name (:help gui-colors) or RGB color
	" let g:limelight_conceal_guifg = 'DarkGray'
	" let g:limelight_conceal_guifg = '#777777'
	" " Default: 0.5
	" let g:limelight_default_coefficient = 0.7
	" " Number of preceding/following paragraphs to include (default: 0)
	" let g:limelight_paragraph_span = 1
	" " Beginning/end of paragraph
	" "   When there's no empty line between the paragraphs
	" "   and each paragraph starts with indentation
	" let g:limelight_bop = '^\s'
	" let g:limelight_eop = '\ze\n^\s'
	" " Highlighting priority (default: 10)
	" "   Set it to -1 not to overrule hlsearch
	" let g:limelight_priority = -1
8ea23e4ed185f130e0c68f8eb92eba3f|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/token-toggle.vim|1|1|V|vim
	
	" --------------------------------
	" Add our plugin to the path
	" --------------------------------
8aa060e478a4bfebf248b1b372519083|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token-toggle.py|3|9|V|python
	        'True': 'True',
29eaebcfcce2c2df1c15f1b3c48c2529|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token-toggle.py|23|9|V|python
	        catch:
dd83023c345189377b36badd5d9bd219|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token-toggle.py|23|9|V|python
	        except:
fa445a26c2267f30cc2f10ebc1bf3cc0|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token-toggle.py|3|9|V|python
	        'false'
8d1dc3c660433f289282debc4dba780a|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|8|14|v|vim
	expr
e3eb16afdbabab150c5da0ade825a14d|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|10|6|v|vim
	the 
aef56e8b83779b537394355a743c44a4|file:///home/godlovesjonny/.vimrc|190|15|V|vim
	xmap <leader>f  <Plug>(coc-format-selected)
	nmap <leader>f  <Plug>(coc-format-selected)
c38998cd55fc7c48f1273524bc0619df|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/test|1|11|v|
	tRue
2f48664f084822fd0a5a510468911936|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|33|24|v|python
	format_token
559254e976a6138ab60f01b5ee7aa3a0|file:///home/godlovesjonny/Jonny/1|2|9|v|
	ture
95b2f281e2303c31ea74db7cc87c6bb9|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|15|4|v|vim
	token_under_cursor
8472df8bae8d8d9bc1a22250c9fff828|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|18|8|v|vim
	len(token_under_cursor
8e3e0f80532dbe00fd24f6281a2102fe|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|5|17|v|markdown
	support 
3390d8798f640f145e502947e15c59fb|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|7|3|V|markdown
	+ true <-> false
	+ == <-> !=
	+ > <-> <=
	+ 
	
0cf31b2c283ce3431794586df7b0996d|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|39|4|V|markdown
	    
9200324c3b85a587296550b2eafb7b7c|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|7|1|V|markdown
	| No. | Token1 | Token2 |
	|-----|--------|--------|
	| 1   | true   | false  |
	| 2   | ==     | !=     |
	| 3   | >      | <=     |
	| 4   | <      | >=     |
	| 5   | \+     | \-     |
	| 6   | \*     | /      |
	| 7   | yes    | no     |
	| 8   | on     | off    |
	| 9   | 1      | 0      |
78e5268472cb19c573ec551a1badf926|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|23|1|V|markdown
	If you use [vim-plug](https://github.com/junegunn/vim-plug), you can just add the following line to your `vimrc` file:  
	    
	    Plug 'JonnieWayy/token-toggle'
	
	Then run the following command in vim:  
	    
	    :PlugInstall
	
	Or you can also use other plugin managers:  
	
	+ [Vundle](https://github.com/VundleVim/Vundle.vim)
	+ [neobundle](https://github.com/Shougo/neobundle.vim)
	+ [pathogen](https://github.com/tpope/vim-pathogen)
86c516af98925c6d57b0caa90b9aaa2d|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|67|155|v|markdown
	 the following line to your `vimrc` file:  
5c2cbf511370e5ca7f2286a70a76ed6f|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|71|1|V|markdown
	Then run the following command in vim:  
1709df484f56915428eb6fdf3632d564|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|76|1|V|markdown
	Or you can also use other plugin managers:  
c0603157e00c1803bb9ed7891adc16fb|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|37|1|V|markdown
	## Usage
	
	When cursor is on the target token, run the following command
	    
	    :TokenToggle
6df13ff121642772ee4a7a0d0074dfa1|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/README.md|84|1|V|markdown
	When cursor is on the target token, run the following command
27b49d8fa6c02878f0e763c5c795dac3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|129|1|V|markdown
	![121](/images/2020/01/wallpaper/121.png)
5a7053f1c3933ae0c87c527f72f53587|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|130|1|V|markdown
	![122](/images/2020/01/wallpaper/122.png)
715430f4f52e9c9b05c2ce760c05aa0f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|131|1|V|markdown
	![123](/images/2020/01/wallpaper/123.png)
4facf06aaf74bbe5d97464201b7a56db|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|133|34|V|markdown
	![124](/images/2020/01/wallpaper/124.png)
e42931973b6df3d1948b21b550f804b0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|134|34|V|markdown
	![125](/images/2020/01/wallpaper/125.png)
7563175cae8ef5f4ba9f7885c2904fa8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|135|34|V|markdown
	![126](/images/2020/01/wallpaper/126.png)
120d9ecbeab4a08e3d85afd82fb6e3cb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|136|34|V|markdown
	![127](/images/2020/01/wallpaper/127.png)
c597c0ac052f73f265a775d148ba89b8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|250|161|v|markdown
	BBack in 2002, Mechner was working on Prince of Persia: The Sands of Time. The programmers wanted
bfd5fb649f09de474bf491c259e96623|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL8.md|21|1|V|markdown
	    sudo pacman -S gnome-settings-daemon
0d477a61f56e9be71e1e068c66c8a6fe|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL8.md|15|1|V|markdown
	    sudo pacman -S deepin.com.qq.office
	    sudo pacman -S deepin.com.qq.im
8f25a1bcfd00e5ded753b28e52b9c4a0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL8.md|14|5|V|markdown
	    dd
963d66abcb1c31d02021423de4b60ddd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL8.md|30|1|V|markdown
	    系统设置 -> 开机或关机 -> 自动启动 ->添加脚本 -> 输入/usr/lib/gsd-xsettings
426859f80a782d2fc0c23724ea7eb0bb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL12.md|13|1|V|markdown
	Edraw Max 的跨平台性使其成为了 Visio 很好的替代品  
eefc452a138439cbcb8527a6896c206c|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|38|1|V|python
	def 
589d9ea50c6dd0e10f97a10a7e0bdbe7|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|8|38|v|vim
	, add_token
a9965fbe07be10b9eddb4e46d3b656ce|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|3|1|V|python
	token_pairs = {
	        'true': 'false',
	        'false': 'true',
	        'yes': 'no',
	        'no': 'yes',
	        '1': '0',
	        '0': '1',
	        'on': 'off',
	        'off': 'on',
	        '==': '!=',
	        '!=': '==',
	        '>': '<=',
	        '<=': '>',
	        '<': '>=',
	        '>=': '<',
	        '+': '-',
	        '-': '+',
	        '*': '/',
	        '/': '*',
	        }
47ea18fe5ce16cc67418a23b1b828333|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/write.py|3|1|V|python
	token_pairs = 
10115058ff6eb94e269ecc1256efbff8|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|6|1|V|python
	print(token_pairs)
041a7ee6687833d5fa1f8885e7dee88b|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|7|1|V|python
	print(type(token_pairs))
e40fb58217c9629837e815b777ff1f43|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|35|1|V|vim
	
	command! -nargs=+ TokenAdd <token1> <token2> call TokenAdd(<q-args>)
a70192a882ce44f6406d4dcc31cf5655|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.vim|5|1|V|vim
	function! TokenAdd(token1, token2)
	py << EndOfPython
	
	from token_toggle import add_token
	
	add_token(token1, token2)
	
	EndOfPython
	endfunction
8610d2197de8fabbe934524e5cad6219|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|6|1|V|python
	#  token_pairs = {
	        #  'true': 'false',
	        #  'false': 'true',
	        #  'yes': 'no',
	        #  'no': 'yes',
	        #  '1': '0',
	        #  '0': '1',
	        #  'on': 'off',
	        #  'off': 'on',
	        #  '==': '!=',
	        #  '!=': '==',
	        #  '>': '<=',
	        #  '<=': '>',
	        #  '<': '>=',
	        #  '>=': '<',
	        #  '+': '-',
	        #  '-': '+',
	        #  '*': '/',
	        #  '/': '*',
	        #  }
be4ac6ee5d19da7ba864973cfc06f22d|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|6|1|V|python
	def add_token(token1, token2):
	    token_pairs[token1] = token2
	    token_pairs[token2] = token1
	    with open("./tokens.json", "w") as f:
	        json.dump(token_pairs, f)
29ec376ee199d02bd30a0ef2cf159ed8|file:///home/godlovesjonny/Jonny/Open-Source/vim-devs/token-toggle/plugin/token_toggle.py|6|9|V|python
	        print("Token Added Successfully.")
89c6df7918e7b0556f7457f2f2154496|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S02-BDAR.md|518|1035|V|markdown
	A lot of times, it's people who come to you and they've got some roadblock in their way, whether it's, you know, "Somehow my PR fell through the robot cracks," but a lot of times, it's also people who are like, "Hey, I had this cool idea. Maybe it doesn't quite fit in here, but I thought maybe it might improve how the community is running, or might be a good companion tool to other stuff that we're working on. What do I do?" And it's like, "Well, you know, how can I help you get started," you know? " What can I do? Like, do you just need someone to say yes? Because I am here to say yes all day long, to basically anything, and just let people know that yes, of course you have permission to do that," so that's, you know, I think the best thing that you can do, at least in my position, is make sure people don't have things in their way, or if the one thing that's in their way is waiting for someone to just say yes, I keep reiterating all the time that you don't need permission, but if someone needs it, then by god, give it to them.
	
20e880f39dc123e20aab7667a2a3a571|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|14|1|V|markdown
	Hi everybody, I'm Saron Yitbarek and this is a special bonus episode of Command Line Heroes, an original podcast from Red Hat. This podcast went a lot of places in Season 2. We explored programming languages, data overload, security crises, the advent of serverless. I mean, we even went to Mars.
	
5ccee39ea77c4e09be361580696d63d5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|18|1|V|markdown
	But after closing out Season 2, there was still one more place we wanted to go. We wanted to go inside the minds of the advocates and thought leaders who help shape all the work that developers do. Sometimes they're called developer advocates or they're in developer relations or they're developer evangelists.
	
7574bd5fe524da507aed5c9bc28aa487|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|22|1|V|markdown
	Whatever their exact titles, from the developer's perspective, they seem to do a lot of the same things. You've seen them give keynotes at conferences. You've heard them getting interviewed on podcasts, like this one. You've probably read their blog posts. But who are they, and what exactly are they using their voices to get done?
	
e272b5489b4b8ecfe0c10318ec40e204|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Hello. And also in San Francisco we have Ricky Robinett. He's the Director of the Developer Network over at Twilio.
	
9b3008b5901b6469b9b204012d6de3d6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Hi, Saron.
	
b429c10b74313c4afd6ec0914b307b72|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	To ring in 2019, we've pulled together a roundtable of amazing people for you. While their titles are all different, their purpose is the same. They're here to help developers and make sure their needs and voices are heard. These folks are classic command line heroes.
	
a684e1d40a770e9e849fdb12c1fe114c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	From the Bay Area, Sandra Persing is a Mozilla Global Strategist and creator of the DevRel Summit.
	
8c653f5a319513fe7dd626d2d7891d79|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	What's up?
	
8414e567e7036b8d931b6d3d2c8705dd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Hi there. How are you?
	
91195d30e1ec125201bb6024ea7466af|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Joining me from just outside of Phoenix is Robyn Bergeron, a community architect at Red Hat.
	
7266b2e4e29c25a078d17b1753828592|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Excellent.
	
68d180d850f5ae33c782e3d323c1da7c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	I'm doing great.
	
ba52ec1cc815fd8de6fb9c054c644be1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	So there are a lot of titles floating around. There's Developer Advocate, Developer Evangelist, Developer Relations, and with all these new things, basic definitions are super important. So, I think a good place to start is just to define what these things are and specifically, what you all do in this space. So, can you tell me your job title and what that title actually means? Ricky, let's start with you.
	
6aeee140112cf8d26e412ea2135a4a7a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Okay, sounds good. My title is the Director of the Developer Network. What I have the privilege of doing is serving a team of developer relations professionals. We have an evangelism team, we have a education team and we have a community team. So, it's definitely a mishmash of all the different titles of you hear, we kind of collect them on the team.
	
f2317a1939bebf9a185569ae40eac051|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Awesome. And Sandra, what about you?
	
f4d8e22ef03c7661972ce67d805e1d8d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	I am at Mozilla as the Global Strategist for events and sponsorship and I work with our developer outreach team in the emerging tech group at Mozilla.I usually explain my day to day activities as a lot of research and communications and explorations that really leads to evaluating and deciding, you know, how we should all invest our resources: our time, money, swag, speakers, et cetera, in order to give back to the developer community, but also to receive feedback from the developer community. So both the evangelism side and the advocate side.
	
0fa283848f8250f508d1526c41e6e042|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Awesome. And Robyn, you're up next.
	
71e01fb5be6c5d2d7777ad16ab54ddda|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Hi. Well so, my official title is Community Architect. I get a lot of questions about this title. I've gone by Community Manager. I've gone by Developer Advocate. I've even gone by Operations Advocate at one job in the past. But I like to think of what I do is, you know, when you're a community manager, like the idea that you're really managing all these people who are contributing out of the goodness of their heart is sort of a silly notion. So, I like to think of what I do as building frameworks in which people can actually successfully participate and make sure that roadblocks aren't in their way and that they can get done all the things they want to get done.
	
e6be82f083ae7cebb33dd6c84c6f69d7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	And Ricky, since you are essentially the Director of the entire network, you're not just in advocacy or evangelism or community, it kind of feels like you're running the whole show. How do you understand this idea of being an advocate either for developers or advocating to developers?
	
9e2ac5e29ae0deff3c2b8ea32b58eb6f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Yeah, that's a great question. Phil Nash, who's one of the evangelists on our team had a great framing for this that I'm going to steal, which is we have a lot of different ways of describing what we do, but ultimately a lot of them just being help.
	
22d713b0df6ce795053baf96306369ae|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	I like that. Yeah.
	
3dcff79566b809bee1e9c4a5739c3e82|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	We help developers, and so sometimes that help looks like answering a question on Stack Overflow. Sometimes it looks like building a new tool. Sometimes it looks like organizing an event and then sometimes it looks like initiating a product change internally. So, I think that's the best framing I've heard is really our responsibility is to help.
	
4ed2655b6e8cc7ea5fc68eebea1ccb68|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|102|1|V|markdown
	Absolutely. Sandra, what I'm so interested in about your position is that you're not just a Strategist, you're a Global Strategist and you're all over the world trying to bring developers together and help them as part of your job at Mozilla. When we think about advocacy on a global scale, what does that look like? Does it mean something different across different countries, continents?
	
328d8748a50ce56e303e944652b306de|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	But if I work for a company, then will I have to sacrifice that? Am I going to be in a position where I have to put the company before the needs of the community and how do I balance that relationship?
	
fd48f9d34346cb7aed0034fb152903e1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And one thing I'm noticing is that everyone has mentioned community in some way. And I run a community myself. I do Code Newbie and I regularly get recruited by companies to be an evangelist or a community manager for their company and one thing that I've always been a little worried about, maybe a little squeamish about is thinking, okay, I've spent the last three, four years taking care of this community with no strings attached, on my terms,I'm doing what I think is best.
	
a4c60af17ef7e72ba8c6848832b49f07|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Yeah, absolutely. We just wrapped our third annual DevRel Summit this year in Singapore and the past two years, we hosted the event in Seattle and getting out to Singapore, we saw a different perspective. When we get outside of the Bay Area, it can be something as basic as, you know, how do we make sure everything just works offline, because connectivity is such an issue or something like how do we just make sure a developer who's working in Indonesia feels just connected to a developer community, whether that's online or onsite through meetups.
	
9b5aeed4add6a9922f89012d2f6be148|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And always going back to recognizing that some of our quote unquote "basic things," some of our easy things like creating a simple meetup in the Bay Area, which is so a dime a dozen, right? You throw a rock and there's a meetup everywhere is still something really special and something that a developer in let's say Vietnam still sees to be incredibly important and valuable and enriching their developer community life.
	
24b215ce22ad3ba5f7f53326bd31e046|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	So I'm wondering, Robyn, maybe we could start with you as a Community Architect, how do you separate that? How do you maintain that church and state relationship, so to speak?
	
a947784b368d9f58ed36f54db00137e7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Well, it's certainly an interesting balance. I mean, one of my former jobs was actually being the Fedora project leader. And you know, Fedora is the upstream for Red Hat Enterprise Linux, you know, part of your role there is really to be sort of the balancing act, right? The balance between are people happy in the community, is the company happy with what the community is doing and making sure that basically everybody's one big happy family.
	
e1019e8e0ffb2da3c9625003cd29801a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And you know, I think when you're doing your job best in that position yeah, you're pretty much bound to probably anger someone at the corporate headquarters once in a while. But you know, the proof is in the pudding at the end of the day. Right?
	
a9357aa3e5bc9040b47ddb0751c1a797|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And it was like, that would be defeating the whole purpose of having this entire project. Like, we haven't gotten to 4,000 contributors by being terrible.
	
b76ab0eeb2dbd432e6efbabc13ff3502|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Making sure that your management trusts in you and that you have clear communication with folks all the time about what's actually going on and that there aren't surprises on either side of the aisle is part of what makes the difference between success and maybe not always success, but certainly people being surprised.
	
9f70039d49d0c4c9e8e12b8c0508f8f4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Mm-hmm (affirmative). Absolutely. And Ricky, what about you? How do you think about church and state in that relationship when you're doing so many different things?
	
de30f2203731245b0c3b349bfb22e5e2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	I think you have to believe in the company and the technology. You have to believe that what you are bringing to developers is going to have an impact on their lives and their careers and their companies.
	
92c9cbc7e4e6ce5716575db2fcb921fe|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	People ask me all the time like, how do you balance, what's going on with Ansible and Red Hat and you know, like when Ansible got bought by Red Hat, like, oh my God, is Red Hat going to take it over and do something terrible to it and get rid of, Ubuntu support?
	
44debfa043980c65ab752dc589c1e63a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And then on the flip side, you have to have executives who believe in this approach to your work. So, we're very lucky that our CEO is a developer and in many ways was the driving force behind the way that we approach our developer community. Our evangelists have a mission to inspire and equip developers. And so, there are times when we say, is this going to inspire and equip them?Because if it's not, we shouldn't really be doing it because it's something that's outside of our purview.
	
8a1e1563d9030870c9ed2b9ca4ae8b08|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Mm-hmm (affirmative). Sandra, I feel like you're a little bit at an advantage because Mozilla's a nonprofit, right? So I feel like maybe—
	
57b76302b810c60804cc41280f295a29|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	I was going to say.
	
15db45ae9163cd26375b8319ef04fe86|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	and the Internet is an open and free resource for all. I mean, we still, every one of us, every Mozillian believes this mantra and we hold it dear to our heart. So it's absolutely an amazing company that has embraced the community side 100%.
	
2b2172f26889c8f130cc5eee609c2423|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Tell me about that.
	
0536eb9b3729f69d45ddac674ea9013c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	The history of Mozilla is that we're a rebellious company. We've always rebelled against the corporate man, right? The whole history of coming out of Netscape and with one of our founders, Mitchell Baker, in making sure that the web is
	
7e3033d49809677ade3ce1c03a04b656|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Well, that's very kind of you to say. We do really believe we stand on the shoulders of giants here. You think of Guy Kawasaki with Apple, of people doing this style of marketing way before us. I think that we got to be fortunate enough to be at the right time to take this to developers.
	
cc381f6afecb75939a5680738cf68266|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Absolutely. So Ricky, I vividly remember the red-like sports jacket and I remember seeing you personally onstage doing these awesome demos and it feels like that whole approach to connecting with developers and helping developers was very new. Where did that idea even come from at Twilio?
	
1241438af08afe8984df76f07bf9063e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And there's just so many people who came in with the idea of how we can do this and how to keep leveling up how we approached it. I don't actually know who invented the red track jacket though, so now I need to go find the history—
	
8917c0a44fb103ba528445b5e5ad3749|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	You gotta find that out.
	
44f1b62c065a69ac44234c05e7b196f3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And I'm wondering how has that idea of evangelism, and advocacy, how has that changed over time at Twilio, given the fact that, you know, at one point you were a small little startup or a little rebellious startup, and then now you're kind of a big company. How is the shape of evangelism changed as the company itself has changed?
	
007a27e90cd4fb407769f63358c685c7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	—of where that started.
	
aca1d84cbce3337914aa2693c3c80888|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	That's a great jacket.
	
01bceef6fbfbc95e0a1c49b73e8349af|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	I know. That's my mission for this afternoon now.
	
b6a20af91b469140b2d6836e62086473|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	So I talk about evangelists inspiring and equipping. And so the nice thing is that hasn't changed in all the years, so the ways that they inspire and equip keep going differently, but the mission itself doesn't change.
	
373a11ef46f0125126ca4964400c52eb|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Yeah, when I started here, I feel like I could have spent 365 days a year at hackathons and in New York every weekend you had to pick from five or six hackathons. So much of what we did with evangelism was the hackathon scene and now, that's not the same scene. Really, the biggest changes have been driven outside the company rather than inside.
	
4cc59837d0e63b48657c10b7c687f3df|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	Well, actually that was ... I mean, my first job after dropping out of school, don't recommend it, kids. Don't do that at home.
	
a17d9a55707d1d06d0a6696fca50baff|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|222|1|V|markdown
	And Robyn, with the rise of DevOps and DevSecOps, what does advocacy look like for you and for being that community architect? Is there gonna be a Ops advocate?
	
a429152de771e51fa179182c0edae35c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Stay in school.
	
2168440cdd1fc196d931476e9fdc6899|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Listening. Look at looking at you, daughter. My first job was actually as a SysAdmin at Motorola for a number of years and when I moved on from being in charge of Fedora, I worked at Elastic Search for a while and you know, had this title of Developer Advocate and was like, yeah, so I hacked my way through several semesters of C in college. But my heart was always in operations. I started feeling like am I really a developer advocate? I feel like I'm just advocating to ops folks mostly. And I just started calling myself an operations advocate which nobody blinked an eye at.
	
1e75da5ff49d3f81f471a9e1990aaa4b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	You know, what is developer relations? Are we pitching our product being more salesy? You know, and I notice that even large corporations are moving away from that tactic. Understanding that being authentic, being truly mindful of listening and responding to the needs of developers is key above all else, not pitching product.
	
b296599e52c513e07b3d1f3a7f70e6d4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Everyone said, well, that's a really cool title. I'm like, you know, I'm just advocating in general mostly to the inside of my company about what everybody else is doing.
	
2cdb65c7e4b1f8a0fe387e37abc00f25|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Oh, I really like that. I like this idea of many different skill sets, I guess, backgrounds need to come together to really serve developers well and to help developers help themselves, too.
	
70206fa4a6f538866f1a2c30422356b7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	I always go back and share with my team at Mozilla that developers are actually one of the smartest and creative customer base that we'll ever work with. They can smell that BS from miles away. So, we have to be smart about how we are sharing information, like it has to be a diverse group of talented and intelligent minds all coming together to become creative in our approach of communicating to our developer community.
	
76719799e64627ff79d36dff9ea04440|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	So Sandra, we talked about how advocacy and evangelism looks different in different parts of the world, but I'm wondering over the years as we become increasingly more global and more connected, has the larger picture, the larger shape of evangelism shifted over time for you?
	
3bdd4cc9724211d502d12892fdacb415|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	When I think about the rise of developer advocates, to me it feels very connected to the rise of open source. It almost feels like the more open source contributors there were and the bigger deal open source became and the more big companies took it seriously, they almost had to establish better relationships with these open source contributors, these developers, and it feels like those two are really connected to me.
	
9509e13437186a9d9457400f7e4546ef|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	If I were to say the phrase I've heard the most when I talk to developers, it's, "I'm not a developer, but," and that's probably one of the biggest things that's always on my mind is broadening the definition of developer.
	
107fa1acd29a5165ecd160773db777fd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Yeah, that's generally a bad idea. Cool. So, I want to know from each of you what you all have been focusing on, really thinking about. So Ricky, let's start with you. What kind of improvements do you try to bring about in the developer culture in your role at Twilio?
	
b6721750ed7dededaf8594b55bcc5b3e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	If you are a company who is selling software that or selling whatever licenses, long termsupport, you know, whatever your open source company's business model actually is, if you don't have that feedback loop or you're not actually paying attention to what people are saying, you're going to wind up delivering the proverbial wrong thing. And really being able to encompass that, you know, around the world and just day to day in what you do is the difference between success and I guess making the wrong thing, which nobody wants to spend time doing. That's a bad idea.
	
b6a8e07e2a9f9fec3f9b96a0e836e9be|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	So I'm curious about your ideas about that. So Robyn, let's start with you. Is that true at all? Is that idea of advocacy connected at all to the rise of open source?
	
3c20a6376382ad7a91a6945b737245e0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Imposter syndrome for so many of us is a very real thing. It's just amazing how even some of the best developers you know are struggling with it. And for me, that's one of the biggest things we can all do in our culture is give people permission to say, "You know what? I am a developer. I am solving problems with code."
	
d10c548caac20ed0d139b0cb769cf223|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	And so, one of my favorite stories is we have a member of our community named Doug McKenziethat's a magician. And he taught himself PHP so he could use tech in his magic tricks.
	
9a8ca015b49fae41a2e905631e0683c1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Doug is so cool because he was super humble about like, "Oh, I'm not a developer." And suddenly you see, like, he's writing more complicated code than many people have ever seen, to do things that blow minds. And so, I just feel like there's so many Doug McKenzies in the world who are doing great things with code and we have the opportunity to give them permission to be part of the community and to have an identity in that work.
	
56585a9f77919930416f0f03ca0f54ef|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Oh, neat.
	
b16778f67e5edf9e9f46b49e45a03564|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	I love that story because it reminds me of someone I interviewed for the Code Newbie podcast actually, and she was a writer and she had a bunch of assignments where she had to learn Git in order to write about Git and she'd written so many of these articles and it grew to be on other coding topics and eventually, you know, a couple of years had passed and she'd essentially become a developer and didn't know it.
	
005c89f74c1283f71252c5b8a5fd40a6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	And by the time I interviewed her and I said, "Hey, do you know that you're a developer?" She's like, "No, I'm a writer." And I said, "You can be both. They're not mutually exclusive." But yeah, that shift in perspective of saying, "Hey, I'm actually coding and creating, therefore I can now call myself a coder," it's tough for people. It takes a while to get there.
	
f3321c5a0773bca2e8e6d2ee89a372f6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Yeah, absolutely.
	
0eb13c431cdf22df34d5360dd30a8e4b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|302|1|V|markdown
	Yeah. So Robyn, for you, what's been the most positive change that you've managed to push forward in recent years?
	
f53e031b927b01d0f748959e65ad9f6e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	When we did a panel at Sundance with some famous names like Reggie Watts and Chris Milk, we gave an opportunity for filmmakers, producers, decision makers to say, "Oh, we can do that, too. We don't have to be bound by restrictions of what can we do as creative filmmakers."
	
00f52f686644c6eeb2dd52b162f14304|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Just making sure that as we grow, that we're not losing track of the big picture, that our main goals around keeping it simple for people to use, simple for people to contribute to, simple to actually get stuff done with in your life, making sure we're not losing track of that or getting more engineering help to just work on some of the structure of the actual project and make sure that we're doing a good job of keeping all that stuff in order was, I don't know, I thought that was important. I don't know that I'm going to win a Nobel Peace Prize for that, but I know it's something that mattered a lot to lots of the contributors.
	
c17b2c6d961d35ca8e8d7f0ff3a92465|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	That works for me. Sandra, what about you? What's been the most positive change that you've managed to push forward in recent years as a Global Strategist?
	
4d4bb0a4c9ac9ca4770159cbad519b82|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	So we created two simple templates, to say, "Try it out," but it's not programming that we wanted to push towards. It's not coding. It was, "Yes, there's some lines of code. It's language, but what you want to do is create a few lines that now can translate into art," and that brought so many new people into our fold, literally brought them to our table, and then they would write their lines of code, go and walk over under the Arch, to see their light expressions now being looped in the structure. That was amazing.
	
f1433219ff644e44494539e923cbf053|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Two things that really stand out from my mind is expanding this definition, the persona of developer, has been something that's been very important. We'd love to grow our community, right? So why restrict the definition and description of a developer?
	
4ed5eef23ed75bd4547a9c221e124f4c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Oh, that's beautiful. I approve.
	
ac32c7e4f985fa4681c4d166589cd43d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Wow. That sounds beautiful, absolutely beautiful. So, I'm wondering, when we talk about advocating for developers, and we talked a ton about community, and this idea of at the end of the day, whatever our job titles are, we're really just trying to help people, what do developers need help with? Ricky, let's start with you. What do developers say that they need from you?
	
6ef1a72a74f881f6f317f75d73155ef5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Yeah. So Robyn, for you at Red Hat, what are Red Hat developers looking for?
	
83e1ec040b575ef176cc62d0e289d3d0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Well, thank you. Yes. That's exciting. So we built a tool called TwilioQuest, to help people discover that power, to help them know where to get started, but I just sense, you know, there's been this theme of people finding their identity, or getting permission to have that identity, and for every person that's writing code already, or solving problems with code or software, there's so many more who want to, and just don't know where to start yet. So that's a thing that's on our mind a lot.
	
24808f95d40ae35096345bedeeb64936|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	We can adopt technology, and we too can become developers, and that was very refreshing to see. Another moment that we had at Mozilla was bringing an artist, Ian Brill, a light artist in Chicago, to work with us on a project that we label Arch, and we brought this huge plastic light, LED light, with seven Raspberry Pis being programmed structure, to two significant JavaScript developer events this year. And in order to invite more programmers, whether they call themselves developers or not, to try out two languages that Mozilla was advocating this year pretty strongly, WebAssembly and Rust.
	
9cf75e368a4150e55102afdf9acbdc28|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Wow. Yeah, that is a good question. I think that one of the things that we've found is that, like technology's changing so quickly, and a lot of what we get asked about is just, "Where do I start? What do I do first? How do I know I'm on the right path?" For us, that's probably one of the areas we have been investing the most, is we call it like helping people discover their power to change the world with code.
	
cc940a23c5530073ecdf46664ee3f211|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Oh, love that. Ricky, what about you?
	
1b65c83d1380b6a2aa539cd7c092cdef|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	So, the last question, we need to wrap things up, so I'm going to ask you each something. What is the single-most important thing that you're going to be advocating for in 2019? If you had a magic wand, what's the next big thing you'd want to change? Sandra, let's start with you.
	
d9c1b56b1e0b1c863b7e0436a692fa88|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Oh, I knew you were going to do that. Well, the biggest challenges, and yet the most exciting projects that we're going to be working on for 2019, is to truly deliver on our promise of the web being one of the greatest, biggest, most accessible platform. We always tell developers it's where you should build, and deploy everywhere, but knowing that the web itself is incredibly complex, and that we have multiple browser vendors out there, sometimes that's not a true statement, and it's been a perennial challenge for us, especially at Mozilla, where we want to keep the web open, and free, and accessible for all. We want to continue to make sure that we are fulfilling that promise to our developers, that the web is indeed open, accessible, and available to all.
	
6d4dc6adda4596d7f992fc69f2894525|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Just making sure we're serving developers where they gather, online and offline, throughout the entire world. It canbe super easy to get focused on what you see and forget that there's developers everywhere, even when you don't see them. So, I would wave my magic wand and just be more places all over the world, finding out how we can help developers there.
	
fe28d67f7f71058301c90291bcb7cd85|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	I just want to say, I loved Jarod's talk about dark matter developers. It was incredible.
	
fe5a5c6643041a11e2ec20ce8c63e20e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	It's like such an amazing concept when you hear it for the first time. It's like, "Wow, that really is a thing."
	
d489d53260708a966010022632f6f5a3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	So tell us about that. What's a dark matter developer?
	
f1b5deb8608f99ac8c012299095609be|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|382|1|V|markdown
	Essentially, there are developers out there, there are those who do not show up to your meetups, who do not participate in GitHub, online communities, do not contribute to Stack Overflow. Those are the developers who are still actively working and contributing, but we do not know. We know that they're there, but we cannot see them. We cannot identify them, and those are actually a very important segment of the developer community that we tend to ignore, and we cannot. It will be to our detriment working in developer relations, to ignore the community that does not speak up, and we need to be more proactive in searching those dark matter developers out in our universe.
	
e2b5bcd324f6f7f21e477f87d5d98f39|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|386|1|V|markdown
	Oh, I love ... Oh, that's very cool. Yeah, and Jarod actually works at Twilio, right?
	
e005f2fb98ae65ce207b763f8021ab58|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|398|1|V|markdown
	One of my former Red Hat colleagues, who's now at a company called Tidelift, Chris Grams, actually used to have a blog that was titled Dark Matter Matters, because it's sort of the—
	
47e0d70e2f26b0b151d92a2fa8557e6c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|398|1|V|markdown
	Yes. Yes, he runs the APAC DevRel.
	
20beb36223c19908222a83af7b426633|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|398|1|V|markdown
	Mm-hmm (affirmative).
	
52c80b12eba14ed0164e8bea96ca86e5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|418|1|V|markdown
	Traction is always just so good. It's so exciting. Well, I want to thank all of you so, so much for joining us today and sharing your minds, and your thoughts, and your stories. Thank you all so much. You want to say goodbye?
	
0ac5fe94ffff818cb1f91c116ca8263d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|418|1|V|markdown
	Oh, with my magic wand, so many things, but I guess pursuant to this conversation, getting better at managing our dependencies upon each other, and maybe not surprising each other, especially when so many of us work in OpenStack, and OPNFV, and Ansible, and all of these things that build on top of each other. Just making sure that the relationships between our projects is more obvious than things can be when you're head-down in stuff. So that's a thing I'm really looking forward to over the coming year, because we're getting traction on stuff. It's very exciting right now.
	
0a11210e0dc2b01c9b984f886518aa0e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|418|1|V|markdown
	You know, the things you don't see still actually matter, so—
	
32acb0d59e016fe44dcabb979325db26|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|418|1|V|markdown
	Absolutely. And Robyn, what about you. What would you do with your magic wand?
	
f4362fd95442fac943976810f3c8036f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|418|1|V|markdown
	Bye, y'all.
	
50aaffe6ba29eeb1b2b55303ddf78f85|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|422|1|V|markdown
	Nice. Thank you so much, Saron. It's been a pleasure being on this panel.
	
4271ea9d4008bcc0b7dde7e038acf98e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|426|1|V|markdown
	It's already starting to happen, a shift towards open source attitudes in the gaming studios.
	
4cbdb8dbf9ffe17c774c1e7a1417db17|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|430|1|V|markdown
	Absolutely. Today's roundtable included Robyn Bergeron, Community Architect at Red Hat, Sandra Persing, Global Strategist at Mozilla, and Ricky Robinet, Director of the Developer Network at Twilio. I consider myself hugely lucky to have platforms where I get to share my vision for what our community could become, whether here on this podcast or elsewhere, but I want to point out, you do not have to have your own podcast to be an advocate. Being an advocate simply means you keep your eyes open and you speak up on behalf of others. It really can be everybody's job. So I'm hoping Robyn, Sandra, and Ricky give you a little inspiration to advocate for matters to you.
	
908662e4980276e93d1825ab36b17554|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S02-BDAR-Final.md|434|1|V|markdown
	Meanwhile, Season 3of Command Line Heroes is already in the works. You can be one of the first to learn about new episodes when they drop this spring. If you haven't already, subscribe over at Apple Podcasts, Google Podcasts, or wherever you get your podcasts. It's one click, and it's 100% free. I'm Saron Yitbarek. Thank you so much for listening, and until season 3, keep on coding.
	
444733081a578880ba8a563d3c59d22d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|410|11|v|markdown
	Flying
5092aeb01b9c7c352624bd7ae994f576|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|410|11|v|markdown
	FeiFia
93aa984841c569aa9c16d67d7cbb8835|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|410|42|v|markdown
	Flying-
980bdbf883dff6f5696f1f525438a774|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|10|1|V|markdown
	Command Line Heroes: Season 3: Heroes in a Bash Shell
c73bc57fdd756fc98bcdb0cd03854bfa|file:///home/godlovesjonny/.vimrc|53|35|V|vim
	" set the runtime path to include Vundle and initialize
	" set rtp+=~/.vim/bundle/Vundle.vim
	
fa91d36acc04de9dd1940ac786422ea7|file:///home/godlovesjonny/.vimrc|100|1|V|vim
	" Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
	" let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
	" let g:ycm_python_binary_path = '/usr/bin/python'
	" let g:ycm_confirm_extra_conf = 0
	" let g:ycm_complete_in_comments = 1
	" let g:ycm_complete_in_strings = 1
	" let g:ycm_enable_diagnostic_signs = 0
	" let g:ycm_enable_diagnostic_highlighting = 0
	" nnoremap gd :YcmCompleter GoToDefinitionElseDeclaration<CR>
	" nnoremap g/ :YcmCompleter GetDoc<CR>
	" nnoremap gt :YcmCompleter GetType<CR>
	" nnoremap gr :YcmCompleter GoToReferences<CR>
c4c0c152e1b3d8aa6feef42eeb10bd88|file:///home/godlovesjonny/.vimrc|312|1|V|vim
	" Plug 'dracula/vim', { 'as': 'dracula' }
99708d531c50ad1df237dc5064e6e6c6|file:///home/godlovesjonny/.vimrc|374|1|V|vim
	let mapleader=" "
9e6a65a1c2200d1a564b8a0abd6194b2|file:///home/godlovesjonny/.vimrc|374|1|V|vim
	let mapleader=" "
	
cab8f8b289b545ccc0708aa6ff584376|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|22|228|v|markdown
	一次一件地
748c2adfa13ce01450b8311d50188c17|file:///home/godlovesjonny/Jonny/Ideas/20200925.md|7|1|V|markdown
	目的：用文本去检索图像，而文本所提及的细节并不包含图像里
5b591526041fdb5eea501a30e6a1513e|file:///home/godlovesjonny/Jonny/Ideas/notes.md|16|1|V|markdown
	1801.01760 Sec4.3 Lalign
8777de8db0bf830e5d4a7e14347c6556|file:///home/godlovesjonny/Jonny/Ideas/notes.md|22|1|V|markdown
	Bert 生成 3 维 feature map  
3a06d2fc5a90100d680957c630e3224a|file:///home/godlovesjonny/.vimrc|190|1|V|vim
	let g:mkdp_path_to_chrome = "qutebrowser"
1f2e3d15855696edad3a431a7329cf5c|file:///home/godlovesjonny/.vimrc|190|30|v|vim
	qutebrowser
756b990d8010271945505952d9ae2c04|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|42|1|V|markdown
	
	## 1607.01719 Deep CORAL: Correlation Alignment for Deep Domain Adaptation
c7f029aec0eea3dc5df6bdee07d07070|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|135|1|V|markdown
	![127](/images/2020/01/wallpaper/127.jpg)
f8b01837077df9a3c9c15c067fd87bfc|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|136|1|V|markdown
	![128](/images/2020/01/wallpaper/128.jpg)
b6cede2563fb6be8e2a3955012cb27d1|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|137|1|V|markdown
	![129](/images/2020/01/wallpaper/129.jpg)
7a25017e8d3dcc9338185e66ff537160|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|139|34|V|markdown
	![130](/images/2020/01/wallpaper/130.jpg)
ae428cfcb2604a10b2f34ed463a0de8b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|140|34|V|markdown
	![131](/images/2020/01/wallpaper/131.jpg)
b1a5ace102817fc9bb039f891e57a786|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![133](/images/2020/01/wallpaper/133.jpg)
9923079cdd52272374d5333d37fa7907|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![132](/images/2020/01/wallpaper/132.jpg)
da042d8e969bf5f8529efe8de7ebd53c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![134](/images/2020/01/wallpaper/134.jpg)
eb4d383db3ccec506b5ee3ad4344e0d7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![135](/images/2020/01/wallpaper/135.jpg)
c8019560cb24c623154ad3d0dc6ab4ac|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![136](/images/2020/01/wallpaper/136.jpg)
f3a43f9d9831b62831be6eaffb02a2f1|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![137](/images/2020/01/wallpaper/137.jpg)
9402a44c4a6ea8fce1cb16da95ca87c2|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|34|V|markdown
	![138](/images/2020/01/wallpaper/138.jpg)
40027bf113f7bf50480f90d0c402aff2|file:///home/godlovesjonny/Jonny/Ideas/flower-book-notes.md|18|1|V|markdown
	\\(\\)
cc022f4823a8d572569e727c63139cdd|file:///home/godlovesjonny/Jonny/Ideas/flower-book-notes.md|18|1|V|markdown
	范数是将向量映射到非负值的函数
e4ff1dff40b512225115b9dc8d807e2a|file:///home/godlovesjonny/Jonny/Ideas/flower-book-notes.md|1|1|V|markdown
	# Chapter 1
	硬编码知识体系 —— **知识库方法**（Cyc）  
	
	从原始数据中提取模式 —— **机器学习**  
	简单的机器学习算法的性能很大程度上以来于给定数据的**表示**  
	很难知道该提取哪些特征  
	
	解决途径之一：使用机器学习来发掘表示本身，而不仅仅把表示映射到输出 —— **表示学习**  （自编码器）  
	**变差因素**的组合过于复杂  
	
	**深度学习**将复杂映射分解为一系列嵌套的简单映射  
	
	**联结主义**的中心思想：当网络将大量简单的计算单元连接在一起时可以实现智能行为。  
	**分布式表示**：系统的每一个输入都应该由多个特征表示，并且每一个特征都应该参与到多个可能输入的表示。  
	
	# Chapter 2
	## 范数
	
	范数是将向量映射到非负值的函数。  
	
	范数满足下列性质：  
	+ f(x) = 0 -> x = 0
	+ f(x+y) <= f(x) + f(y) （三角不等式）
	+ f(ax) = |a|f(x)
	
	当机器学习问题中**零和非零元素**之间的差异非常重要时，通常会使用 L1 范数。  
	
	## 特征分解
	
	可以将 A 看作沿方向 v_i 延展 lambda_i 倍的空间。  
	
	## 行列式
	
	行列式的绝对值可以用来衡量矩阵参与矩阵乘法后空间扩大或缩小了多少。  
	
	# Chapter 3
	不确定性的三种可能来源：    
	+ 被建模系统内在的随机性
	+ 不完全观测
	+ 不完全建模
	
	
d1db192749bb1b3982c14332fd0203b9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/flower-book-notes.md|38|48|v|markdown
	lambda_i 
edc9f0a5a5d57797bf68e37364743831|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/flower-book-notes.md|5|17|v|markdown
	Linux
f3e7da8e9c0cb8121d9e075df3f7436c|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|42|1|V|markdown
	# 20201005
1cd084006cd5af15a6a0b0c1af3c7d7d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|42|1|V|markdown
	## 1607.01719 Deep CORAL: Correlation Alignment for Deep Domain Adaptation
a39573c2f72b4bcfa118c4433b435d6c|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|49|4|v|markdown
	知识蒸馏
3a37d41b9f66916d65c51db84142899f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|328|1|V|markdown
	然而，空谈不如实践。
4e5f4d2332c433ae695e0cfd1cf2cfdd|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|100|10|V|markdown
	# 20201015
	## 讨论后的一些点子
	+ ASPD + GAN
	+ 跨模态检索 + GAN
	
35c578cfc26e63e20d04ff2ae418b764|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|111|1|V|markdown
	RGB <==> IR  
5880e41b5dc1202a8f6a242f82651a17|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|117|1|V|markdown
	## 1912.01230 Hi-CMD: Hierarchical Cross-Modality Disentanglement for Visible-Infrared Person Re-Identification (CVPR 2019)
	RGB <==> IR  
3fda52da65cec2fd59842407366efa81|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|122|3|V|markdown
	## 1710.05106 CM-GANs: Cross-modal Generative Adversarial Networks for Common Representation Learning
	同模态重构特征向量  
	### 两种 discriminator
	inter-modality discriminator: 判断所生成的特征来自哪种模态（ASPD 用过）  
	intra-modality discriminator: 区分原向量和重构生成的向量  
9b6ed04fa1ca3b82192fe897338485a6|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|132|1|V|markdown
	### 一个可行性有待商榷的想法
	维护一个文本池，通过文本相似去检索到相似的文本，用检索到的文本和源文本一同用于图像检索。  
6cef3aca22f0318ad2cecc724307bcd7|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|138|1|V|markdown
	图文检索
e22d0aa44da06b3398822b4f3814f25e|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|144|1|V|markdown
	菜谱 <==> 食物图像 (图文检索)  
121ada0c4da5e29012d3649c2e822161|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|184|5|V|markdown
	## Multimodal adversarial network for cross-modal retrieval
	
f082b88a3c86245c2d7d3b3999db5168|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|43|7|V|markdown
	## 1607.01719 Deep CORAL: Correlation Alignment for Deep Domain Adaptation
	toread  
	
120e22ac12f61e8126d45f3276320f84|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|478|27|v|markdown
	Senior Ansible Automations Consultant
96cd91d0fdb0112b943bc202d18adcfc|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|230|1|V|markdown
	difference loss
3e4ae5b44de5e72493791afa97e6e0f3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S03-HBS.md|590|200|v|markdown
	[redhat.com/commandlineheroes](//www.redhat.com/en/command-line-heroes).
d7dbb9973bf5de6511a1dd01b549920b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|14|1|V|markdown
	It's 1987. Ronald Reagan's America is in full swing, and a 27-year-old high school dropout with big dreams is driving to his new home in Santa Barbara. That man's name is Brian Fox, and in the trunk of his car, he's got two massive tapes filled with the code he's been writing.
	
95401564bf59dc68335f3916f171a84a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|18|1|V|markdown
	Fox has spent years working as a programmer in something called the free software movement. He believes the code he's got locked in that trunk is part of a new reality, a new software paradigm, that his community is bringing to life, one piece at a time.
	
93ee3a3089b9e94014601042eb8ffbfe|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	That year, a team of coders at Richard Stallman's Free Software Foundation were trying to set the programming world free. They wanted to build an alternative to the UNIX operating system that had dominated programming since the '70s. Their GNU, which stood for GNU's not UNIX, was going to be an operating system for the people, one that anybody could use without worrying about license fees or copyright.
	
d9ff091b851a7f98a6c84bd58346cc53|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	I'm Saron Yitbarek and this is Command Line Heroes, an original podcast from Red Hat. This episode, we're looking at our heroes in a Bash shell. We're uncovering the history of shells and why they're so crucial to our work today. Think of shell scripts like a script you would give an actor. They deliver a whole sequence of commands that the shell can then rattle off on its own, the same way an actor can read her lines one after another. It's the ultimate workaround if you've got repetitive or convoluted commands. It's the key to automation. You might say that shell scripting super charges our development. But could a shell be written that gave that superpower away to the whole world? That was the challenge.
	
1b0870e6203da83cc4a3ea05770001d3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	The foundation had been cobbling this brave new operating system together for years. And those two massive tapes of code in the trunk of Brian Fox's car? They held a crucial component. Written on those tapes was a free and hackable shell that could complete the GNU operating system, Brian Fox's gift to the free software movement. He called it Bash.
	
726a799ef1df277c4fdff9313c7a15e1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	Back in 1969, a couple of computer scientists here at Bell Labs started to develop some programs they needed for their own use.
	
71c9075aa55e1fe2a08ad13ddb2a9d74|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	That's pioneering command line hero, Ken Thompson. The UNIX operating system, designed at Bell Labs, really was intended for their personal use. Originally, it was just an internal system. UNIX encouraged close communication among programmers, but it wasn't intended to change the way the whole world worked. It was intended to change Bell Labs.
	
43480316f0bf9bfbf80cf456fabe5d17|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	A UNIX shell designed by Ken Thompson was released in 1971. The Thompson shell was designed to be a command line interpreter, but it really wasn't capable of full-on scripting. It wasn't until six years later, in 1977, that scripting started to take off.
	
289fa27eac8c10b4b4f21d3ff4897bf7|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	The shell parameters, the special parameters, the variables that we sort of take for granted today, originated with Steve Bourne and the Bourne shell.
	
2a50f771cf24fe6e95bf998dfe0cb478|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	By now, it's used all over Bell Labs. We have close to 20,000 computer terminals in this company, and most of them are used for communicating with UNIX systems.
	
616e27621ba9b99b0df2918dfe95a0b5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	That's Chet Ramey, an IT architect at Case Western Reserve University. Chet works at maintaining Bash, but he's also a great resource for our origin story. He describes Bell Labs just as it was figuring out what the UNIX shell was going to look like.
	
2279438beeccbbe9f36964687ec1129e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	The programming constructs that we use without thinking today originated with Steve Bourne, and his shell basically won the bake-off. There was a significant user community using the Mashey shell. There was a significant user community beginning to use the Bourne shell. There was a committee that was set up to decide which one would win, which one would be the officially supported UNIX shell coming out of Bell Labs from then on, and Bourne's shell won. And the rest, as they say, is history.
	
af2a1cfdb407273270fedaf35e153eb8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	The constraints under which Bourne wrote his shell are almost unimaginable today. Obviously, when you have those constraints, you have to give up a lot, and Bourne gave up a lot. It's remarkable that he was able to put as much into the Bourne shell as he did given the space, memory, and CPU constraints he worked with.
	
4463ae1535919f7d100b4b398f08a97c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	It's not the end of history, though. Sure, the Bourne shell was a huge leap forward. It opened a door toward super-powered operations, toward greater automation, yet while there was a kind of Bourne supremacy for a while, the Bourne shell didn't solve all our scripting needs.
	
2409f25f6d93c0d4bd840ababba89acf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	And remember, the Bourne shell was still part of Bell Labs' UNIX system. It was still tied to the UNIX license. That meant it wasn't free. It wasn't open. This shell was owned.
	
df447df3f5d44a45a33c7dfbe4f0858a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	It was incredibly difficult to get UNIX source if you were not at a university. Obviously, that had an effect on the popularity of Berkeley UNIX, for instance, which started at a university, grew up among a community of universities, and kind of took off on the path of least resistance, as it were. So, getting access to the Bourne shell code was not difficult if you were at the right place, but in general, it wasn't viable.
	
f858aabec439a52758f5f94ddfe34e0b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	Chet Ramey is the maintainer of the Bash shell.
	
a2add51492f903fe6e29c21070b9387e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	So, we've got the beginnings of shells, the start of this crucial component to programming, but the best shell out there is tied to a license. It's closed. For Richard Stallman and his Free Software Foundation, that arrangement just wasn't okay. What was needed was a shell that wasn't tied to any one company, a shell for the people.
	
ac6beff2bc83f3cbf3d8fa3eb8734f85|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	But here's the trick. That meant writing something that did everything the Bourne shell could do without infringing on any of those pesky copyrights. Copy the Bourne shell's code verbatim, and you'd have a lawsuit on your hands.
	
6a75becbaf803f7c301af30bf71f0346|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	To free people from the Bourne shell, you'd have to find a coder with the ability to write a program that complex, a program that did everything the Bourne shell could do, but who hadn't actually seen any of the Bourne source code. You'd have to find a kind of outsider genius. And Richard Stallman had just the coder for the job.
	
48b9e008bf383963c1cd3505006ca70e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	Brian Fox was a 20-something high school dropout who knew code better than most of the folks at Bell Labs. He'd never been in a position to see any of the source code that made the Bourne shell work, and that made him ideal for the task at hand.
	
0e648f65279d67032932f2418c33730d|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|98|1|V|markdown
	My name is Brian Fox.
	
2902ab3eb264a66815e926c30a795cec|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	I figured why not get the story from the man himself? These days, Fox is an open source advocate and the CEO of Opus Logica. But back in the late '80s, he was just a young guy who believed in the free software movement. We chatted about the old days and how Bash evolved from there.
	
e13da8f636f4a26d1ac718b75b8c0b41|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So Richard Stallman asks you to create a shell for UNIX. That one will be a free shell, and it's a replacement for the Bourne shell. What was your response to that request?
	
66ccd08f865548db2a84a1a1257df8cf|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	"Can't we make a better one?"
	
160b07cdad59addba70c9037aaa19fa6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	I love that. Tell me more.
	
366811ded7080481b76cc3f79ce85ffe|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So the very first thing I did for Stallman was actually work on this tech info documentation system. I surprised Richard at the speed at which this type of programming would be done. He's a good programmer and he works quickly, but he doesn't judge that other people would work that quickly.
	
2d7268c419b487ebab27e72f840bfbff|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So, within the first week, I finished the first implementation of a program called GNU Info, and Richard was kind of stunned by that. I said, "What's my next project? What's my next project?" And he said, "Well, now do a compiler for this." And I did that, and I was done in a week with that, right? And then I said, "What's my next project? What's my next project?" And he said, "Well, this other guy's been working on this shell, but he hasn't gotten very far." I was like, "Okay," and nine months later, the Bourne replacement shell was done.
	
91dee77a17cad80784507b15a65c92b6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Nine months. Wow. Tell me about that. Why was it so challenging?
	
f611859d9414c7a16b8e1fe639d86bfc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	That's actually a fascinating question. The reason it was so challenging is because we had to faithfully mimic all of the behaviors of the Bourne shell, of Stephen Bourne's original shell, while at the same time being allowed to extend it and make a better tool for people to use.
	
17f68bbd5e378d466ccf5c3c36c2078a|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	While that was happening, I was in a quiet undercover argument with David Korn, the author of the Korn shell. The POSIX committee, which is the committee that says what's standard UNIX, they got involved and said, "Oh good, we need to find what the standard shell is," and 2 most important people on input for that were myself and David Korn. And David Korn had already written this shell called KSH, and every feature that he had put into KSH, he said, "That should be a standard feature," right? This would be easy for him than to have the most perfect POSIX shell, if it was simply his shell.
	
8f4dec25b60d6209eb7a34e380e526be|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Some of those features were not good features, were not good choices and made the shell somewhat incompatible with the Bourne shell, or I felt were missed features, and so there were several discussions and arguments about that, and so building a POSIX-compliant shell that was 100% perfectly compatible with every single shell script that had ever been written for the Bourne shell took longer than 3 months.
	
2a4bdfdea3fe429268be7606b2d96791|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So, if you are designing something that not only replaces the Bourne shell, but also is trying to mimic every part of the Bourne shell, it sounds like you might've run into some copyright issues. How did you approach that?
	
8713f392667248dc33319f1eeffe7377|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	In order to build true open source and free software, you have to do it in a clean room. You can't look at somebody else's code, start from there, and re-implement it. So I'd never seen any of the software associated with any Bell systems, UNIX or even Berkeley UNIX, I'd never seen the source code for any of these things.
	
937cfd45e7f37c6a0c51e85a236315e4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	When I started building the Bash shell, I used a parser called Bison, which was something that Richard had started to put together at the Free Software Foundation, and that was completely different from basically any other program that had come before it. So I knew already that the thing I was building was not ever going to be a copyright infringement on something that had been built previously.
	
3d37a064e47fa1f1c5e27c14518b5716|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	The work to create Bash had plenty of hiccups. Here is just one example, for the hardcore heroes out there.
	
710356f412f60511efed28ebf3f473da|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	At one point, I was working on implementing globbing in the shell. This is the wild card expansion that allows you to match a large number of files, for example. You could say star dot C, and that would match every file that had an extension of dot C.
	
a622f956b7ff13ede727537aab1b8c44|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So I worked on globbing for several hours, and I got it working, and I was excited about it. It was a good implementation. And in the course of creating this implementation, I had created a file in my directory called asterisk dot C, star dot C, and I thought, "Well, I should get rid of that file," and I typed in RM space, quote, star dot C, close quote, which in a modern shell, when you use the quotes, it means, "Do not expand this," and then I pressed return, and it was taking a long time for the prompt to come back because we're using Sun 350s and things are slow. And I realized, it's taking a long time because it's deleting all of the source files in this directory.
	
d4395d5cfba8f41634d05b4f89c5f433|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Oh no.
	
6b441fb9428a037f27974c8573726231|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Yeah. So I deleted the source to Bash at that point.
	
d4395d5cfba8f41634d05b4f89c5f433|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Oh no.
	
b542421f41747bc4e2f264852b6712c3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Which-
	
d10ed3995eca3d7a8affb33cb5f86d63|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Oh my goodness, yeah.
	
f11e824db7c0d0673bc5180b51a2a675|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Which caused me to just laugh kind of loudly for a really long time. I wasn't even slightly upset. And then over the next couple days, I typed it all back in. The code was completely fresh in my mind.
	
9e3a7bc48ee621eccc2b6686409a4fc6|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Okay. So most people would completely freak out at that moment. You laughed and you just said, "Oh, I guess I have to do it all over again." Why were you so calm?
	
8cab84e7c7919b6a5b703e0866c6b94e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	The problems had been solved. It was just a matter of putting it down into files.
	
830d3e15d62ca2f70fefab7f6648e390|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	It struck me as insanely absurd and very funny that I'm building this tool, and to make sure it's good to eat your own dog food, to make sure the tool works correctly, you use the tool while you're building it. But the tool didn't work correctly. I had not yet implemented quoting, and because I hadn't implemented quoting, this command that I casually typed did not do what I expected it to do, and I thought that was really funny.
	
89429193c7ec1e2dd9aed32989afca46|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	That's amazing.
	
4c21fdd64dfc6c7df11e396a372049a1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Even that story about a mistake speaks to Fox's brilliance, though. They say that Mozart finished symphonies in his head and then just had to write them down once he'd finished. Fox had a similar talent.
	
8b89c41157007904af52633c5bec0ed1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	So, when you were finally done and you got to deliver Bash, how did that feel?
	
6f1513f05f106369d2973098122d79ba|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Oh, it actually felt spectacular. So here's a story that I don't actually usually tell. It was about 8 months into building the shell. I knew I needed about a month before I'd be done, and another shell was released. ASH, an open source shell got released, and I was crestfallen because we had not released the Bash shell to anyone yet, so only a handful of people were using it. I knew it needed another month's worth of work and I thought, "Oh, this is terrible. All this energy and effort I've put in will not be appreciated. It might not even be seen," and so I was pretty distraught. I was not laughing.
	
6e28b5dbcd6f321c2bd73d008d77dc74|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	The proof was in the pudding, though. GNU's Bash was released in 1989 and became the default shell for Linux. Today, it saturates our whole computing experience.
	
bafe4db3a01d4e83eabdf9aa9843d93e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	But it is everywhere. So many people use it every single day. It's on every single computer. How does it feel being the author of Bash?
	
97789fa88537c1d16fe9d911c8cc34cd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Most of the time, I don't even notice that Bash is a thing other than a tool that I use in my daily life. I don't really think about it. Every so often, I'll walk into an Apple store and look around and think, "Wow, every computer in here is not only running software I wrote 27 years ago, or more now, it also has my name in it," and then I think, "Every computer on the internet, every server on the internet is running the Bash shell and has my name in it." And then Windows last year or the year before came out with the Power shell, which is Bash, and I was like, "Oh my goodness. My name is in every computer on the planet."
	
9a47922e16041ae2420cf5cf35969708|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	I want you to really hear what Fox told me next, though, because it's so important. He was never trying to code his way through this global domination. He was trying to help, trying to help the culture of programming that he was part of.
	
db6c7fca0853ca0d09525935bde72b66|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	I didn't set out to achieve some grandiose goal of being on everybody's computer. I wasn't interested in that at all. I wanted to make a useful piece of software and I expected it to have a kind of typical software lifespan of 3 - 5 years, not this kind of crazy 30-year term that it's had.
	
ae6ad9e7dfff119b0a5c71517b0693f4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Were you always so, frankly, so nonchalant about the impact that you've had on computing?
	
54aa639bc1f2e7725a04f47afc7bd076|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	I'm proud that I wrote Bash and I have an ego, so I do things like accept podcast requests to talk about the shell.
	
c8a2da7c49b42c1fee4439e2e6921e69|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Thank you. But it is not something that is there in my everyday life. Fortunately, I'm just an obscure person, right? It is true that my software's running on everybody's computer in everybody's house and it's also true that nobody knows that, right? So I have plenty of anonymity, and the fact that the shell exists and that somebody wrote it and that person lives in Santa Barbara is getting more known, and I'm beginning to notice it more in my life. People sometimes come to see me play music and then tell me, "You're the guy that wrote the shell," and I feel a little like Keanu Reeves.
	
82d1fda33ee4afbbe7e3b93e9634dd97|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Thank you very much.
	
a504613b2f842979b245000863e85724|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|258|1|V|markdown
	Very cool. So you said that you didn't set out to make sure Bash is on every single computer. What did you set out to do? What were your hopes for Bash?
	
83de9a756989ecfe867d3e407854d073|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	A useful replacement tool to be part of the project GNU and to help create this free open source operating system. I actually assumed that once we had finished creating this open source operating system, that the software on that system would advance and I would get a chance to create the kind of shell that I wanted to create, which would help people to advance the science in a manner of speaking.
	
52aeb258267d043ab884b25705be6dc2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	Absolutely.
	
b9d7eeeac6bc2c351c1d6e7d7372532e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	I eventually came to the realization that the reason Bash was created was to in fact be backwards compatible with the entire world of UNIX that already existed, and that momentum has kind of kept it alive, which is another unique position to be in, that your tool is so fundamental, it's so much of a nut and bolt that it's not something that will be removed.
	
24c643d883554b9ef54f5f1c8673d1e2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	Brian Fox is the creator of the Bash shell and CEO of Opus Logica.
	
3af00579428738cca66b6a47aa2f0827|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	It's been a great feeling to know that I've created something of value in the world, something that other people are still using, and that is a good feeling. And then as I look at how that came about, I realize the more important thing is the words free software and open source are in everyday English, everyday language across the globe, and that certainly wasn't true on day one. That was a creation of the efforts that Richard Stallman and myself and others put in. And to be part of that movement, that's lucky to have been early, but it's also extremely satisfying when I look back at that and I think, "Wow, open source software exists, and I was a part of that."
	
dbe4122b7e277d538738565e2fa0a00b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	That's Steve Bourne, creator of the Bourne shell, that Brian Fox worked to replace. We wanted to know what Bourne thought about Fox's work. Did he think of Bash, that born-again shell, as an open source clone of his own work? I mean, was he cool with Bash?
	
83538676b49f0546c227147c4996bc56|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	I did hear about Bash, actually.
	
a51f4c5e1bca164aec61cc679358f092|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	The person that wrote it came up to me in a conference one day and gave me a t-shirt which said “Bourne again” on the front of it.
	
eaccb9efd20091d98a64e200954f180b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	That'd be Brian Fox.
	
9d8d7be1c6383e3204592fe37b6f3b21|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	It was a friendly sentiment, and it was, "Well, I hope you don't mind, but I just rewrote your shell," and I said, "That sounds great," and he gave me a t-shirt.
	
d1393986c457c0a79beb2b58584089e4|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	If there's one thing I've learned in the coding world, it's that everybody loves swag. Stephen Bourne, turns out, saw Bash as a necessary extension of the work he and others did at Bell Labs. There's no bitterness at all.
	
3eb221bc59442c31a638af4f9ad649b3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	There were things that people wanted to do in variable substitution and doing string management that I didn't do, but that were put into Bash, that people use a lot these days. The relationship between Bash and the original shell, my impression at the time was it was just a reimplementation of the language, and over time, it did have features added to it, so it did sort of progress beyond what I wrote, certainly in the string management area. I use it all the time now.
	
03011b744d67451310c2f9796e1879cc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	Steve Bourne is creator of the Bourne shell and CTO at Rally Ventures.
	
150a2dbc68e8410361a62b0aeded3025|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	It's been many years now since Bash was stowed away in Brian Fox's truck on that long drive to Santa Barbara. In 2019, version 5.0 was released, and like Fox mentioned, Bash is now built into Linux, into Mac OS, and even into Microsoft Windows. As UNIX gives way to Linux, Bash has become a cornerstone of scripting in an open source world. It's fundamental to our automation.
	
b742f6d288279ed7c4a93648dfffeaf0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	It became almost crucial, as organizations got bigger, to use something that would allow us to get things done quicker. It became a necessity.
	
2ec8069d8600a9e8dd3a4287b6c448b5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	I definitely think that someone starting in the beginning stage of their career should definitely use Bash. Instead of using the GUI or graphical user interface, you would tend to be taken more seriously as an admin or as a DevOps person.
	
fea01c024c531c2e0f2b889e6d81774e|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	Taz Brown is a Senior Ansible Automations Consultant at Red Hat, so she's well-acquainted with the value of Bash.
	
9fb110b3d59a5aa36aa93f5b0de8ba72|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	And that's because a Bash coder will have one of those core skills that simply levels you up.
	
71c7a7831bdd06a4a77ffe2237659a88|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	There's a value in learning scripting because it prepares you to be much more of a long-term sort of thinker when it comes to automation itself, because you can see how a script runs, then you can start to say, "Well, okay, I can do this. I can automate this task. I can automate this," and it starts to make you a different thinker and a different technologist.
	
8787b072295dfd5e4c08b0afffae7090|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|338|1|V|markdown
	For the ops side of things, that automation has become indispensable. Sophisticated programs, applications, and tools are all being supported by legacy Bash code.
	
162b8362b8a4cc94ca1f4af28bd63dc2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	You don't have to reinvent the wheel, if you will. You can continue and just pull those in from a GitHub repository or wherever you store those particular files. Bash allows you to do that. Bash allows you to take those common tasks and allows you to scale across to, say, from 10 servers to 1000 servers.
	
e51233efe6b4c92498beb84fec19eeb0|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	The great thing about automation is once you have a plan in place, it allows you to do it at a very cost sort of efficient manner. It allows you to do things that would be impossible to do manually.
	
6fd9bc871e237b1c321764d34c8c1bbd|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	And then, more recent arrivals, like Ansible®, which Taz Brown works on, can always be integrated with Bash to get the job done.
	
e970e0d0c6e4dc461de02944ca3af8fc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	Things have evolved, but I don't think Bash is ever going to not be a tool that an admin would apply, especially if you want a quick automation.
	
7735cc907325e1d5221b10477b25bf28|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	In the end, all this success can be traced back to the fact that it's a free and hackable program. Brian Fox's desire to give something to the world with no licenses, no strings, has been the key to Bash's success. In fact, he's not even calling the shots anymore. Hasn't for a long time. Here's Chet Ramey again, who's been maintaining Bash for decades.
	
5ad419f76e4123dd7bb408ed9824edc3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	And Ramey will have to pass on the mantle, too, just like Fox, because Bash is bigger than any one maintainer.
	
7222944d87d363389d1d0f2daafb85c1|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	Brian had decided after releasing, I think, version 1.05 that he wanted to move on and work on other things. He had been given other assignments at the Free Software Foundation and he wanted to do things besides Bash, and I was the most active contributor. He and I worked together on a lot of new features. We worked together on a lot of bug fixes, and so when it came time for someone else to take over, I was the logical candidate.
	
e8058c1a62801b31e2c173ffac4641c9|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	I started when I was 23, and Bash and I have kind of grown together. At some point, I will need to solicit a team. I will need to solicit folks who are willing and able to put the time in and move the shell forward.
	
c1054569bf1f1ba392e097c94c955fdc|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	By the way, something's been bugging me, Brian Fox driving all that Bash code to Santa Barbara. Why the move? I mean, did he have a new job at some tech company, or?
	
185a843cc127ce83e78bf15ca13412e3|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|378|1|V|markdown
	Bash, the born-again shell, will turn 30 next year, and it's showing no signs of shrinking away. Bash has ridden the free software wave, and then the open source wave, until it spread to every corner of the programming world. But it's amazing to remember that, at one point, it was just code on a tape in the trunk of Brian Fox's car. It was just a dream of a shell language that a few committed coders were willing to give away. Almost by accident, Brian Fox became a huge command line hero in the process.
	
6d955a13fc08bffac1b10a59e32061f8|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|398|1|V|markdown
	I wanted to continue my music career, and I thought the best place to do that was where the weather was always about 72 degrees and there are no clouds in the sky and the beaches are beautiful.
	
d7b9dc47e7c2bdd9673ea92c4b302781|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|398|1|V|markdown
	Nice. I like that reason better.
	
6722388e3396550b02499dcd1cae85d5|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|398|1|V|markdown
	Next episode, we take our interest in automation to a whole new level and look at the languages of AI with a special focus on John McCarthy's creation, LISP.
	
209c851b88d0c325f3f3ccdd84aa8177|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|398|1|V|markdown
	Shoutout to Wayne A. Lee, who suggested our title for this episode, Heroes in a Bash Shell. Nice one, Wayne.
	
e1e5fd9d0db8bd389078aaf96c4d780f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|398|1|V|markdown
	Command Line Heroes is an original podcast from Red Hat. You can dive deeper into the story of Bash or any of the programming languages we covered this season, if you head over to the show's site at [redhat.com/commandlineheroes](//www.redhat.com/en/command-line-heroes).
	
61137fdd8bd9abf62ec15563f479453c|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/finished/LCRH-S03-HBS-Final.md|402|1|V|markdown
	I'm Saron Yitbarek. Until next time, keep on coding.
	
eb6222023853702da3bdfd81ab0ffd0e|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|147|1|V|markdown
	![139](/images/2020/01/wallpaper/139.jpg)
46b904662e439a714a221c274247465c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|148|1|V|markdown
	![140](/images/2020/01/wallpaper/140.jpg)
78e5a1ed9acc7b8943d6f1f88586a2eb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|149|1|V|markdown
	![141](/images/2020/01/wallpaper/141.jpeg)
5edbec605dc771e4c60445bcd2d569a5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|150|1|V|markdown
	![142](/images/2020/01/wallpaper/142.jpeg)
538fa0a778188c9b8b8ef6832b2134b9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|151|1|V|markdown
	![143](/images/2020/01/wallpaper/143.png)
4b6d29e866d9902443e3c8a575dfc127|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid.py|134|9|V|python
	        network.zero_grad()
91e02cd2b8621d0c05197f645668c5c4|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid.py|10|21|v|python
	network
6475a289daedcf0f7a5fd7ad813e3172|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid.py|57|5|v|python
	network 
5e35e4d512142b7270adb853a640ccd4|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid.py|69|1|V|python
	network = network.cuda()
1586cf3499716114b56f3d4854570ad3|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid.py|63|1|V|python
	model = model.cuda()
65f1888a3c372d37daf2b2ed2e7f6132|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|239|1|V|markdown
	## Cross-Modal Attention With Semantic Consistence for Image-Text Matching (2020 IEEE)
93272dff3a33e2aefe0a878d2601e1d3|file:///home/godlovesjonny/Jonny/Ideas/DualGAN-test-matrix.md|1|2|V|markdown
	## 算法本身并不是不合理，测试算法需要修改  
	+ img\_feature[i], sentence\_representation[i]
	+ img\_guided\_feature[i, j], sentence\_guide\_feature[i, j]
	+ img\_common\_feature[i, j], sentence\_common\_feature[i, j]
e1820e82cbc842bb1db208961a13bfa4|file:///home/godlovesjonny/Jonny/Ideas/DualGAN-test-matrix.md|2|1|V|markdown
	+ img\_feature[i], sentence\_representation[i]
	+ img\_guided\_feature[i, j], sentence\_guide\_feature[i, j]
	+ img\_common\_feature[i, j], sentence\_common\_feature[i, j]
2a266ea03ec6cdb10cdb8218b4ace33d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|239|1|V|markdown
	### 测试算法调整，预存数据修改
674a4a1a966a6e07692829b593642378|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|246|1|V|markdown
	# 20201029
e4d2910e57622f960412225564c8e54e|file:///home/godlovesjonny/Jonny/Pys/RDB-code/network.py|29|1|V|python
	        self.conv2 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=3, padding=1)
24e9d09e8444d0561b13b2a5beef1d98|file:///home/godlovesjonny/Jonny/Pys/RDB-code/network.py|46|1|V|python
	        f_DF = f_GF + f_0
3145ccfed29323b20b6c573fcef1fc7c|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|257|1|V|markdown
	+ 在dd最后再加一组
d6a0e661db12e0c9e64cb4f18bfb583a|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|248|1|V|markdown
	## 1802.08797 Residual Dense Network for Image Super-Resolution
	## sensors-19-03809 Dynamic Residual Dense Network for Image Denoising
	### RDN 存在的问题
	+ 只在 single noise level 的降噪有好的表现
	+ 计算量随着 RDB 数量增多大幅度上升，而 RDB 数量的增多对降噪效果的提升较小
	
	### DRDN
	+ 动态网络，根据输入图像的噪音量选择性地跳过一些RDB。  
	+ 允许修改降噪强度来手动获取最好输出，使其能够更有效处理 real-world 降噪。  
	
	### DRDB
	引入门控机制， gate module 之间使用 LSTM 传递信息。
6105347ebb9825ac754615ca55ff3b0c|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|259|1|V|markdown
	---
	
b095dd4940d77c00eab8913b18c51be7|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|269|1|V|markdown
	
	### 条件增强技术 (Conditioning Augmentation technique)
78ac103ebbc7e0159c28fef3a99caec1|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|280|4|v|markdown
	(Afourasetal AAM 2020
e2c87dc25ae97121c4567372baeddbee|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|280|4|v|markdown
	(Afourasetal AAM 2020)
cb8de3f607d17a124afd0070543645fe|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|232|1|V|markdown
	
	## Cross-Modal Attention With Semantic Consistence for Image-Text Matching (2020 IEEE)
72ab203b76e231b948119afb923c5975|file:///home/godlovesjonny/Jonny/Ideas/Vocab.md|1|1|V|markdown
	|-|-|
43e985c11dbe4cd31365127cd8ca9e4e|file:///home/godlovesjonny/Jonny/Ideas/Vocab.md|4|1|V|markdown
	|----------------|-------------|------|
dd3d55e6a30043ebe0ae9c4ea516f31f|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|316|8|V|markdown
	## CycleMatch: A cycle-consistent embedding network for image-text matching (Pattern Recognition 2019)
	
9632b1191e39718993aa8b420afd162c|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|316|8|V|markdown
	## CycleMatch: A cycle-consistent embedding network for image-text matching (Pattern Recognition 2019)
	
	
6997bb180ada86e4806ca3c744201447|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|359|1|V|markdown
	
	在 ranking objective 之外，加上语义一致性限制 (minimizes the deviation of the corresponding similarities measured in both embedding spaces)。  
c2cd84a5bf119953a8c732989ed21924|file:///home/godlovesjonny/Jonny/Pys/RDB-code/color_train.py|49|1|V|python
	    train_set = DatasetFromHdf5("./data/SIDD_train_srgb.h5")
	    training_data_loader = DataLoader(dataset=train_set, num_workers=opt.threads, batch_size=opt.batchSize, shuffle=True, pin_memory=True)
a8921cbfc9dd7efd4adca5e92c4be82a|file:///home/godlovesjonny/Jonny/Pys/RDB-code/color_train.py|7|1|V|python
	from torch.autograd import Variable
	from torch.utils.data import DataLoader
83ce955876951802fd02911b33837182|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid_sRGB.py|32|1|V|python
	torch.manual_seed(dd)
9cd09f14eda8786d80345a8788fd09b3|file:///home/godlovesjonny/Jonny/Pys/RDB-code/train_SIDD_Pyramid_sRGB.py|89|1|V|python
	assert torch.cuda.is_available(), 'GPU is not available'
ee4dc7f4be6a686e985272117900501b|file:///home/godlovesjonny/Jonny/Pys/RDB-code/RDN_train.py|9|6|v|python
	color_modelwavelets 
4ef01977158bab9aea85cfae2ef3adf7|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|6|1|V|python
	'''
0697d4fe9b2144045f58960ca08d58c2|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|6|1|V|python
	Residual Dense Network for Image Super-Resolution
fead170543f394b1474cf2571274320f|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|6|1|V|python
	Yulun Zhang, Yapeng Tian, Yu Kong, Bineng Zhong, Yun Fu
da1456577715c8a9927738193d5a43f4|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|6|1|V|python
	arXiv:1802.08797 [cs.CV]
19270105ff24286262b60533abe956c1|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|6|1|V|python
	https://arxiv.org/abs/1802.08797
2d0eb851eba22d8006e580d27706db93|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|37|1|V|python
	        #  f_DF = f_GF + f_
19addb31d6aaa718acb7213a5ef134cd|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|22|9|V|python
	        # self.criterion = nn.L1Loss()
	        # self.optimizer = torch.optim.Adam(self.parameters())
	        # self.scheduler = torch.optim.lr_scheduler.MultiStepLR(self.optimizer, milestones=[50, 75, 100], gamma=0.5)
c6187b21e47a184f7de8f009461c48b9|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|12|5|V|python
	        # self.RDB1 = RDB(nb_layers=rdb_number[0], input_dim=16, growth_rate=16)
5a3a98f613d223a375609ed5f40d9463|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|51|1|V|python
	class RDB(nn.Module):
	    def __init__(self, nb_layers, input_dim, growth_rate):
	        super(RDB, self).__init__()
	        self.ID = input_dim
	        self.GR = growth_rate
	        self.layer = self._make_layer(nb_layers, input_dim, growth_rate)
	        self.conv1x1 = nn.Conv2d(in_channels=input_dim + nb_layers * growth_rate,
	                                 out_channels=growth_rate,
	                                 kernel_size=1,
	                                 stride=1,
	                                 padding=0)
	
	    def _make_layer(self, nb_layers, input_dim, growth_rate):
	        layers = []
	        for i in range(nb_layers):
	            layers.append(BasicBlock(input_dim + i * growth_rate, growth_rate))
	        return nn.Sequential(*layers)
	
	    def forward(self, x):
	        out = self.layer(x)
	        out = self.conv1x1(out)
	        return out + x
bb1b3707b99765c9f15b2bc2ee6de023|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|57|49|v|python
	kernel_size=),
ca5001e1ba85a0f51dd420490bcc9ae4|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|57|49|v|python
	kernel_size
f9b3b193671e3fc93831318083d3ed52|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|15|1|V|python
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
528700ef841d6a65be3573620f9d0a6c|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|23|49|V|python
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.GFF1 = nn.Conv2d(in_channels=64*4, out_channels=64, kernel_size=1, padding=0)
287cb6c7c2fd0b69ccc3836202baf085|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|23|49|V|python
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
	        self.DRDB4 = DRDB(nb_layers=rdb_number[3], input_dim=64, growth_rate=64)
0e12f449fb7612f26c86de867348261a|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|22|1|V|python
	        self.DRDB11 = DRDB(nb_layers=rdb_number[10], input_dim=64, growth_rate=64)
e167cbd6c3b1f53ae04a5e3ce5354e90|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|23|1|V|python
	        self.DRDB12 = DRDB(nb_layers=rdb_number[11], input_dim=64, growth_rate=64)
4e2c0bdbfcaff540caec2cff20809f82|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|24|1|V|python
	        self.DRDB13 = DRDB(nb_layers=rdb_number[12], input_dim=64, growth_rate=64)
550eeebd3f243a28a88dd8a8ece0eebf|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|26|49|V|python
	        self.DRDB14 = DRDB(nb_layers=rdb_number[13], input_dim=64, growth_rate=64)
5672947d204b69567268397753b35fd7|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|27|49|V|python
	        self.DRDB15 = DRDB(nb_layers=rdb_number[14], input_dim=64, growth_rate=64)
c5a459df3b1304dc4658ba101fd3a450|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|30|49|V|python
	        self.DRDB17 = DRDB(nb_layers=rdb_number[16], input_dim=64, growth_rate=64)
92a1364f4c46ba1ce63f347d03aea6e2|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|30|49|V|python
	        self.DRDB18 = DRDB(nb_layers=rdb_number[17], input_dim=64, growth_rate=64)
96ed46e61d0599bb86bc205985085560|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|30|49|V|python
	        self.DRDB16 = DRDB(nb_layers=rdb_number[15], input_dim=64, growth_rate=64)
43e76056b3541df12eb46d8fcd5aaed5|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|31|49|V|python
	        self.DRDB19 = DRDB(nb_layers=rdb_number[18], input_dim=64, growth_rate=64)
97cbf1cd4e56fc00b08bc78b43576c61|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|43|1|V|python
	        f_4 = self.DRDB4(f_3)
18baa0db5e056dfec4100c014e5cc135|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_5 = self.DRDB5(f_4)
5b5ea2cbf5d30277a3361a08bae0b5a7|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_6 = self.DRDB6(f_5)
01fb4c34dd912bf7b938a1b4e2ad2de6|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_7 = self.DRDB7(f_6)
d278a866317b7c2c7659550706544d6d|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_8 = self.DRDB8(f_7)
bf769964ae2becabf941b8d67d50d3a5|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_9 = self.DRDB9(f_8)
fa82bb2b4144da36725785d16cc447b6|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_10 = self.DRDB10(f_9)
6084ab76212dade1d41999e1f296c18e|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_11 = self.DRDB11(f_10)
8dd9965b9b91cf3143b1509a7fd534fb|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_12 = self.DRDB12(f_11)
72c58095a3dacff73470b979f1439603|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_13 = self.DRDB13(f_12)
634e3ac838a9ffab3ee33eceffeda74b|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_14 = self.DRDB14(f_13)
80f8df45d8c7c17da0a71f86209ae4a5|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_15 = self.DRDB15(f_14)
9d18ce36cd2498272343b52e4211ee88|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_16 = self.DRDB16(f_15)
349c1cda471a5f36efe10c50cf42aab0|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_17 = self.DRDB17(f_16)
7e0324624ee4a6320bcc29fe193888e3|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_18 = self.DRDB18(f_17)
8e6e44e174945f622f39c1082e55d4a0|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|1|1|V|python
	        f_19 = self.DRDB19(f_18)
0889574c0b044e59c6f830eebbf3530a|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|60|41|v|python
	f_4)
22c48d049aadae49220506d82d061af9|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|108|33|v|python
	out_lstm
58413c7796580df1ff595c52dcaaae04|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|110|21|V|python
	        print(gate_in.shape)
	        input()
aa86f863ee84062ba5e0423fe20b3a9f|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN_train.py|39|19|v|python
	5, 5, 5, 5, 5]
ad2c816f95af2d39094613011f36311c|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|92|40|v|python
	growth_rate
bc4820889147faada994440c23bc8f89|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|94|29|v|python
	growth_rate 
f4c136ab164301f18f9770c6b336523f|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|112|1|V|python
	        h0 = torch.rand(3, 16, 16)
3d3137819046568dc12299086043a38f|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|116|29|V|python
	        print(out_lstm.shape)
	        input()
76c5c4d2f2243f3bf1d6e972b47a106b|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|120|22|V|python
	        print(gate_state.shape)
	        input()
7da0540f4d61d2d0164f6ced5402ef6b|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|119|9|V|python
	        input()
e9bbed6a08b202401b58e2613eee5c9e|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|120|9|V|python
	        print(gate_state)
e35ac532985f3b2d87a41b65e96cec38|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|118|9|V|python
	        print(gate_out)
772136ed5d0c522b7ff281d45b007786|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|119|9|V|python
	        if gate_out.detach() >= self.TH:
a958c4c45d836bff3d09456cd362959c|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|122|9|V|python
	        else:
a27b40a765f5563b0b4f8f1bdcfd73b8|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|122|13|V|python
	            return x
37e4af2c1cd9e9d54404e454a0635127|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|114|9|V|python
	        th = torch.ones((16, 1)).cuda() * self.TH
407150f9c9718ef9b6f70229557aa8f1|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|120|17|V|python
	        print(out.shape)
	        print(x.shape)
	        input()
e252228c5d921879e66e697bb41621e6|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|121|9|V|python
	        print(out)
e11ccd438c91df17552ef45e7d6c1119|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|83|74|v|python
	batch_size
326f92c03da33c64316da4c77e0c0d77|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	godlovesjonny
820b4ad02742e6630b554a48de7d2d9f|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	Jonny
d0a662a5235ecde30739fe50cf0de830|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	Paper
bbfebd9018f9ac2fa9562ddd4de0b14d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	ReID
c111e2209dcd275ff9ac418118155647|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	202009
e76b449b9fc8536af7557ffa6321d269|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	Cross
854bb0707ac6ddc39fcc0c51effd6585|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|1|V|markdown
	## -ModalPerfect Match: Self-Supervised Embeddings for Cross-Modal Retrieval
47bcd860b6a5f3171eea1b5f0c850fe1|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|380|4|V|markdown
	# 20201105
	## ModalPerfect Match: Self-Supervised Embeddings for Cross-Modal Retrieval
ebbb988ab47de2beda0831a3d7fa0c92|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	ModalPerfect 
6da89265a9a8b0b28eb4946bb2ec0c6d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|4|v|markdown
	Match
3759d15bf17b8e92a587f00413b68352|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|381|1|V|markdown
	## Perfect Match: Self-Supervised Embeddings for Cross-Modal Retrieval
17ab2480144690930347b206aa5f2b0e|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|152|1|V|markdown
	![144](/images/2020/01/wallpaper/144.jpg)
4b40f350b3a635bb35c7074dd22982f0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|156|1|V|markdown
	![148](/images/2020/01/wallpaper/148.jpg)
bfbfa8b014122a8eac6cbb943346e1f5|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|389|54|v|markdown
	(但是跨模态 Reid 应该是共同的标签空间)
d8cd9bba452995a98dec18a6ad76cfba|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|96|9|V|python
	        nn.LSTM()
a4c527bc912168d577b78f9784781512|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|8|43|v|python
	, batch_size
05bd0abd520e8de675fa2392e650e657|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|113|22|V|python
	        bs = x.size(0)
	        h0 = torch.rand(3, self.BS, 256).cuda()
590f53e8699817c6fa498cc11a4cbe63|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|114|28|v|python
	self
36bc0a7f7065d6ab8a91e07f21fdd118|file:///home/godlovesjonny/Jonny/Pys/RDB-code/DRDN.py|115|28|v|python
	self.BS
7c9c07337d298da3c51ec6d3647d4b0b|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Crowd_Counting/README.md|9|4|v|markdown
	CSRNet Architecture
e54a71957b3c17e5424a1fbf6f346c71|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Crowd_Counting/README.md|11|1|V|markdown
	![CSRNet Architecture](./imgs/Picture1.png)
feacae72a0d7a14e7fa59e1c0b1d983b|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Crowd_Counting/README.md|15|3|v|markdown
	CSRNet 
2d242bb36ec91b32005f9296ff03a912|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Crowd_Counting/README.md|15|3|v|markdown
	Architecture
e00ec9cfb1f2ea304812d3269164f3b8|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Cross_Modal_Reid/README.md|1|3|v|markdown
	modal 
20c88b5915f4bd66054a6168ae16185f|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Cross_Modal_Reid/README.md|3|1|V|markdown
	Given a natural language description, description-based person re-identification aims to retrieve images of the matched person from a large-scale visual database. Due to the existing modality heterogeneity, it is challenging to measure the cross-modal similarity between images and text descriptions. Many of the existing approaches usually utilize a deep-learning model to encode local and global fine-grained features with a strict uniform partition strategy. This breaks the part coherence, making it difficult to capture meaningful information from the within-part and semantic information among body parts. To address this issue, we proposed an inner-cross-modal attentional multigranular network (IMG-Net) to incorporate inner-modal self-attention and cross-modal hard-region attention with the fine-grained model for extracting the multigranular semantic information. Specifically, the inner-modal self-attention module is proposed to address the within-part consistency broken problem using both spatial-wise and channel-wise information. Following it is a multigranular feature extraction module, which is used to extract rich local and global visual and textual features with the help of group normalization (GN). Then a cross-modal hard-region attention module is proposed to obtain the local visual representation and phrase representation. Furthermore, a GN is used instead of batch normalization for the accurate batch statistics estimation. Comprehensive experiments with ablation analysis demonstrate that IMG-Net achieves the state-of-the-art performance on the CUHK-PEDES dataset and outperforms other previous methods significantly.  
50ad14138ed7d7f401d85fe98729b541|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Cross_Modal_Reid/README.md|6|1|V|markdown
	## 数据库
a335d03c6b8e44903e049c2a631488f0|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/Cross_Modal_Reid/README.md|14|29|v|markdown
	accuracy 
62b43237d2c7d7d3edf9399d3c360eca|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/README.md|2|1|V|markdown
	Projects of NjtechCVLab
b5d01c2eec36c8927d55a9fb0e7b8f2a|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_2/README.md|7|1|V|markdown
	+ Action Recognition
242071653ec07e4d3b9a223ee9a1f1fc|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_1/README.md|3|1|V|markdown
	入门资料  
c1727f0c0a162fcd390b94f1c9685edf|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_1/README.md|1|2|V|markdown
	# Level_1
	
3057d7ce58c36045d33d30f181f2e6ae|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_1/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%8E%A8%E8%8D%90.md|1|1|V|markdown
	# 学习资料推荐
	
	+ [《动手学深度学习（PyTorch 版）](http://tangshusen.me/Dive-into-DL-PyTorch/#/)
	+ [2017CS231n 斯坦福李飞飞计算机视觉](https://www.bilibili.com/video/BV1Yt41157Lb?from=search&seid=6857653119748371893)
0ac1d40f0a208a379ec2bd4236c2c11a|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|397|23|V|markdown
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
	### Cross-modal Hashing
	+ 通常的方法学习一个共享的隐含空间，但是处理大规模的高维多模态数据在计算上低效。
	+ Cross-modal Hashing 学习压缩二进制编码，用于构建不同模态间的联系。
fc96bf76c4fe88ac9ff5ce36a6d3e1da|file:///home/godlovesjonny/.local/lib/python3.8/site-packages/qutebrowser/misc/crashsignal.py|222|1|V|python
	            cmd_history = []
9e20d7c3c66476b4614e636f94c2215f|file:///home/godlovesjonny/.local/lib/python3.8/site-packages/qutebrowser/misc/backendproblem.py|366|13|V|python
	            print("ok")
d6b6112988c70ef1de6dc3c81b2aba60|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|403|1|V|markdown
	## 1511.05644 Adversarial Autoencoders
18ebebfa000b6a4d2f171c7d9a00891d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|419|1|V|markdown
	+ Employ dd
36ec4392349c500dc78eed0082428711|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|423|1|V|markdown
	## 由当前模型想到的
9221f9627d6b6890d74c7ebab5a99b1d|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|421|1|V|markdown
	Domain Shift 问题  
	
	Cross-domain Image-based Person Search + Cross-modal Text-based Person Image Search  
24278626a9a5ed0608a8cdef974f479e|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|422|1|V|markdown
	
	## Cross-Modal Cross-Domain Moment Alignment Network for Person Search (CVPR 2020)
dc76ec08d315df6656dc6325cf1994b1|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|131|20|V|markdown
	### 一个可行性有待商榷的想法
	维护一个文本池，通过文本相似去检索到相似的文本，用检索到的文本和源文本一同用于图像检索。  
	
a35d527c9e6ae97614850f7b2cb7505b|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S06-JL.md|10|1|V|markdown
	Command Line Heroes: Season 6: Jerry Lawson
1859aa73710f77ec501addf9b21554af|file:///home/godlovesjonny/Jonny/NjTechCVLab/Level_1/README.md|5|1|V|markdown
	+ [动手学深度学习（PyTorch 版）](http://tangshusen.me/Dive-into-DL-PyTorch/#/)
d6e34da64369e0b0acd0cde302fa69af|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/ldp1.md|2|9|v|markdown
	Ldp1
d7e121189eca1bfc512b5841ffa518ee|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/dl-notes1.md|4|1|V|markdown
	categories: ["Alchemy Of CV"]
	tags: ["cv", "notes", "deep learning"]
f82c7d9e49bf0a59074e8886ca0c5cc4|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|453|1|V|markdown
	## Deep Adversarial Graph Attention Convolution Network for Text-Based Person Search (MM 2019)
7432c8d83222d5a32ec8192e44ae5595|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|454|1|V|markdown
	dd## 
2fbccdc638282650f76ea78b2260e725|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|461|1|V|markdown
	### dd
46c6606008ca5fd71336c9da7b57c195|file:///home/godlovesjonny/.config/plasma-org.kde.plasma.desktop-appletsrc|1|1|V|
	[ActionPlugins][0]
	MidButton;NoModifier=org.kde.paste
	RightButton;NoModifier=org.kde.contextmenu
	wheel:Vertical;NoModifier=org.kde.switchdesktop
	
	[ActionPlugins][1]
	RightButton;NoModifier=org.kde.contextmenu
	
	[Containments][1]
	activityId=a85fbee8-8fa6-4145-bdff-c602ef4eb125
	formfactor=0
	immutability=1
	lastScreen=0
	location=0
	plugin=org.kde.plasma.folder
	wallpaperplugin=org.kde.image
	
	[Containments][2]
	activityId=
	formfactor=2
	immutability=1
	lastScreen=0
	location=4
	plugin=org.kde.panel
	wallpaperplugin=org.kde.image
	
	[Containments][2][Applets][16]
	immutability=1
	plugin=org.kde.plasma.digitalclock
	
	[Containments][2][Applets][17]
	immutability=1
	plugin=org.kde.plasma.showdesktop
	
	[Containments][2][Applets][3]
	immutability=1
	plugin=org.kde.plasma.kickoff
	
	[Containments][2][Applets][3][Configuration][General]
	favoritesPortedToKAstats=true
	
	[Containments][2][Applets][3][Configuration][Shortcuts]
	global=Alt+F1
	
	[Containments][2][Applets][3][Shortcuts]
	global=Alt+F1
	
	[Containments][2][Applets][4]
	immutability=1
	plugin=org.kde.plasma.pager
	
	[Containments][2][Applets][5]
	immutability=1
	plugin=org.kde.plasma.icontasks
	
	[Containments][2][Applets][6]
	immutability=1
	plugin=org.kde.plasma.systemtray
	
	[Containments][2][Applets][6][Configuration]
	PreloadWeight=55
	SystrayContainmentId=7
	
	[Containments][2][General]
	AppletOrder=3;4;5;6;16;17
	
	[Containments][21]
	activityId=a85fbee8-8fa6-4145-bdff-c602ef4eb125
	formfactor=0
	immutability=1
	lastScreen=2
	location=0
	plugin=org.kde.plasma.folder
	wallpaperplugin=org.kde.image
	
	[Containments][7]
	activityId=
	formfactor=2
	immutability=1
	lastScreen=0
	location=4
	plugin=org.kde.plasma.private.systemtray
	wallpaperplugin=org.kde.image
	
	[Containments][7][Applets][10]
	immutability=1
	plugin=org.kde.plasma.nightcolorcontrol
	
	[Containments][7][Applets][11]
	immutability=1
	plugin=org.kde.plasma.printmanager
	
	[Containments][7][Applets][12]
	immutability=1
	plugin=org.kde.plasma.devicenotifier
	
	[Containments][7][Applets][13]
	immutability=1
	plugin=org.kde.plasma.notifications
	
	[Containments][7][Applets][14]
	immutability=1
	plugin=org.kde.plasma.keyboardindicator
	
	[Containments][7][Applets][15]
	immutability=1
	plugin=org.kde.plasma.volume
	
	[Containments][7][Applets][18]
	immutability=1
	plugin=org.kde.plasma.bluetooth
	
	[Containments][7][Applets][19]
	immutability=1
	plugin=org.kde.plasma.networkmanagement
	
	[Containments][7][Applets][20]
	immutability=1
	plugin=org.kde.plasma.battery
	
	[Containments][7][Applets][8]
	immutability=1
	plugin=org.kde.kdeconnect
	
	[Containments][7][Applets][9]
	immutability=1
	plugin=org.kde.plasma.clipboard
	
	[Containments][7][General]
	extraItems=org.kde.plasma.bluetooth,org.kde.plasma.printmanager,org.kde.plasma.clipboard,org.kde.plasma.nightcolorcontrol,org.kde.plasma.mediacontroller,org.kde.plasma.keyboardindicator,org.kde.plasma.battery,org.kde.kdeconnect,org.kde.plasma.volume,org.kde.plasma.devicenotifier,org.kde.plasma.networkmanagement,org.kde.plasma.notifications
	knownItems=org.kde.plasma.bluetooth,org.kde.plasma.printmanager,org.kde.plasma.clipboard,org.kde.plasma.nightcolorcontrol,org.kde.plasma.mediacontroller,org.kde.plasma.keyboardindicator,org.kde.plasma.battery,org.kde.kdeconnect,org.kde.plasma.volume,org.kde.plasma.devicenotifier,org.kde.plasma.networkmanagement,org.kde.plasma.notifications
	
	[ScreenMapping]
	itemsOnDisabledScreens=
c9876fcff85166cc5481b6d3414fbc42|file:///home/godlovesjonny/.config/kdeglobals|137|13|v|
	chameleon
75fdf5d9706edc3c933e3e73fb6000e7|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|479|1|V|markdown
	### Image Graph Attention Network
ed11e35965ae293e169bbbdd9aeb0024|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|480|5|v|markdown
	Image 
2a4b3732519ab37d59b7267e9dbc41c7|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|479|1|V|markdown
	### Image Graph Attention Network
	+ 5 residual blocks + visual scene graph module + joint embedding layer
	+ 用 Faster-RCNN 探测图像中的目标，用 Motifs relationship classifier 作为关系分类器去预测目标之间的关系，用 attribute classifier 预测所得到目标的属性
	+ 提取四种特征： apprearance feature, spatial feature, label embedding, attribute embedding，用于形成节点特征 (node feature)
	+ 边特征 (edge feature) 包含三种特征： apprearance feature, spatial feature, label embedding
90f77909714ddfea2183e4ce58dfb649|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|486|1|V|markdown
	### Text Graph Attention Network
ce79f628dc0a8c4169d6d27bf3f9a281|file:///home/godlovesjonny/Jonny/Ideas/ICME_ideas.md|11|1|V|markdown
	+ VAE?
4065bb5d18b41ee9de15787d46ba1dce|file:///home/godlovesjonny/Jonny/Latexs/IEEEtran-csvt/egbib.bib|327|1|V|bib
	@InProceedings{faghri2017vse++,
	  Title                    = {VSE++: Improving Visual-Semantic Embeddings with Hard Negatives},
	  Author                   = {Fartash Faghri, David J. Fleet, Jamie Ryan Kiros, Sanja Fidler},
	  Year                     = {2018},
	  Journal                  = {BMVC}
	}
f541dad26dbe06a64d86e006b1347f58|file:///home/godlovesjonny/Jonny/Open-Source/autologin/wifiautologin.sh|6|11|v|sh
	这里输入账号
2f412bcc37d321eebc6deeb8c6c3d2e6|file:///home/godlovesjonny/Jonny/Open-Source/autologin/wifiautologin.sh|7|11|v|sh
	这里输入密码
4ba24b03c57f82da1559e5940eb6bedd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|158|1|V|markdown
	![150](/images/2020/01/wallpaper/150.jpg)
e31b0ba91fe19fa415307fe3e490c628|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|159|1|V|markdown
	![151](/images/2020/01/wallpaper/151.jpg)
40a5f5de3f5c03b3ea7ad2cf817d9f5f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|160|1|V|markdown
	![152](/images/2020/01/wallpaper/152.jpg)
c5ce4f2ce44ced8134c72fadb41d37bf|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|161|1|V|markdown
	![153](/images/2020/01/wallpaper/153.jpg)
2bf7cafd3ec3ca1cc454f671ddd0a814|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|162|1|V|markdown
	![154](/images/2020/01/wallpaper/154.webp)
8c54b07cd58b74d6bb62eb8e1a0bf23b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Sharp4.md|163|1|V|markdown
	![155](/images/2020/01/wallpaper/155.webp)
d545b0a09b32e2cf92ee9f78fbb2b922|file:///home/godlovesjonny/.vimrc|427|1|V|vim
	inoremap <C-h> **
ff19dfcdd703fae0e9025137748b6e86|file:///home/godlovesjonny/.vimrc|359|1|v|vim
	Plug 'matze/vim-move'
	l
6ab72dfb14df32bc13cd003c506da8b2|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/Linux-cn-Translation/todo/LCRH-S06-JL.md|94|122|v|markdown
	从根本上来说
e4979c2921670e77505efbd43b15baa4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Numpy-clip.md|4|1|V|markdown
	categories: ["Alchemy Of CV"]
	tags: ["cv", "numpy", "python", "notes"]
2ea9510c37f7f89e4941ff75f62f21cb|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/latex_vspace.md|5|15|v|markdown
	numpy
6cc3a0d3085fe71a835d9211bb42ba3d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/latex_vspace.md|2|14|v|markdown
	vspace
1d314a95689b6fcbe727538cfd26fa33|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/latex_vspace.md|19|18|v|markdown
	The overall architecture of our proposed Adversarial Multi-space Embedding Network (AMEN) is illustrated in (a). Following an encoder-decoder manner, three spaces including a common space, a visual space and a textual space are learned to complement each other. Inter-modal and intra-modal reconstruction paradigms are utilized to realize the cross modal embedding while learning a stronger common space. Losses for training and similarities for testing AMEN are shown in (b). $ID$, $M$, $A$, $CC$ and $RCC$ denote the proposed ID loss, triplet ranking loss, adversarial loss, consistency constraint and reconstruction consistency constraint, respectively. $S_C$, $S_{TL}$, $S_{VL}$, $S_{VR}$ and $S_{TR}$ are the five corresponding cosine similarities employed to test AMEN.
32747d0e8d00fc67449c968ba3eb8203|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/latex_vspace.md|16|9|V|markdown
	        % \centerline{\epsfig{figure=image1.ps,width=8.5cm}}
5ede10a6c19d1c446b9f2cb869b7e798|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/latex_vspace.md|16|49|v|markdown
	ICME_model5
3dc3d96b7ef27726014f015ea5c01100|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL34.md|12|1|V|markdown
	hi Normal ctermfg=252 ctermbg=none
66dae6905e63be6bbda890ae6389d361|file:///home/godlovesjonny/Jonny/Ideas/ideas.md|502|1|V|markdown
	## Deep Supervised Cross-Modal Retrieval (CVPR 2019)
531d11c6ed566d575ed3d54bdabbb496|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|4|1|V|markdown
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
41ec1e9741e7233054a3c21083f4b9f8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|18|18|V|markdown
	![10](/images/2020/01/wallpaper/10.jpg)
	![11](/images/2020/01/wallpaper/11.jpg)
	![12](/images/2020/01/wallpaper/12.jpg)
	![13](/images/2020/01/wallpaper/13.jpg)
	![14](/images/2020/01/wallpaper/14.jpg)
	![15](/images/2020/01/wallpaper/15.jpg)
	![16](/images/2020/01/wallpaper/16.jpg)
	![17](/images/2020/01/wallpaper/17.jpg)
	![18](/images/2020/01/wallpaper/18.jpg)
	![19](/images/2020/01/wallpaper/19.jpg)
71f521eab8329e32e802c6c50b6b77c5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|18|V|markdown
	![11](/images/2020/01/wallpaper/11.jpg)
	![12](/images/2020/01/wallpaper/12.jpg)
	![13](/images/2020/01/wallpaper/13.jpg)
	![14](/images/2020/01/wallpaper/14.jpg)
	![15](/images/2020/01/wallpaper/15.jpg)
	![16](/images/2020/01/wallpaper/16.jpg)
	![17](/images/2020/01/wallpaper/17.jpg)
	![18](/images/2020/01/wallpaper/18.jpg)
	![19](/images/2020/01/wallpaper/19.jpg)
	![20](/images/2020/01/wallpaper/20.jpg)
5e6bfdf7ff6631d9daa2b779798e9b0f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![21](/images/2020/01/wallpaper/21.jpg)
	![22](/images/2020/01/wallpaper/22.jpg)
	![23](/images/2020/01/wallpaper/23.jpg)
	![24](/images/2020/01/wallpaper/24.jpg)
	![25](/images/2020/01/wallpaper/25.jpg)
	![26](/images/2020/01/wallpaper/26.png)
	![27](/images/2020/01/wallpaper/27.jpg)
	![28](/images/2020/01/wallpaper/28.jpg)
	![29](/images/2020/01/wallpaper/29.jpg)
	![30](/images/2020/01/wallpaper/30.png)
2cafe738a75dac7c4bf2ef876168f6fa|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![31](/images/2020/01/wallpaper/31.png)
	![32](/images/2020/01/wallpaper/32.jpg)
	![33](/images/2020/01/wallpaper/33.jpg)
	![34](/images/2020/01/wallpaper/34.jpg)
	![35](/images/2020/01/wallpaper/35.jpg)
	![36](/images/2020/01/wallpaper/36.png)
	![37](/images/2020/01/wallpaper/37.jpg)
	![38](/images/2020/01/wallpaper/38.jpg)
	![39](/images/2020/01/wallpaper/39.jpg)
	![40](/images/2020/01/wallpaper/40.png)
5bcaeabbc6a411deef92296d11bc9ed8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![41](/images/2020/01/wallpaper/41.jpg)
	![42](/images/2020/01/wallpaper/42.jpg)
	![43](/images/2020/01/wallpaper/43.png)
	![44](/images/2020/01/wallpaper/44.png)
	![45](/images/2020/01/wallpaper/45.jpg)
	![46](/images/2020/01/wallpaper/46.jpg)
	![47](/images/2020/01/wallpaper/47.jpg)
	![48](/images/2020/01/wallpaper/48.jpg)
	![49](/images/2020/01/wallpaper/49.jpg)
	![50](/images/2020/01/wallpaper/50.jpg)
f941e1317f16c65701f1e2511e085bca|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL35.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
	tags: ["Ubuntu", "sunlogin", "Linux", "cv"]
2198f3f99a34638a8c28832a90aa6531|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL36.md|5|19|v|markdown
	sunlogin
4cc2ebd2b478b4aaa964e96172455146|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL36.md|2|47|v|markdown
	No additional drivers available 
c7ba5072b95c2116bfcc29521eda1758|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL36.md|9|74|v|markdown
	Additional Drivers 选项卡
d87870a6460a644e5753deaf7931d2bc|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL36.md|18|37|v|markdown
	相应界面 
5ff75ecb562d1d3b22bad4fd0df34c48|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|2|V|markdown
	![51](/images/2020/01/wallpaper/51.jpg)
	![52](/images/2020/01/wallpaper/52.jpg)
	![53](/images/2020/01/wallpaper/53.jpg)
	![54](/images/2020/01/wallpaper/54.jpg)
	![55](/images/2020/01/wallpaper/55.jpg)
	![56](/images/2020/01/wallpaper/56.jpg)
	![57](/images/2020/01/wallpaper/57.jpg)
	![58](/images/2020/01/wallpaper/58.jpg)
	![59](/images/2020/01/wallpaper/59.jpg)
	![60](/images/2020/01/wallpaper/60.png)
afc6a6250fd8686ceec2afd7b3fb1db9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![61](/images/2020/01/wallpaper/61.jpg)
	![62](/images/2020/01/wallpaper/62.png)
	![63](/images/2020/01/wallpaper/63.jpg)
	![64](/images/2020/01/wallpaper/64.jpg)
	![65](/images/2020/01/wallpaper/65.png)
	![66](/images/2020/01/wallpaper/66.jpg)
	![67](/images/2020/01/wallpaper/67.jpg)
	![68](/images/2020/01/wallpaper/68.jpg)
	![69](/images/2020/01/wallpaper/69.jpg)
	![70](/images/2020/01/wallpaper/70.png)
0b5e404b0939c750042cc699a6c4f4ca|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg7.md|2|1|V|markdown
	title: "壁纸分享[7]"
	date: 2020-07-15T00:03:32+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
8b37965f455e8e1c8932e99e74aa010f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg8.md|4|1|V|markdown
	draft: true
efd4d394869bae0b2fdc0e611a959bb3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg8.md|3|1|V|markdown
	date: 2020-12-15T00:03:36+08:00
2afe3b5a4eefb688c63d0c1b68add208|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg8.md|2|1|V|markdown
	title: "Bg8"
94512c641d2a835e07383d4c9c8f19d9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![71](/images/2020/01/wallpaper/71.jpg)
	![72](/images/2020/01/wallpaper/72.jpg)
	![73](/images/2020/01/wallpaper/73.png)
	![74](/images/2020/01/wallpaper/74.jpg)
	![75](/images/2020/01/wallpaper/75.png)
	![76](/images/2020/01/wallpaper/76.jpg)
	![77](/images/2020/01/wallpaper/77.jpg)
	![78](/images/2020/01/wallpaper/78.jpg)
	![79](/images/2020/01/wallpaper/79.jpg)
	![80](/images/2020/01/wallpaper/80.jpg)
2420dd6375766f691ca994af02427c1d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|2|1|V|markdown
	title: "壁纸分享[1]"
	date: 2020-01-26T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
8b67271429d2ee781b36b4230f5a90d8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg9.md|3|1|V|markdown
	date: 2020-12-15T00:03:38+08:00
c52d1b9b403f2732293af65386baa394|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg9.md|2|1|V|markdown
	title: "Bg9"
27851451a45233d13d38c2a6a4855575|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![81](/images/2020/01/wallpaper/81.jpg)
	![82](/images/2020/01/wallpaper/82.jpg)
	![83](/images/2020/01/wallpaper/83.jpg)
	![84](/images/2020/01/wallpaper/84.jpg)
	![85](/images/2020/01/wallpaper/85.jpg)
	![86](/images/2020/01/wallpaper/86.jpg)
	![87](/images/2020/01/wallpaper/87.jpg)
	![88](/images/2020/01/wallpaper/88.jpg)
	![89](/images/2020/01/wallpaper/89.jpg)
	![90](/images/2020/01/wallpaper/90.jpg)
2ac110c81e032366ba0474920f96261b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg9.md|2|1|V|markdown
	title: "壁纸分享[9]"
	date: 2020-08-26T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
46ac9391d322507c1dedce9440cf213e|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg10.md|2|1|V|markdown
	title: "Bg10"
40a1ec6f4e3c142f992d2f7d011aa23b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg10.md|2|1|V|markdown
	date: 2020-12-15T00:03:45+08:00
b35989b514def9eae5e76a228ed4107f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![91](/images/2020/01/wallpaper/91.png)
	![92](/images/2020/01/wallpaper/92.jpg)
	![93](/images/2020/01/wallpaper/93.jpg)
	![94](/images/2020/01/wallpaper/94.jpg)
	![95](/images/2020/01/wallpaper/95.jpg)
	![96](/images/2020/01/wallpaper/96.jpg)
	![97](/images/2020/01/wallpaper/97.jpg)
	![98](/images/2020/01/wallpaper/98.jpg)
	![99](/images/2020/01/wallpaper/99.jpg)
	![100](/images/2020/01/wallpaper/100.jpg)
086765e9bd5deeea631e98928c035a11|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg10.md|2|1|V|markdown
	title: "壁纸分享[10]"
	date: 2020-09-06T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
0a8ece366fe16c9c5658a7cb225af2e5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg11.md|2|1|V|markdown
	title: "Bg11"
	date: 2020-12-15T00:03:48+08:00
	draft: true
c5c6e58188d942035e5c73909944cb87|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![101](/images/2020/01/wallpaper/101.jpg)
	![102](/images/2020/01/wallpaper/102.jpg)
	![103](/images/2020/01/wallpaper/103.jpg)
	![104](/images/2020/01/wallpaper/104.jpg)
	![105](/images/2020/01/wallpaper/105.jpg)
	![106](/images/2020/01/wallpaper/106.jpg)
	![107](/images/2020/01/wallpaper/107.jpg)
	![108](/images/2020/01/wallpaper/108.jpg)
	![109](/images/2020/01/wallpaper/109.jpg)
	![110](/images/2020/01/wallpaper/110.jpg)
65ccaad072f4a161269dea912ba4d52b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg11.md|2|1|V|markdown
	title: "壁纸分享[11]"
	date: 2020-09-12T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
2c4353e4df0f2ed3d36698629e5fb2e6|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg12.md|7|1|V|markdown
	title: "Bg12"
	date: 2020-12-15T00:03:52+08:00
	draft: true
33eaf86ec1fee09ee75a4ebd6858058f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![111](/images/2020/01/wallpaper/111.jpg)
	![112](/images/2020/01/wallpaper/112.jpg)
	![113](/images/2020/01/wallpaper/113.jpg)
	![114](/images/2020/01/wallpaper/114.jpg)
	![115](/images/2020/01/wallpaper/115.jpg)
	![116](/images/2020/01/wallpaper/116.jpg)
	![117](/images/2020/01/wallpaper/117.jpg)
	![118](/images/2020/01/wallpaper/118.jpg)
	![119](/images/2020/01/wallpaper/119.jpg)
	![120](/images/2020/01/wallpaper/120.jpg)
d6e3c67022b22f1786ecc6205116d8ec|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg12.md|2|1|V|markdown
	title: "壁纸分享[12]"
	date: 2020-09-19T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
22184100be99581dbb5b23ca96c551e4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg13.md|7|1|V|markdown
	title: "Bg13"
	date: 2020-12-15T00:03:55+08:00
	draft: true
c2b39c4888639771f051321b62de6640|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![121](/images/2020/01/wallpaper/121.png)
	![122](/images/2020/01/wallpaper/122.jpg)
	![123](/images/2020/01/wallpaper/123.png)
	![124](/images/2020/01/wallpaper/124.jpg)
	![125](/images/2020/01/wallpaper/125.jpg)
	![126](/images/2020/01/wallpaper/126.png)
	![127](/images/2020/01/wallpaper/127.jpg)
	![128](/images/2020/01/wallpaper/128.jpg)
	![129](/images/2020/01/wallpaper/129.jpg)
	![130](/images/2020/01/wallpaper/130.png)
55134fe9286a0afbdcad6a045f6fe491|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg13.md|2|1|V|markdown
	title: "壁纸分享[13]"
	date: 2020-09-24T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
eb09a295dc40a6b78f88279d9cf4f07a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg14.md|7|1|V|markdown
	title: "Bg14"
	date: 2020-12-15T00:03:59+08:00
	draft: true
ebb4c60f1206200869f41a952d8e17df|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![131](/images/2020/01/wallpaper/131.jpg)
	![132](/images/2020/01/wallpaper/132.jpg)
	![133](/images/2020/01/wallpaper/133.jpg)
	![134](/images/2020/01/wallpaper/134.jpg)
	![135](/images/2020/01/wallpaper/135.png)
	![136](/images/2020/01/wallpaper/136.jpg)
	![137](/images/2020/01/wallpaper/137.jpg)
	![138](/images/2020/01/wallpaper/138.jpg)
	![139](/images/2020/01/wallpaper/139.jpg)
	![140](/images/2020/01/wallpaper/140.jpg)
cb4e7d0d95e60d7eff7084ba426cd570|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg14.md|2|1|V|markdown
	title: "壁纸分享[14]"
	date: 2020-10-24T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
f24a1f8319192d2c2935eaa7a7c545cc|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg15.md|7|1|V|markdown
	title: "Bg15"
	date: 2020-12-15T00:04:01+08:00
	draft: true
0e5bb4c58af327dfd6208bda502bad74|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![141](/images/2020/01/wallpaper/141.jpeg)
	![142](/images/2020/01/wallpaper/142.jpeg)
	![143](/images/2020/01/wallpaper/143.png)
	![144](/images/2020/01/wallpaper/144.jpg)
	![145](/images/2020/01/wallpaper/145.jpg)
	![146](/images/2020/01/wallpaper/146.jpg)
	![147](/images/2020/01/wallpaper/147.jpg)
	![148](/images/2020/01/wallpaper/148.jpg)
	![149](/images/2020/01/wallpaper/149.png)
	![150](/images/2020/01/wallpaper/150.jpg)
3eed022b893e0dd948b8c36ac88b3bc0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg15.md|2|1|V|markdown
	title: "壁纸分享[15]"
	date: 2020-11-14T11:35:21+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
142036856d081efa39cee8979fd22a8c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|3|1|V|markdown
	date: 2020-12-15T00:04:04+08:00
3d11f2a272d3dd1d8523d9acabd5a9ce|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|4|1|V|markdown
	date: 2020-11-14T11:35:21+08:00
cf66cd0b23d42e1ec399a47737d519ea|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|2|1|V|markdown
	title: "Bg16"
0eea037cde359388e21121acb82223c0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|19|1|V|markdown
	![151](/images/2020/01/wallpaper/151.jpg)
	![152](/images/2020/01/wallpaper/152.jpg)
	![153](/images/2020/01/wallpaper/153.jpg)
	![154](/images/2020/01/wallpaper/154.webp)
	![155](/images/2020/01/wallpaper/155.webp)
	![156](/images/2020/01/wallpaper/156.webp)
	![157](/images/2020/01/wallpaper/157.jpg)
df79c015ea27402b7e7fea90ba2b32f9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|15|1|V|markdown
	![157](/images/2020/01/wallpaper/157.jpg)
6f7d7f6b8d5124a25b7c8acf8fff56eb|file:///home/godlovesjonny/Jonny/Ideas/ideas-202012.md|9|1|V|markdown
	文本和图像之间的信息有重合部分和不相关部分，重合部分对于匹配的贡献有大有小。
394f79791c765fc66495f28772c43cd4|file:///home/godlovesjonny/Jonny/Ideas/ideas-202012.md|8|1|V|markdown
	## 一点想法
573eb986ae0e640eae01cc365d068475|file:///home/godlovesjonny/Jonny/Ideas/ideas-202012.md|7|1|V|markdown
	# 20201216
3ca0b06659eb443ed93814fb497f9b94|file:///home/godlovesjonny/Jonny/Ideas/ideas-202012.md|1|1|V|markdown
	# 20201214
	## 后续可以尝试的方向
	+ Logical Common Spcae
	+ 正交化分离无关与相关信息，文本和图像之间的信息有重合部分和不相关部分，重合部分对于匹配的贡献有大有小。
	+ 字典化
66ba03e03643b3ebddc39bed57a98778|file:///home/godlovesjonny/Jonny/Ideas/Conferences.md|4|1|V|markdown
	+ ACM MM (Arp.)
039a9a603874e3000eedd79574907a17|file:///home/godlovesjonny/Jonny/Ideas/Conferences.md|4|1|V|markdown
	+ CVPR (Nov.)
3ca228b8e654da9582f2618c2bfd591f|file:///home/godlovesjonny/Jonny/Ideas/Conferences.md|4|1|V|markdown
	+ ICME (Nov.)
32db25512803f62822da4bc9db1e75da|file:///home/godlovesjonny/Jonny/Ideas/Conferences.md|4|8|v|markdown
	2021 
75e90ae55addc2d19da6bca9ec4b70fb|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|521|1|V|markdown
	看一下传统的基于统计性质的方法怎么做的 (参考文献 6, 7, 9, 10
bfa09fd160724bb5e4f1ebe36ecb4903|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|521|1|V|markdown
	看一下传统的基于统计性质的方法怎么做的 (参考文献 6, 7, 9, 10)))
83996ae2b8d576d4cf29bd8b048c7248|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/torch1.md|4|1|V|markdown
	categories: ["Alchemy Of CV"]
	tags: ["cv", "pytorch", "python"]
ba5d763d440db882270a7179f8b9f678|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|539|1|V|markdown
	层叠式注意力
f7e5142b0c465f88c11778b480982ee8|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|513|1|V|markdown
	+ 字典化
61961fce32e3d08b8104cbfa67d967f2|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|510|1|V|markdown
	+ Logical Common Spcae
	+ 正交化分离无关与相关信息，文本和图像之间的信息有重合部分和不相关部分，重合部分对于匹配的贡献有大有小
	+ Zero-shot Learning
	+ 颜色角度入手， RGB 和 灰度图像分别构建一支，尝试引入互学习机制
	+ 字典化
be46e540cc341e8ff6f52be93894647f|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|540|1|V|markdown
	+ 层叠式注意力  
	+ 设计一个新的损失函数，依据id以及相似度，将每个样本的非配对图像分为同 ID、不同 ID 但相似、不同 ID 且相异
9bc177ec079e1f90eb6912c98575c110|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|4|1|V|markdown
	+ 正交化分离无关与相关信息，文本和图像之间的信息有重合部分和不相关部分，重合部分对于匹配的贡献有大有小
311eb8bd584548afec9f1acb4396b1db|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|424|1|V|markdown
	+ 利用 Top-k 做两步过程
	+ 做多域 (multi-domain) 迁移方面的研究
36bf2835c360059e51f7448956173348|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|6|1|V|markdown
	+ Zero-shot Learning
c15fd33e27900b35cc711a73b02fb954|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|5|1|V|markdown
	+ Logical Common Spcae
	+ 颜色角度入手， RGB 和 灰度图像分别构建一支，尝试引入互学习机制
e925c726c3c2dd68bfbdf19308ec1267|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|7|1|V|markdown
	+ 利用 Top-k 做两步过程
c0e0bea247be5f28bf20d418b40ab962|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|7|1|V|markdown
	+ 做多域 (multi-domain) 迁移方面的研究
32c7b4707e17abaef4bcbc9993e253d6|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|6|1|V|markdown
	+ 设计一个新的损失函数，依据id以及相似度，将每个样本的非配对图像分为同 ID、不同 ID 但相似、不同 ID 且相异
0f1e4b99929b77d4658c69a2c0768862|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|5|1|V|markdown
	+ 层叠式注意力 (ASPD 改进)
cf1b897fc3a2f6fcea916ab9d89acf0c|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|7|1|V|markdown
	+ Logical Common Spcae
02e915641fdd6c9309cef3f76ec75a9d|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|8|1|V|markdown
	+ 颜色角度入手， RGB 和 灰度图像分别构建一支，尝试引入互学习机制
af85fb075c781d1b719df5c6ae9b169a|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|544|1|V|markdown
	## 1704.02116 CCL Cross-modal Correlation Learning With Multigrained Fusion by Hierarchical Network (IEEE Trans. Multimedia 2018)
af07031b71aaf57f2d5295314a796fc0|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|548|64|v|markdown
	身体结构信息 
821417834658cac05610734eae6bd3c3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/BLWL36.md|4|1|V|markdown
	categories: ["Better Life With Linux"]
	tags: ["Ubuntu", "drivers", "Nvidia", "Linux", "cv"]
830a96fbb54e61a68939c7582caa2d59|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|12|1|V|markdown
	+ 先分割掉背景，再进行无关相关信息的分离，但是由于图像分辨率较低，分割方面需要思考一下好的算法
1d5b8b04cdfb3264e8e5bedb65c8c75a|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|582|1|V|markdown
	+ Preserving distance 衡量
618f6d12ab05c92f8f2725c141caed8b|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|576|1|V|markdown
	+ 输入向量中的固定数量的部分被随机设置为 0，用以去除向量中的冗余噪声，而后由 encoder 和 decoder 进行重构
74ed6a6f38408ff9567a67bdeabbc094|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|599|1|V|markdown
	+ data-independent hashing method
2feee1ff45b0f155c2b66fca25e5439f|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|594|35|V|markdown
	用对抗样本提高鲁棒性。  
	
	一个理想的对抗样本不仅应该对跨模态检索进行有效攻击，还应该在单模态检索上保持表现不比用干净样本的差，因为若在单模态和跨模态检索上都带来误差会导致对抗样本更容易被检测到。  
	
	### 两种 Hashing Method
	+ data-independent hashing method: hash code 基于随机投影 (random projection) 学习得到
	+ data-dependent hashing method: 需要较长的位数来编码多模态数据
a368d4bcb61b8a90a3b6df051c01fdfd|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|601|1|V|markdown
	先正常训练好模型，再固定网络参数训练对抗样本，然后加入对抗样本后再次训练网络。  
d60af382ca80aa385710071ec6e6017f|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|16|6|V|markdown
	+ 通过分类任务训练出来的 visual backbone 直接用于 reID 可能会缺失细节信息，造成 backbone 之外的网络部分信息负载过大
	+ Logical Common Spcae
	+ 利用 Top-k 做两步过程
	+ 做多域 (multi-domain) 迁移方面的研究
1e02cf6d0b072cefef5f96d8459c6d38|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|24|6|V|markdown
	+ Zero-shot Learning
	+ 字典化
34a7c6f9056550e01e29387408043da6|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|24|1|V|markdown
	## 不太好做
3083236a0c7ce6ff209422713c4bf19d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|17|1|V|markdown
	![159](/images/2020/01/wallpaper/159.jpg)
10ab13a9a9f24f8079025cb23d141678|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg16.md|2|1|V|markdown
	title: "壁纸分享[16]"
	date: 2020-12-15T00:04:04+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
	---
	
	![151](/images/2020/01/wallpaper/151.jpg)
	![152](/images/2020/01/wallpaper/152.jpg)
	![153](/images/2020/01/wallpaper/153.jpg)
	![154](/images/2020/01/wallpaper/154.webp)
	![155](/images/2020/01/wallpaper/155.webp)
	![156](/images/2020/01/wallpaper/156.webp)
	![157](/images/2020/01/wallpaper/157.jpg)
	![158](/images/2020/01/wallpaper/158.png)
	![159](/images/2020/01/wallpaper/159.jpg)
	![160](/images/2020/01/wallpaper/160.jpg)
fedf8072b792a40bc5ac3491917847c7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|7|1|V|markdown
	title: "壁纸分享[16]"
44cbcc1a39cbab1e526b3a60ceea31dc|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|2|1|V|markdown
	title: "Bg17"
6c572d15532be3dd2ce531669f112f82|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|9|1|V|markdown
	draft: false
7cf758d99a8c11ae648da488686a14ba|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|10|35|V|markdown
	![152](/images/2020/01/wallpaper/152.jpg)
	![153](/images/2020/01/wallpaper/153.jpg)
	![154](/images/2020/01/wallpaper/154.webp)
	![155](/images/2020/01/wallpaper/155.webp)
	![156](/images/2020/01/wallpaper/156.webp)
	![157](/images/2020/01/wallpaper/157.jpg)
	![158](/images/2020/01/wallpaper/158.png)
	![159](/images/2020/01/wallpaper/159.jpg)
	![160](/images/2020/01/wallpaper/160.jpg)
f3681c6a535598c104ce19dd089a8cfd|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|9|1|V|markdown
	![161](/images/2020/01/wallpaper/161.jpg)
233cba5ab8b800b253a13f892c0c5390|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|11|1|V|markdown
	![161](/images/2020/01/wallpaper/161.jpg)
	![161](/images/2020/01/wallpaper/161.jpg)
34b2c30e6ebdc44c7a3cc125ff13e2bc|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|677|1|V|markdown
	+ 单独训练 V，固定 T 和 B
a9ac5a6cc3cbe84f9c18323af2b9007f|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|18|17|v|markdown
	methods
357ca203f651f358619871986b36d181|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|18|10|v|markdown
	based 
4f875680b198c1753087a096411ff79d|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|711|1|V|markdown
	+ 为新任务增加输出维度
c0ded56b76ee6d5ab774019be2bdaff1|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|727|128|v|markdown
	Step 
0b5e14b1d69e055e082f7f98f08b9a30|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|731|1|V|markdown
	+ 核心
6249ff3bd0df00d9678e6222ae2db321|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|731|1|v|markdown
	self-taught distillation 
f7d2224754e43d09006600ac771533c1|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|766|1|V|markdown
	## 2002.02196 AI-GAN: Attack-Inspired Generation of Adversarial Examples
a1e6c47f4ec86841b8a7a1b8fd6b96f9|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|5|1|V|markdown
	+ 直接分离
82ec5214aa877fd5fc5ead10b4358146|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|12|1|V|markdown
	+ 层叠式更新 local feature
5f5589e6ace6234e70e9a7d60a3eabd1|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|771|1|V|markdown
	## Learning Context Graph for Person Search (CVPR 2019)
140fd280ae4e9b51dbf82161448d89ab|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|771|1|V|markdown
	## Learning Context Graph for Person Search (CVPR 2019)
	
d2f0407460266f9898a36198ba3b6d77|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|10|1|V|markdown
	+ 对抗样本的使用：先正常训练好模型，再固定网络参数训练对抗样本，然后加入对抗样本后再次训练网络。 (RDN)  
27d19bfae2f2c43a97c71ef6711c7ecc|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|773|1|V|markdown
	比起通常方法所关注的图文
cea1a161b6f38ac9189d204a6ff0e231|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|797|1|v|markdown
	abcdefg 
28d8296c75498912e21c38ec2ddd9b7b|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|797|1|V|markdown
	## 2006.03677 Visual Transformers - Token-based Image Representation and Processing for Computer Vision
50e595a48fd7bca27800ec3de1fa0e63|file:///home/godlovesjonny/Jonny/Ideas/ideas-2020.md|799|1|V|markdown
	# 2020
465edcd9031e033adb2d52fe5ea54aea|file:///home/godlovesjonny/Jonny/Java/Hello.java|4|1|V|java
	public_method
cab8111fd0b710a336c898e539090e34|file:///home/godlovesjonny/Jonny/Java/Hello.java|1|8|v|java
	void
cb7d3ad93ae7e2caf93a093ce042f9c7|file:///home/godlovesjonny/Jonny/Java/Hello.java|5|1|V|java
	    public_static_method
b068931cc450442b63f5b3d276ea4297|file:///home/godlovesjonny/Jonny/Java/Hello.java|2|24|v|java
	name
e667c6fa46acebbae04e02cd556258f6|file:///home/godlovesjonny/Jonny/Ideas/ideas-2021.md|26|1|V|markdown
	ehfhhjfvhfhfhujfhfhhfhfhfhhfhfhfhfhhfhfhf
8fefc28c0a4a3e0b5e1efe43ca086d97|file:///home/godlovesjonny/Jonny/Ideas/ideas-2021.md|57|1|V|markdown
	## 2101.03697 RepVGG: Making VGG-style ConvNets Great Again
784fa9f5b687497176064b3da69ca29e|file:///home/godlovesjonny/Jonny/Temp-Storage/Spam/select.py|3|1|V|python
	# 各宿舍报名同学学号
	dom208 = [13, 15]
	dom213 = [19, 22, 23, 24]
	dom101 = [40, 43]
0f62973ecd57dce595020ddf8f0609cb|file:///home/godlovesjonny/Jonny/Temp-Storage/Spam/select.py|8|30|V|python
	# 从各宿舍随机抽取两名同学的学号
	result208 = random.sample(dom208, 2)
	result213 = random.sample(dom213, 2)
	result101 = random.sample(dom101, 2)
282400d33768d946467c27e3ca2046c8|file:///home/godlovesjonny/Jonny/Temp-Storage/Spam/select.py|8|1|V|python
	result = random.sample(to_choose, 3)
e8252905cf301953a618bd5eee8000f7|file:///home/godlovesjonny/Jonny/Temp-Storage/Spam/select.py|14|1|V|python
	print("101宿舍结果：", result101)
5a97a61c9316c76b318ff04a86cc8ded|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|7|1|V|markdown
	## Todo List
dd159268067549b5c7e8d9c5daaf9dd7|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|6|1|V|markdown
	
	## Figures To Draw
	+ Motivation Figure
	+ Methodology Figure
	+ t-SNE figure
	+ retrieval result feature
	+ drop rate comparision figure
	
a89a0d28626d892bcb86fd893fcc43be|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|6|1|V|markdown
	
	## Figures To Draw
	+ Motivation Figure
	+ Methodology Figure
	+ t-SNE figure
	+ retrieval result feature
	+ drop rate comparision figure
e28ca917c58d553dbd7587ca63d67728|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|12|25|v|markdown
	Module 
9180d068812f78e8037f508f733e7dae|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|9|22|v|markdown
	Decoder 
61cab1df8f733f06a86f1b0343ecdac7|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|14|1|V|markdown
	+ Cross-modal Consistency Constraint (CCC)
741c98e9bc9b24f4cb6225028f0cf2fc|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|1|3|v|markdown
	Ideas 
17cc6daaddda7e683dc9a8cda9fc80aa|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|10|232|v|markdown
	在这种情况下
e6ddf93b9bbe306a67f5f70286b6e555|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|20|269|v|markdown
	EEventually I got a contract at a small web shop, working on [Safety Town][9], a government road safety website for kids.
2bc08ca5bf1e90b4570f985828f08191|file:///home/godlovesjonny/Jonny/Ideas/SIGIR2021_ideas.md|35|1|V|markdown
	+ retrieval result feature
8afa1d77b4bb77c491f68d7158763774|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|14|1|V|markdown
	![166](/images/2020/01/wallpaper/166.jpg)
695b5656c93aa816151259cea1b198e4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|14|1|V|markdown
	![166](/images/2020/01/wallpaper/166.jpg)
	![167](/images/2020/01/wallpaper/167.png)
18ee0f6e883a794d1d08d62d6c997fd0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|17|1|V|markdown
	![169](/images/2020/01/wallpaper/169.png)
6afa234521b742ece55a384648c5dfab|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg17.md|1|1|V|markdown
	---
	title: "壁纸分享[17]"
	date: 2020-12-23T13:19:04+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
	---
	
	![161](/images/2020/01/wallpaper/161.jpg)
	![162](/images/2020/01/wallpaper/162.jpg)
	![163](/images/2020/01/wallpaper/163.jpg)
	![164](/images/2020/01/wallpaper/164.jpg)
	![165](/images/2020/01/wallpaper/165.png)
	![166](/images/2020/01/wallpaper/166.jpg)
	![167](/images/2020/01/wallpaper/167.png)
	![168](/images/2020/01/wallpaper/168.jpg)
	![169](/images/2020/01/wallpaper/169.png)
	![170](/images/2020/01/walpalper/170.webp)
9e2bd579a18968f9aff207f1d149219d|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg18.md|8|1|V|markdown
	title: "壁纸分享[17]"
63af27adc4d1b09c31b012dba38227d5|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg18.md|2|1|V|markdown
	title: "Bg18"
2efbe400bed4e9f3e4e5fa703e8f0a05|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg18.md|9|19|V|markdown
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
f2aa5241f83b10615f823616396c879f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg18.md|9|1|V|markdown
	---
	date: 2020-12-23T13:19:04+08:00
	---
6a294358579240936bf4d66151e6e720|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg18.md|18|38|v|markdown
	webp
82eaf61f2f5bf8cf8675ab9e3ee6afc8|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/RWTReid_Captioning/README.md|19|34|V|markdown
	## 数据集标注程序使用指南
	+ 安装 Jupyter Notebook
	+ 打开 `RWTReid_Captioning.ipynb` 文件并运行即可
	+ 若出现找不到库的错误，根据本机的 Python 环境 pip 或 conda install 一下对应的库即可
	
0231a3bc690d009046408d3b9251bcfd|file:///home/godlovesjonny/Jonny/Ideas/ideas-2021.md|96|1|V|markdown
	## Query specific re-ranking for improved cross-modal retrieval (PR Letters 2017)
	
68a9d552017496b7516a4f1676cdaa16|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_sentences.txt|49|1|V|text
	The man is wearing a red jacket that is open. He has on blue jeans.
cd8040a6ea28cc964f4f77e666347807|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/examples.txt|1|46|v|text
	 He has on blue jeans.
0c358f9d7f5f3c31714020b37aa2eb32|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|3|10|v|markdown
	性别年龄等方面
8852fcb0837b4ca931ae1812dbb571ee|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|5|1|V|markdown
	+ The woman ...
b3cea5397e0c8189981432e4a32f6d1b|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|5|1|V|markdown
	+ A boy ...
608371475264ca720adcc2c2fb7c8c78|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|35|1|V|markdown
	knickers 	（女用）内裤
48587bc2195b58fb36978e3c5755f0d7|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|57|1|V|markdown
	swimming costume 	泳衣
df6417bb8a2b5415d5ad9e2d5891eb0b|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|57|1|V|markdown
	swimming trunks 	泳裤
f784a9277f0a9c358f88f72de6aeaaa9|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|57|1|V|markdown
	thong 	丁字裤
63366bfbe6843714448a023d12a404b8|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|65|1|V|markdown
	underpants 	内裤
d74cf3635243aa04b31f3c30531d0948|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|23|1|V|markdown
	bra 	胸罩
aac357e4f880951a785225837c36f652|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|16|12|V|markdown
	+ belt 	皮带
	+ bikini 	比基尼
9f157046c9bf658f602263b0c0896152|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|23|1|V|markdown
	+ dinner jacket 	晚礼服
dac9aaa217e26821ff48df0811c17159|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|23|1|V|markdown
	+ dress 	连衣裙
83821fde4e628af9fe875644b2fff719|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|24|1|V|markdown
	+ gloves 	手套
75ca0b7f3f1abf475c81ed2db2575da9|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|81|1|V|markdown
	+ gray/grey 灰色
2520f660a406e556bd5cb69bcdfd2b68|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|80|1|V|markdown
	+ covered in alternate horizontal lines of black and gray 黑灰交替的横条纹
5d99cc7267532586c807da052d202f0b|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|79|1|V|markdown
	+ hand bag
fb6df52ff67002c4ac73343fbc162f42|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|82|1|V|markdown
	+ case
bdba9d358ba9e4f23b282ba8935eaf71|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/example_captions.md|85|4|v|markdown
	颜色与纹理材质词
a5bb113a1d9f4ebe21b2bb9f06dce8b4|file:///home/godlovesjonny/Jonny/Pys/cross-modal%20reid%20code/DatasetA/%E6%A0%87%E6%B3%A8%E7%A4%BA%E4%BE%8B.md|19|1|V|markdown
	THE DARK HAIRED WOMAN CARRYING A SHOPPING BAG IS DRESSED IN BLACK SLACKS AND A  STRIPED BLOUSE.
3db06a6c2881e5fd2f5a673510e90840|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/ldp1.md|2|1|V|markdown
	title: "炼丹杂记 -- '\_xsrf' argument missing from POST 解决方法"
	date: 2020-11-12T12:47:56+08:00
	categories: ["Alchemy Of CV"]
	tags: ["cv", "notes", "deep learning", "jupyter notebook", "python"]
	draft: false
86f08ade077b4dceeb85372d1d0e1973|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/ldp2.md|2|9|v|markdown
	Ldp2
545654686a68d9973ab8f42b55d7c353|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/ldp2.md|9|1|V|markdown
	categories: ["Alchemy Of CV"]
	tags: ["cv", "notes", "deep learning", "jupyter notebook", "python"]
8da94a6ce258460535591a3655a5e3db|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/ldp2.md|4|41|v|markdown
	jupyter 
fb5d1b4a2312e239652b13a24ed9a74f|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/ldp2.md|4|41|v|markdown
	notebook
390c4c53042e4de3821051f7649dfbf2|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg18.md|1|1|V|markdown
	---
	title: "壁纸分享[18]"
	date: 2021-01-20T01:22:14+08:00
	categories: ["Sharp Tools"]
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
	---
	
	![171](/images/2020/01/wallpaper/171.jpg)
	![172](/images/2020/01/wallpaper/172.webp)
	![173](/images/2020/01/wallpaper/173.jpg)
	![174](/images/2020/01/wallpaper/174.webp)
	![175](/images/2020/01/wallpaper/175.jpg)
	![176](/images/2020/01/wallpaper/176.jpg)
	![177](/images/2020/01/wallpaper/177.jpg)
	![178](/images/2020/01/wallpaper/178.jpg)
	![179](/images/2020/01/wallpaper/179.png)
	![180](/images/2020/01/walpalper/180.png)
d32f39ded765e329da06128820e68e89|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|8|1|V|markdown
	title: "壁纸分享[18]"
5015fc39dddde22531023181b4ed1d62|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|2|1|V|markdown
	title: "Bg19"
a3f2229e976fc130dda497ee6cd674e0|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|10|1|V|markdown
	tags: ["linux", "wallpaper", "manjaro", "kde"]
	draft: false
	---
3fb200c7f0ca41062354e56dca75868e|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|9|1|V|markdown
	---
	date: 2021-01-20T01:22:14+08:00
	---
fdbc224697515d864a53ac17b9929701|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|10|35|V|markdown
	![172](/images/2020/01/wallpaper/172.webp)
	![173](/images/2020/01/wallpaper/173.jpg)
	![174](/images/2020/01/wallpaper/174.webp)
	![175](/images/2020/01/wallpaper/175.jpg)
	![176](/images/2020/01/wallpaper/176.jpg)
	![177](/images/2020/01/wallpaper/177.jpg)
	![178](/images/2020/01/wallpaper/178.jpg)
	![179](/images/2020/01/wallpaper/179.png)
	![180](/images/2020/01/walpalper/180.png)
2659a62f4922c6a6874bd1eaa18bc070|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/Bg19.md|9|1|V|markdown
	![181](/images/2020/01/wallpaper/181.jpg)
f69b64c1dd1462561beaf610f11bcdf7|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|4|15|v|markdown
	Sharp 
8625e1de7be14c39b1d14dc03d822497|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|4|15|v|markdown
	Tools
935b1c1b9aadeabbb65fb301f33c3949|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg1.md|4|1|V|markdown
	categories: ["Awesome Wallpapers"]
8f0ff3abd878d10e0dae54e49fa5ceae|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg2.md|4|1|V|markdown
	categories: ["Sharp Tools"]
a81f838c477302a15040eb3c028fcd30|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Bg4.md|4|15|v|markdown
	Sharp Tools
9cafc238f25a23bfac959e37617ff13f|file:///home/godlovesjonny/Jonny/Ideas/to-imp.md|8|1|V|markdown
	+ 输入向量中固定数量的部分随机设置为 0，用以去除向量中的冗余噪声，而后由 encoder 和 decoder 进行重构
428032359f3af7e3ede75f2cb0795d28|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2020/Eng1.md|4|1|V|markdown
	categories: ["Language Learning"]
	tags: ["English"]
fedd1abeaec0eda73734f96d2f9ad112|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-vocab-notes.md|4|1|V|markdown
	categories: ["Language Learning"]
	tags: ["English", "CATTI"]
d40991bd8019cbe2428be1bcd2595420|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-article-notes.md|2|29|v|markdown
	CATTI 
5e2f8ee473fdebc99fef4dc9e7ee3146|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-article-notes.md|2|29|v|markdown
	Article
f4c6f851b00d5518bf888815de279aba|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-article-notes.md|2|29|v|markdown
	Notes
f5ea019058d151eca85024c366ba7b6f|file:///home/godlovesjonny/Jonny/Open-Source/Translation-Scripts/CATTI/20200210.md|1|1|V|markdown
	pdd9
d9d4faa99eba6ca89c689b5da1e61c4c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|15|1|V|markdown
	**on the whole**    整体上来说  
bb4d35e68d609a1bdd043694cc20ccab|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|19|1|V|markdown
	中文：先出主语 + 废话（包括定语、状语、补语和插入语等） + 最重要的成分  
2d01694a4f038e959a8cc70c5ccea1ed|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|20|25|v|markdown
	废话（包括定语、状语、补语和插入语等） 
70ec8efcb87173cd02ac6bde7192a826|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|21|1|V|markdown
	英文：先出
eb17dd8469c43106ca9c1c0c7932b161|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|33|1|V|markdown
	### 词汇积累
	| Eng          | Chi        |
	|--------------|------------|
1f5fa675f62b1a465cc4f33fc26b6bd9|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|79|1|V|markdown
	## 第四天 突破英文中被动语态的翻译（一）
74ff66e9082a2c7c50ce4e1a9c583c72|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|113|1|V|markdown
	#### e.g. 
64fdfb5ad34b31ef371857f3ab43e8ad|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|129|1|V|markdown
	#### e.g.ll
f4786be059a7800effeabb35c262d276|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|131|11|V|markdown
	#### e.g. The suggestion of mine is that...
	我建议 ……  
6a8e2cd10dac69950079f2716fa8c52a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|67|1|V|markdown
	### 词汇积累
	| Eng                                    | Chi                                      |
	|----------------------------------------|------------------------------------------|
869248d565d595904d9e54acbae2849a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|155|1|V|markdown
	### 词汇积累
	| Eng                      | Chi      |
	|--------------------------|----------|
bf26f633519ae0fde74d3bda3026d761|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|226|1|V|markdown
	**反映到翻译问题中：英译汉时，可以省略部分的连词；而汉译英时，要判断句与句之间的关系，然后在句子之间加上连词，而不是单纯把中文翻译出来。  
02dd05780a81537be919645d22c68509|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|210|14|V|markdown
	### 词汇积累
	| Eng           | Chi    |
	|---------------|--------|
	| sounding-line | 探测绳 |
924e852163d59c461f629059c8fd1f6b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|210|1|V|markdown
	### 词汇积累
	| Eng           | Chi    |
	|---------------|--------|
e5b0e560601baa71f38657768a9875df|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|226|8|V|markdown
	### 第二种情况：增减范围词和对象词
	#### e.g. 我国先秦的思想家 ……
	Our China's thinkers in Pre-Qin Days over 2,000 years ago...  
	增加范围词 over 2,000 years ago  
	
	### 第三种情况：增减范畴词
	#### e.g. 我有五百元钱。
	I have five hundred yuan.  
	“钱”字翻译时省略，这就是汉译英的减词。  
	
cfd6d940758062b6cb5bef5c34b2bc2c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|264|1|V|markdown
	### 词汇积累
	| Eng                    | Chi                                                              |
	|------------------------|------------------------------------------------------------------|
d2e9c68c150348f147815c9e2917cde4|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|285|1|V|markdown
	|----------------------------------|-------------|
f3fa895038fd5a579624df4fdb2360b8|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|237|1|V|markdown
	**并不是所有范畴词都要省略，要具体问题具体分析。**  
e8cc74ac222d90c055a1191ab914db2b|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|281|1|V|markdown
	### 词汇积累
	| Eng                              | Chi              |
	|----------------------------------|------------------|
60194e2fb1cfa698bc9e79722e2e2163|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|311|1|V|markdown
	### 英译汉换主语情况二 —— 在中文里找到“隐藏主语”
90ea2c0f4a305357092a515c30b4d7af|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|320|40|v|markdown
	在中文里找到“隐藏主语”
303d4f884783777c99fc1c317918134a|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|322|29|V|markdown
	### 汉译英无主语句子处理
	无主语句变**被动语态**。  
	
a4439dc41b87a5f39e2b1dff593f79fc|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|328|1|V|markdown
	### 词汇积累
	| Eng                                                                       | Chi                        |
	|---------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------|
b0810e1dd7f5956f503290a9a77c8707|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|9|1|V|markdown
	## 第一天 突破英文中定语从句的翻译（一）
48aba2ad754d561b80e018c436117337|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|76|1|V|markdown
	+ It is oftern said that
587a362674a616402f0e79cd603c4879|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|80|1|V|markdown
	|i--------------------------|-------------|
6d8007621e562cb3c9aabea942ebc324|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-WF12-notes.md|4|1|V|markdown
	categories: ["Language Learning"]
	tags: ["English", "CATTI", "notes"]
48b8df78a88b880fe4aacd3fdd8d6dac|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-HG903-notes.md|2|29|v|markdown
	CATTI HG903 
57d6e6c2a9ba923c26d7f6701db1e00c|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-HG903-notes.md|17|1|V|markdown
	英文强调具体形象，而中文强调宏观概括。  
6f02764dedf859a7636b0f67dbd914ff|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-HG903-notes.md|11|4|V|markdown
	## 第一部分
	
5af476e41589d901f4a148ffe9b3e379|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|2|9|v|markdown
	CATTI SCECT Notes
ef99e8c28b06f7791f789eb54c112e44|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|60|31|V|markdown
	| Chi      | Eng              |
	|----------|------------------|
	| 陶瓷工业 | pottery industry |
	
3242b41abdb384f3bb05c05c2a053dd2|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|62|1|V|markdown
	#### e.g. It was not simply a source of power, it was a new wave of movement.
040276bc5d8a065ec8a3496c1d7d7de3|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|70|1|V|markdown
	|------------------|------------------------------------|
e739f2381d4d48122fa86e1d90a05f13|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|86|1|V|markdown
	|-----------------------------------|------------------------------------------------------------------|
cbfc54eb7da1953fd99c59a408e3cd57|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|80|35|V|markdown
	### “撤销职务”的一种译法
	dismiss sb. from
	
aaca8cb4674d396ea5b194934ed58d24|file:///home/godlovesjonny/Jonny/Hugo-pages/jonathan-blog/content/posts/2021/CATTI-SCECT-notes.md|114|1|V|markdown
	""""""
